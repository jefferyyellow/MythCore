// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: roommodule.hxx

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "roommodule.hxx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* UCreateGame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UCreateGame_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ROOM_MODULE_MSG_ID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_roommodule_2ehxx() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_roommodule_2ehxx() {
  protobuf_AddDesc_roommodule_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "roommodule.hxx");
  GOOGLE_CHECK(file != NULL);
  UCreateGame_descriptor_ = file->message_type(0);
  static const int UCreateGame_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UCreateGame, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UCreateGame, gametpye_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UCreateGame, gametimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UCreateGame, gameperson_),
  };
  UCreateGame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UCreateGame_descriptor_,
      UCreateGame::internal_default_instance(),
      UCreateGame_offsets_,
      -1,
      -1,
      -1,
      sizeof(UCreateGame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UCreateGame, _internal_metadata_));
  ROOM_MODULE_MSG_ID_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_roommodule_2ehxx);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UCreateGame_descriptor_, UCreateGame::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_roommodule_2ehxx() {
  UCreateGame_default_instance_.Shutdown();
  delete UCreateGame_reflection_;
}

void protobuf_InitDefaults_roommodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  UCreateGame_default_instance_.DefaultConstruct();
  UCreateGame_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_roommodule_2ehxx_once_);
void protobuf_InitDefaults_roommodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_roommodule_2ehxx_once_,
                 &protobuf_InitDefaults_roommodule_2ehxx_impl);
}
void protobuf_AddDesc_roommodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_roommodule_2ehxx();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016roommodule.hxx\"T\n\013UCreateGame\022\014\n\004type\030"
    "\001 \001(\r\022\020\n\010gametpye\030\002 \001(\r\022\021\n\tgameTimes\030\003 \001"
    "(\021\022\022\n\ngamePerson\030\004 \001(\021*.\n\022ROOM_MODULE_MS"
    "G_ID\022\030\n\024ID_ROOM_MODULE_ERROR\020\000b\006proto3", 158);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "roommodule.hxx", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_roommodule_2ehxx);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_roommodule_2ehxx_once_);
void protobuf_AddDesc_roommodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_roommodule_2ehxx_once_,
                 &protobuf_AddDesc_roommodule_2ehxx_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_roommodule_2ehxx {
  StaticDescriptorInitializer_roommodule_2ehxx() {
    protobuf_AddDesc_roommodule_2ehxx();
  }
} static_descriptor_initializer_roommodule_2ehxx_;
const ::google::protobuf::EnumDescriptor* ROOM_MODULE_MSG_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ROOM_MODULE_MSG_ID_descriptor_;
}
bool ROOM_MODULE_MSG_ID_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UCreateGame::kTypeFieldNumber;
const int UCreateGame::kGametpyeFieldNumber;
const int UCreateGame::kGameTimesFieldNumber;
const int UCreateGame::kGamePersonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UCreateGame::UCreateGame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_roommodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:UCreateGame)
}

void UCreateGame::InitAsDefaultInstance() {
}

UCreateGame::UCreateGame(const UCreateGame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UCreateGame)
}

void UCreateGame::SharedCtor() {
  ::memset(&type_, 0, reinterpret_cast<char*>(&gameperson_) -
    reinterpret_cast<char*>(&type_) + sizeof(gameperson_));
  _cached_size_ = 0;
}

UCreateGame::~UCreateGame() {
  // @@protoc_insertion_point(destructor:UCreateGame)
  SharedDtor();
}

void UCreateGame::SharedDtor() {
}

void UCreateGame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UCreateGame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UCreateGame_descriptor_;
}

const UCreateGame& UCreateGame::default_instance() {
  protobuf_InitDefaults_roommodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UCreateGame> UCreateGame_default_instance_;

UCreateGame* UCreateGame::New(::google::protobuf::Arena* arena) const {
  UCreateGame* n = new UCreateGame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UCreateGame::Clear() {
// @@protoc_insertion_point(message_clear_start:UCreateGame)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UCreateGame, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UCreateGame*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, gameperson_);

#undef ZR_HELPER_
#undef ZR_

}

bool UCreateGame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UCreateGame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_gametpye;
        break;
      }

      // optional uint32 gametpye = 2;
      case 2: {
        if (tag == 16) {
         parse_gametpye:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gametpye_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_gameTimes;
        break;
      }

      // optional sint32 gameTimes = 3;
      case 3: {
        if (tag == 24) {
         parse_gameTimes:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gametimes_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_gamePerson;
        break;
      }

      // optional sint32 gamePerson = 4;
      case 4: {
        if (tag == 32) {
         parse_gamePerson:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &gameperson_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UCreateGame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UCreateGame)
  return false;
#undef DO_
}

void UCreateGame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UCreateGame)
  // optional uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional uint32 gametpye = 2;
  if (this->gametpye() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gametpye(), output);
  }

  // optional sint32 gameTimes = 3;
  if (this->gametimes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->gametimes(), output);
  }

  // optional sint32 gamePerson = 4;
  if (this->gameperson() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->gameperson(), output);
  }

  // @@protoc_insertion_point(serialize_end:UCreateGame)
}

::google::protobuf::uint8* UCreateGame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UCreateGame)
  // optional uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional uint32 gametpye = 2;
  if (this->gametpye() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gametpye(), target);
  }

  // optional sint32 gameTimes = 3;
  if (this->gametimes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->gametimes(), target);
  }

  // optional sint32 gamePerson = 4;
  if (this->gameperson() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->gameperson(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UCreateGame)
  return target;
}

size_t UCreateGame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UCreateGame)
  size_t total_size = 0;

  // optional uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // optional uint32 gametpye = 2;
  if (this->gametpye() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gametpye());
  }

  // optional sint32 gameTimes = 3;
  if (this->gametimes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->gametimes());
  }

  // optional sint32 gamePerson = 4;
  if (this->gameperson() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->gameperson());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UCreateGame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UCreateGame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UCreateGame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UCreateGame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UCreateGame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UCreateGame)
    UnsafeMergeFrom(*source);
  }
}

void UCreateGame::MergeFrom(const UCreateGame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UCreateGame)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UCreateGame::UnsafeMergeFrom(const UCreateGame& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.gametpye() != 0) {
    set_gametpye(from.gametpye());
  }
  if (from.gametimes() != 0) {
    set_gametimes(from.gametimes());
  }
  if (from.gameperson() != 0) {
    set_gameperson(from.gameperson());
  }
}

void UCreateGame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UCreateGame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UCreateGame::CopyFrom(const UCreateGame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UCreateGame)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UCreateGame::IsInitialized() const {

  return true;
}

void UCreateGame::Swap(UCreateGame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UCreateGame::InternalSwap(UCreateGame* other) {
  std::swap(type_, other->type_);
  std::swap(gametpye_, other->gametpye_);
  std::swap(gametimes_, other->gametimes_);
  std::swap(gameperson_, other->gameperson_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UCreateGame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UCreateGame_descriptor_;
  metadata.reflection = UCreateGame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UCreateGame

// optional uint32 type = 1;
void UCreateGame::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 UCreateGame::type() const {
  // @@protoc_insertion_point(field_get:UCreateGame.type)
  return type_;
}
void UCreateGame::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:UCreateGame.type)
}

// optional uint32 gametpye = 2;
void UCreateGame::clear_gametpye() {
  gametpye_ = 0u;
}
::google::protobuf::uint32 UCreateGame::gametpye() const {
  // @@protoc_insertion_point(field_get:UCreateGame.gametpye)
  return gametpye_;
}
void UCreateGame::set_gametpye(::google::protobuf::uint32 value) {
  
  gametpye_ = value;
  // @@protoc_insertion_point(field_set:UCreateGame.gametpye)
}

// optional sint32 gameTimes = 3;
void UCreateGame::clear_gametimes() {
  gametimes_ = 0;
}
::google::protobuf::int32 UCreateGame::gametimes() const {
  // @@protoc_insertion_point(field_get:UCreateGame.gameTimes)
  return gametimes_;
}
void UCreateGame::set_gametimes(::google::protobuf::int32 value) {
  
  gametimes_ = value;
  // @@protoc_insertion_point(field_set:UCreateGame.gameTimes)
}

// optional sint32 gamePerson = 4;
void UCreateGame::clear_gameperson() {
  gameperson_ = 0;
}
::google::protobuf::int32 UCreateGame::gameperson() const {
  // @@protoc_insertion_point(field_get:UCreateGame.gamePerson)
  return gameperson_;
}
void UCreateGame::set_gameperson(::google::protobuf::int32 value) {
  
  gameperson_ = value;
  // @@protoc_insertion_point(field_set:UCreateGame.gamePerson)
}

inline const UCreateGame* UCreateGame::internal_default_instance() {
  return &UCreateGame_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
