// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: roommodule.hxx

#ifndef PROTOBUF_roommodule_2ehxx__INCLUDED
#define PROTOBUF_roommodule_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_roommodule_2ehxx();
void protobuf_InitDefaults_roommodule_2ehxx();
void protobuf_AssignDesc_roommodule_2ehxx();
void protobuf_ShutdownFile_roommodule_2ehxx();

class DAllGameBet;
class DDissposeAsk;
class DDissposeRoom;
class DEnterGame;
class DErrorMessage;
class DGameOver;
class DLeaveRoom;
class DReady;
class DReconnectData;
class DStartGame;
class DSyncPlayerData;
class DYSZCheckPoker;
class DYSZCompareCards;
class DYSZNoticePlayPassCard;
class UCreateGame;
class UDissposeConfirm;
class UEnterGame;
class UGameBet;
class ULeaveRoom;
class UReady;
class URequestDissposeRoom;
class UStartGame;
class UYSZCheckPoker;
class UYSZCompareCards;
class UYSZPass;

enum ROOM_MODULE_MSG_ID {
  ID_ROOM_MODULE_ERROR = 0,
  ID_C2S_REQUEST_CREATE_ROOM = 2048,
  ID_C2S_REQUEST_ENTER_GAME = 2049,
  ID_S2C_NOTIFY_ENTER_GAME = 2050,
  ID_C2S_REQUEST_READY = 2051,
  ID_S2C_RESPONSE_READY = 2052,
  ID_S2C_NOTIFY_SYNC_PLAYER_DATA = 2053,
  ID_C2S_REQUEST_LEAVE_ROOM = 2054,
  ID_C2S_RESPONSE_LEAVEROOM = 2055,
  ID_S2C_NOTIFY_LEAVE_ROOM = 2056,
  ID_C2S_REQUEST_START_GAME = 2057,
  ID_S2C_NOTIFY_START_GAME = 2058,
  ID_S2C_NOTIFY_GAME_OVER = 2059,
  ID_C2S_REQUEST_GAME_BET = 2060,
  ID_S2C_NOTIFY_ALL_GAME_BET = 2061,
  ID_C2S_REQUEST_CHECK_POKER = 2062,
  ID_S2C_RESPONSE_CHECK_POKER = 2063,
  ROOM_MODULE_MSG_ID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ROOM_MODULE_MSG_ID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ROOM_MODULE_MSG_ID_IsValid(int value);
const ROOM_MODULE_MSG_ID ROOM_MODULE_MSG_ID_MIN = ID_ROOM_MODULE_ERROR;
const ROOM_MODULE_MSG_ID ROOM_MODULE_MSG_ID_MAX = ID_S2C_RESPONSE_CHECK_POKER;
const int ROOM_MODULE_MSG_ID_ARRAYSIZE = ROOM_MODULE_MSG_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ROOM_MODULE_MSG_ID_descriptor();
inline const ::std::string& ROOM_MODULE_MSG_ID_Name(ROOM_MODULE_MSG_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ROOM_MODULE_MSG_ID_descriptor(), value);
}
inline bool ROOM_MODULE_MSG_ID_Parse(
    const ::std::string& name, ROOM_MODULE_MSG_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ROOM_MODULE_MSG_ID>(
    ROOM_MODULE_MSG_ID_descriptor(), name, value);
}
// ===================================================================

class UCreateGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UCreateGame) */ {
 public:
  UCreateGame();
  virtual ~UCreateGame();

  UCreateGame(const UCreateGame& from);

  inline UCreateGame& operator=(const UCreateGame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UCreateGame& default_instance();

  static const UCreateGame* internal_default_instance();

  void Swap(UCreateGame* other);

  // implements Message ----------------------------------------------

  inline UCreateGame* New() const { return New(NULL); }

  UCreateGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UCreateGame& from);
  void MergeFrom(const UCreateGame& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UCreateGame* other);
  void UnsafeMergeFrom(const UCreateGame& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 gametpye = 2;
  void clear_gametpye();
  static const int kGametpyeFieldNumber = 2;
  ::google::protobuf::uint32 gametpye() const;
  void set_gametpye(::google::protobuf::uint32 value);

  // optional sint32 gameTimes = 3;
  void clear_gametimes();
  static const int kGameTimesFieldNumber = 3;
  ::google::protobuf::int32 gametimes() const;
  void set_gametimes(::google::protobuf::int32 value);

  // optional sint32 gamePerson = 4;
  void clear_gameperson();
  static const int kGamePersonFieldNumber = 4;
  ::google::protobuf::int32 gameperson() const;
  void set_gameperson(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UCreateGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 gametpye_;
  ::google::protobuf::int32 gametimes_;
  ::google::protobuf::int32 gameperson_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UCreateGame> UCreateGame_default_instance_;

// -------------------------------------------------------------------

class UEnterGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UEnterGame) */ {
 public:
  UEnterGame();
  virtual ~UEnterGame();

  UEnterGame(const UEnterGame& from);

  inline UEnterGame& operator=(const UEnterGame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UEnterGame& default_instance();

  static const UEnterGame* internal_default_instance();

  void Swap(UEnterGame* other);

  // implements Message ----------------------------------------------

  inline UEnterGame* New() const { return New(NULL); }

  UEnterGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UEnterGame& from);
  void MergeFrom(const UEnterGame& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UEnterGame* other);
  void UnsafeMergeFrom(const UEnterGame& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 roomID = 1;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UEnterGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 roomid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UEnterGame> UEnterGame_default_instance_;

// -------------------------------------------------------------------

class DEnterGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DEnterGame) */ {
 public:
  DEnterGame();
  virtual ~DEnterGame();

  DEnterGame(const DEnterGame& from);

  inline DEnterGame& operator=(const DEnterGame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DEnterGame& default_instance();

  static const DEnterGame* internal_default_instance();

  void Swap(DEnterGame* other);

  // implements Message ----------------------------------------------

  inline DEnterGame* New() const { return New(NULL); }

  DEnterGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DEnterGame& from);
  void MergeFrom(const DEnterGame& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DEnterGame* other);
  void UnsafeMergeFrom(const DEnterGame& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 creatid = 1;
  void clear_creatid();
  static const int kCreatidFieldNumber = 1;
  ::google::protobuf::int32 creatid() const;
  void set_creatid(::google::protobuf::int32 value);

  // optional sint32 gametimes = 2;
  void clear_gametimes();
  static const int kGametimesFieldNumber = 2;
  ::google::protobuf::int32 gametimes() const;
  void set_gametimes(::google::protobuf::int32 value);

  // optional sint32 roomID = 3;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 3;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional sint32 type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional sint32 gameType = 5;
  void clear_gametype();
  static const int kGameTypeFieldNumber = 5;
  ::google::protobuf::int32 gametype() const;
  void set_gametype(::google::protobuf::int32 value);

  // optional sint32 curTime = 6;
  void clear_curtime();
  static const int kCurTimeFieldNumber = 6;
  ::google::protobuf::int32 curtime() const;
  void set_curtime(::google::protobuf::int32 value);

  // optional sint32 isStart = 7;
  void clear_isstart();
  static const int kIsStartFieldNumber = 7;
  ::google::protobuf::int32 isstart() const;
  void set_isstart(::google::protobuf::int32 value);

  // optional sint32 count = 8;
  void clear_count();
  static const int kCountFieldNumber = 8;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // optional sint32 status = 9;
  void clear_status();
  static const int kStatusFieldNumber = 9;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DEnterGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 creatid_;
  ::google::protobuf::int32 gametimes_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 gametype_;
  ::google::protobuf::int32 curtime_;
  ::google::protobuf::int32 isstart_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DEnterGame> DEnterGame_default_instance_;

// -------------------------------------------------------------------

class UReady : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UReady) */ {
 public:
  UReady();
  virtual ~UReady();

  UReady(const UReady& from);

  inline UReady& operator=(const UReady& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UReady& default_instance();

  static const UReady* internal_default_instance();

  void Swap(UReady* other);

  // implements Message ----------------------------------------------

  inline UReady* New() const { return New(NULL); }

  UReady* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UReady& from);
  void MergeFrom(const UReady& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UReady* other);
  void UnsafeMergeFrom(const UReady& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UReady)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UReady> UReady_default_instance_;

// -------------------------------------------------------------------

class DReady : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DReady) */ {
 public:
  DReady();
  virtual ~DReady();

  DReady(const DReady& from);

  inline DReady& operator=(const DReady& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DReady& default_instance();

  static const DReady* internal_default_instance();

  void Swap(DReady* other);

  // implements Message ----------------------------------------------

  inline DReady* New() const { return New(NULL); }

  DReady* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DReady& from);
  void MergeFrom(const DReady& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DReady* other);
  void UnsafeMergeFrom(const DReady& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 playerID = 1;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DReady)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 playerid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DReady> DReady_default_instance_;

// -------------------------------------------------------------------

class DSyncPlayerData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DSyncPlayerData) */ {
 public:
  DSyncPlayerData();
  virtual ~DSyncPlayerData();

  DSyncPlayerData(const DSyncPlayerData& from);

  inline DSyncPlayerData& operator=(const DSyncPlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DSyncPlayerData& default_instance();

  static const DSyncPlayerData* internal_default_instance();

  void Swap(DSyncPlayerData* other);

  // implements Message ----------------------------------------------

  inline DSyncPlayerData* New() const { return New(NULL); }

  DSyncPlayerData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DSyncPlayerData& from);
  void MergeFrom(const DSyncPlayerData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DSyncPlayerData* other);
  void UnsafeMergeFrom(const DSyncPlayerData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string headImg = 1;
  void clear_headimg();
  static const int kHeadImgFieldNumber = 1;
  const ::std::string& headimg() const;
  void set_headimg(const ::std::string& value);
  void set_headimg(const char* value);
  void set_headimg(const char* value, size_t size);
  ::std::string* mutable_headimg();
  ::std::string* release_headimg();
  void set_allocated_headimg(::std::string* headimg);

  // optional string nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional sint32 money = 3;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  ::google::protobuf::int32 money() const;
  void set_money(::google::protobuf::int32 value);

  // optional sint32 playerID = 4;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 4;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // optional sint32 isbank = 5;
  void clear_isbank();
  static const int kIsbankFieldNumber = 5;
  ::google::protobuf::int32 isbank() const;
  void set_isbank(::google::protobuf::int32 value);

  // optional sint32 isReady = 6;
  void clear_isready();
  static const int kIsReadyFieldNumber = 6;
  ::google::protobuf::int32 isready() const;
  void set_isready(::google::protobuf::int32 value);

  // optional sint32 bet = 7;
  void clear_bet();
  static const int kBetFieldNumber = 7;
  ::google::protobuf::int32 bet() const;
  void set_bet(::google::protobuf::int32 value);

  // optional sint32 alive = 8;
  void clear_alive();
  static const int kAliveFieldNumber = 8;
  ::google::protobuf::int32 alive() const;
  void set_alive(::google::protobuf::int32 value);

  // optional sint32 index = 9;
  void clear_index();
  static const int kIndexFieldNumber = 9;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // optional sint32 isqiangzhuang = 10;
  void clear_isqiangzhuang();
  static const int kIsqiangzhuangFieldNumber = 10;
  ::google::protobuf::int32 isqiangzhuang() const;
  void set_isqiangzhuang(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DSyncPlayerData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr headimg_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 isbank_;
  ::google::protobuf::int32 isready_;
  ::google::protobuf::int32 bet_;
  ::google::protobuf::int32 alive_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 isqiangzhuang_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DSyncPlayerData> DSyncPlayerData_default_instance_;

// -------------------------------------------------------------------

class ULeaveRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ULeaveRoom) */ {
 public:
  ULeaveRoom();
  virtual ~ULeaveRoom();

  ULeaveRoom(const ULeaveRoom& from);

  inline ULeaveRoom& operator=(const ULeaveRoom& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ULeaveRoom& default_instance();

  static const ULeaveRoom* internal_default_instance();

  void Swap(ULeaveRoom* other);

  // implements Message ----------------------------------------------

  inline ULeaveRoom* New() const { return New(NULL); }

  ULeaveRoom* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ULeaveRoom& from);
  void MergeFrom(const ULeaveRoom& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ULeaveRoom* other);
  void UnsafeMergeFrom(const ULeaveRoom& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ULeaveRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ULeaveRoom> ULeaveRoom_default_instance_;

// -------------------------------------------------------------------

class DLeaveRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DLeaveRoom) */ {
 public:
  DLeaveRoom();
  virtual ~DLeaveRoom();

  DLeaveRoom(const DLeaveRoom& from);

  inline DLeaveRoom& operator=(const DLeaveRoom& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DLeaveRoom& default_instance();

  static const DLeaveRoom* internal_default_instance();

  void Swap(DLeaveRoom* other);

  // implements Message ----------------------------------------------

  inline DLeaveRoom* New() const { return New(NULL); }

  DLeaveRoom* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DLeaveRoom& from);
  void MergeFrom(const DLeaveRoom& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DLeaveRoom* other);
  void UnsafeMergeFrom(const DLeaveRoom& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 playerID = 2;
  void clear_playerid();
  static const int kPlayerIDFieldNumber = 2;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DLeaveRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 playerid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DLeaveRoom> DLeaveRoom_default_instance_;

// -------------------------------------------------------------------

class DErrorMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DErrorMessage) */ {
 public:
  DErrorMessage();
  virtual ~DErrorMessage();

  DErrorMessage(const DErrorMessage& from);

  inline DErrorMessage& operator=(const DErrorMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DErrorMessage& default_instance();

  static const DErrorMessage* internal_default_instance();

  void Swap(DErrorMessage* other);

  // implements Message ----------------------------------------------

  inline DErrorMessage* New() const { return New(NULL); }

  DErrorMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DErrorMessage& from);
  void MergeFrom(const DErrorMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DErrorMessage* other);
  void UnsafeMergeFrom(const DErrorMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 errorCode = 1;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DErrorMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 errorcode_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DErrorMessage> DErrorMessage_default_instance_;

// -------------------------------------------------------------------

class UStartGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UStartGame) */ {
 public:
  UStartGame();
  virtual ~UStartGame();

  UStartGame(const UStartGame& from);

  inline UStartGame& operator=(const UStartGame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UStartGame& default_instance();

  static const UStartGame* internal_default_instance();

  void Swap(UStartGame* other);

  // implements Message ----------------------------------------------

  inline UStartGame* New() const { return New(NULL); }

  UStartGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UStartGame& from);
  void MergeFrom(const UStartGame& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UStartGame* other);
  void UnsafeMergeFrom(const UStartGame& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UStartGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UStartGame> UStartGame_default_instance_;

// -------------------------------------------------------------------

class DStartGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DStartGame) */ {
 public:
  DStartGame();
  virtual ~DStartGame();

  DStartGame(const DStartGame& from);

  inline DStartGame& operator=(const DStartGame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DStartGame& default_instance();

  static const DStartGame* internal_default_instance();

  void Swap(DStartGame* other);

  // implements Message ----------------------------------------------

  inline DStartGame* New() const { return New(NULL); }

  DStartGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DStartGame& from);
  void MergeFrom(const DStartGame& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DStartGame* other);
  void UnsafeMergeFrom(const DStartGame& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DStartGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DStartGame> DStartGame_default_instance_;

// -------------------------------------------------------------------

class DReconnectData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DReconnectData) */ {
 public:
  DReconnectData();
  virtual ~DReconnectData();

  DReconnectData(const DReconnectData& from);

  inline DReconnectData& operator=(const DReconnectData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DReconnectData& default_instance();

  static const DReconnectData* internal_default_instance();

  void Swap(DReconnectData* other);

  // implements Message ----------------------------------------------

  inline DReconnectData* New() const { return New(NULL); }

  DReconnectData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DReconnectData& from);
  void MergeFrom(const DReconnectData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DReconnectData* other);
  void UnsafeMergeFrom(const DReconnectData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 roomID = 1;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DReconnectData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 roomid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DReconnectData> DReconnectData_default_instance_;

// -------------------------------------------------------------------

class DGameOver : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DGameOver) */ {
 public:
  DGameOver();
  virtual ~DGameOver();

  DGameOver(const DGameOver& from);

  inline DGameOver& operator=(const DGameOver& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DGameOver& default_instance();

  static const DGameOver* internal_default_instance();

  void Swap(DGameOver* other);

  // implements Message ----------------------------------------------

  inline DGameOver* New() const { return New(NULL); }

  DGameOver* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DGameOver& from);
  void MergeFrom(const DGameOver& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DGameOver* other);
  void UnsafeMergeFrom(const DGameOver& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 bankerId = 1;
  void clear_bankerid();
  static const int kBankerIdFieldNumber = 1;
  ::google::protobuf::int32 bankerid() const;
  void set_bankerid(::google::protobuf::int32 value);

  // optional sint32 curTimes = 2;
  void clear_curtimes();
  static const int kCurTimesFieldNumber = 2;
  ::google::protobuf::int32 curtimes() const;
  void set_curtimes(::google::protobuf::int32 value);

  // optional sint32 data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  ::google::protobuf::int32 data() const;
  void set_data(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DGameOver)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 bankerid_;
  ::google::protobuf::int32 curtimes_;
  ::google::protobuf::int32 data_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DGameOver> DGameOver_default_instance_;

// -------------------------------------------------------------------

class UGameBet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UGameBet) */ {
 public:
  UGameBet();
  virtual ~UGameBet();

  UGameBet(const UGameBet& from);

  inline UGameBet& operator=(const UGameBet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UGameBet& default_instance();

  static const UGameBet* internal_default_instance();

  void Swap(UGameBet* other);

  // implements Message ----------------------------------------------

  inline UGameBet* New() const { return New(NULL); }

  UGameBet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UGameBet& from);
  void MergeFrom(const UGameBet& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UGameBet* other);
  void UnsafeMergeFrom(const UGameBet& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 Diamoud = 1;
  void clear_diamoud();
  static const int kDiamoudFieldNumber = 1;
  ::google::protobuf::int32 diamoud() const;
  void set_diamoud(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UGameBet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 diamoud_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UGameBet> UGameBet_default_instance_;

// -------------------------------------------------------------------

class DAllGameBet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DAllGameBet) */ {
 public:
  DAllGameBet();
  virtual ~DAllGameBet();

  DAllGameBet(const DAllGameBet& from);

  inline DAllGameBet& operator=(const DAllGameBet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DAllGameBet& default_instance();

  static const DAllGameBet* internal_default_instance();

  void Swap(DAllGameBet* other);

  // implements Message ----------------------------------------------

  inline DAllGameBet* New() const { return New(NULL); }

  DAllGameBet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DAllGameBet& from);
  void MergeFrom(const DAllGameBet& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DAllGameBet* other);
  void UnsafeMergeFrom(const DAllGameBet& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 playerId = 1;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int32 playerid() const;
  void set_playerid(::google::protobuf::int32 value);

  // optional sint32 Diamoud = 2;
  void clear_diamoud();
  static const int kDiamoudFieldNumber = 2;
  ::google::protobuf::int32 diamoud() const;
  void set_diamoud(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DAllGameBet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 diamoud_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DAllGameBet> DAllGameBet_default_instance_;

// -------------------------------------------------------------------

class URequestDissposeRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:URequestDissposeRoom) */ {
 public:
  URequestDissposeRoom();
  virtual ~URequestDissposeRoom();

  URequestDissposeRoom(const URequestDissposeRoom& from);

  inline URequestDissposeRoom& operator=(const URequestDissposeRoom& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const URequestDissposeRoom& default_instance();

  static const URequestDissposeRoom* internal_default_instance();

  void Swap(URequestDissposeRoom* other);

  // implements Message ----------------------------------------------

  inline URequestDissposeRoom* New() const { return New(NULL); }

  URequestDissposeRoom* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const URequestDissposeRoom& from);
  void MergeFrom(const URequestDissposeRoom& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(URequestDissposeRoom* other);
  void UnsafeMergeFrom(const URequestDissposeRoom& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:URequestDissposeRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<URequestDissposeRoom> URequestDissposeRoom_default_instance_;

// -------------------------------------------------------------------

class DDissposeAsk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DDissposeAsk) */ {
 public:
  DDissposeAsk();
  virtual ~DDissposeAsk();

  DDissposeAsk(const DDissposeAsk& from);

  inline DDissposeAsk& operator=(const DDissposeAsk& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DDissposeAsk& default_instance();

  static const DDissposeAsk* internal_default_instance();

  void Swap(DDissposeAsk* other);

  // implements Message ----------------------------------------------

  inline DDissposeAsk* New() const { return New(NULL); }

  DDissposeAsk* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DDissposeAsk& from);
  void MergeFrom(const DDissposeAsk& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DDissposeAsk* other);
  void UnsafeMergeFrom(const DDissposeAsk& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DDissposeAsk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DDissposeAsk> DDissposeAsk_default_instance_;

// -------------------------------------------------------------------

class UDissposeConfirm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UDissposeConfirm) */ {
 public:
  UDissposeConfirm();
  virtual ~UDissposeConfirm();

  UDissposeConfirm(const UDissposeConfirm& from);

  inline UDissposeConfirm& operator=(const UDissposeConfirm& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UDissposeConfirm& default_instance();

  static const UDissposeConfirm* internal_default_instance();

  void Swap(UDissposeConfirm* other);

  // implements Message ----------------------------------------------

  inline UDissposeConfirm* New() const { return New(NULL); }

  UDissposeConfirm* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UDissposeConfirm& from);
  void MergeFrom(const UDissposeConfirm& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UDissposeConfirm* other);
  void UnsafeMergeFrom(const UDissposeConfirm& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UDissposeConfirm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UDissposeConfirm> UDissposeConfirm_default_instance_;

// -------------------------------------------------------------------

class DDissposeRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DDissposeRoom) */ {
 public:
  DDissposeRoom();
  virtual ~DDissposeRoom();

  DDissposeRoom(const DDissposeRoom& from);

  inline DDissposeRoom& operator=(const DDissposeRoom& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DDissposeRoom& default_instance();

  static const DDissposeRoom* internal_default_instance();

  void Swap(DDissposeRoom* other);

  // implements Message ----------------------------------------------

  inline DDissposeRoom* New() const { return New(NULL); }

  DDissposeRoom* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DDissposeRoom& from);
  void MergeFrom(const DDissposeRoom& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DDissposeRoom* other);
  void UnsafeMergeFrom(const DDissposeRoom& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DDissposeRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DDissposeRoom> DDissposeRoom_default_instance_;

// -------------------------------------------------------------------

class UYSZCheckPoker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UYSZCheckPoker) */ {
 public:
  UYSZCheckPoker();
  virtual ~UYSZCheckPoker();

  UYSZCheckPoker(const UYSZCheckPoker& from);

  inline UYSZCheckPoker& operator=(const UYSZCheckPoker& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UYSZCheckPoker& default_instance();

  static const UYSZCheckPoker* internal_default_instance();

  void Swap(UYSZCheckPoker* other);

  // implements Message ----------------------------------------------

  inline UYSZCheckPoker* New() const { return New(NULL); }

  UYSZCheckPoker* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UYSZCheckPoker& from);
  void MergeFrom(const UYSZCheckPoker& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UYSZCheckPoker* other);
  void UnsafeMergeFrom(const UYSZCheckPoker& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UYSZCheckPoker)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UYSZCheckPoker> UYSZCheckPoker_default_instance_;

// -------------------------------------------------------------------

class DYSZCheckPoker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DYSZCheckPoker) */ {
 public:
  DYSZCheckPoker();
  virtual ~DYSZCheckPoker();

  DYSZCheckPoker(const DYSZCheckPoker& from);

  inline DYSZCheckPoker& operator=(const DYSZCheckPoker& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DYSZCheckPoker& default_instance();

  static const DYSZCheckPoker* internal_default_instance();

  void Swap(DYSZCheckPoker* other);

  // implements Message ----------------------------------------------

  inline DYSZCheckPoker* New() const { return New(NULL); }

  DYSZCheckPoker* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DYSZCheckPoker& from);
  void MergeFrom(const DYSZCheckPoker& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DYSZCheckPoker* other);
  void UnsafeMergeFrom(const DYSZCheckPoker& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 card1 = 1;
  void clear_card1();
  static const int kCard1FieldNumber = 1;
  ::google::protobuf::uint32 card1() const;
  void set_card1(::google::protobuf::uint32 value);

  // optional uint32 card2 = 2;
  void clear_card2();
  static const int kCard2FieldNumber = 2;
  ::google::protobuf::uint32 card2() const;
  void set_card2(::google::protobuf::uint32 value);

  // optional uint32 card3 = 3;
  void clear_card3();
  static const int kCard3FieldNumber = 3;
  ::google::protobuf::uint32 card3() const;
  void set_card3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DYSZCheckPoker)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 card1_;
  ::google::protobuf::uint32 card2_;
  ::google::protobuf::uint32 card3_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DYSZCheckPoker> DYSZCheckPoker_default_instance_;

// -------------------------------------------------------------------

class UYSZCompareCards : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UYSZCompareCards) */ {
 public:
  UYSZCompareCards();
  virtual ~UYSZCompareCards();

  UYSZCompareCards(const UYSZCompareCards& from);

  inline UYSZCompareCards& operator=(const UYSZCompareCards& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UYSZCompareCards& default_instance();

  static const UYSZCompareCards* internal_default_instance();

  void Swap(UYSZCompareCards* other);

  // implements Message ----------------------------------------------

  inline UYSZCompareCards* New() const { return New(NULL); }

  UYSZCompareCards* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UYSZCompareCards& from);
  void MergeFrom(const UYSZCompareCards& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UYSZCompareCards* other);
  void UnsafeMergeFrom(const UYSZCompareCards& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UYSZCompareCards)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UYSZCompareCards> UYSZCompareCards_default_instance_;

// -------------------------------------------------------------------

class DYSZCompareCards : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DYSZCompareCards) */ {
 public:
  DYSZCompareCards();
  virtual ~DYSZCompareCards();

  DYSZCompareCards(const DYSZCompareCards& from);

  inline DYSZCompareCards& operator=(const DYSZCompareCards& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DYSZCompareCards& default_instance();

  static const DYSZCompareCards* internal_default_instance();

  void Swap(DYSZCompareCards* other);

  // implements Message ----------------------------------------------

  inline DYSZCompareCards* New() const { return New(NULL); }

  DYSZCompareCards* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DYSZCompareCards& from);
  void MergeFrom(const DYSZCompareCards& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DYSZCompareCards* other);
  void UnsafeMergeFrom(const DYSZCompareCards& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DYSZCompareCards)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DYSZCompareCards> DYSZCompareCards_default_instance_;

// -------------------------------------------------------------------

class UYSZPass : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UYSZPass) */ {
 public:
  UYSZPass();
  virtual ~UYSZPass();

  UYSZPass(const UYSZPass& from);

  inline UYSZPass& operator=(const UYSZPass& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UYSZPass& default_instance();

  static const UYSZPass* internal_default_instance();

  void Swap(UYSZPass* other);

  // implements Message ----------------------------------------------

  inline UYSZPass* New() const { return New(NULL); }

  UYSZPass* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UYSZPass& from);
  void MergeFrom(const UYSZPass& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UYSZPass* other);
  void UnsafeMergeFrom(const UYSZPass& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UYSZPass)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UYSZPass> UYSZPass_default_instance_;

// -------------------------------------------------------------------

class DYSZNoticePlayPassCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DYSZNoticePlayPassCard) */ {
 public:
  DYSZNoticePlayPassCard();
  virtual ~DYSZNoticePlayPassCard();

  DYSZNoticePlayPassCard(const DYSZNoticePlayPassCard& from);

  inline DYSZNoticePlayPassCard& operator=(const DYSZNoticePlayPassCard& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DYSZNoticePlayPassCard& default_instance();

  static const DYSZNoticePlayPassCard* internal_default_instance();

  void Swap(DYSZNoticePlayPassCard* other);

  // implements Message ----------------------------------------------

  inline DYSZNoticePlayPassCard* New() const { return New(NULL); }

  DYSZNoticePlayPassCard* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DYSZNoticePlayPassCard& from);
  void MergeFrom(const DYSZNoticePlayPassCard& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DYSZNoticePlayPassCard* other);
  void UnsafeMergeFrom(const DYSZNoticePlayPassCard& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DYSZNoticePlayPassCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_roommodule_2ehxx_impl();
  friend void  protobuf_AddDesc_roommodule_2ehxx_impl();
  friend void protobuf_AssignDesc_roommodule_2ehxx();
  friend void protobuf_ShutdownFile_roommodule_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DYSZNoticePlayPassCard> DYSZNoticePlayPassCard_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UCreateGame

// optional uint32 type = 1;
inline void UCreateGame::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 UCreateGame::type() const {
  // @@protoc_insertion_point(field_get:UCreateGame.type)
  return type_;
}
inline void UCreateGame::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:UCreateGame.type)
}

// optional uint32 gametpye = 2;
inline void UCreateGame::clear_gametpye() {
  gametpye_ = 0u;
}
inline ::google::protobuf::uint32 UCreateGame::gametpye() const {
  // @@protoc_insertion_point(field_get:UCreateGame.gametpye)
  return gametpye_;
}
inline void UCreateGame::set_gametpye(::google::protobuf::uint32 value) {
  
  gametpye_ = value;
  // @@protoc_insertion_point(field_set:UCreateGame.gametpye)
}

// optional sint32 gameTimes = 3;
inline void UCreateGame::clear_gametimes() {
  gametimes_ = 0;
}
inline ::google::protobuf::int32 UCreateGame::gametimes() const {
  // @@protoc_insertion_point(field_get:UCreateGame.gameTimes)
  return gametimes_;
}
inline void UCreateGame::set_gametimes(::google::protobuf::int32 value) {
  
  gametimes_ = value;
  // @@protoc_insertion_point(field_set:UCreateGame.gameTimes)
}

// optional sint32 gamePerson = 4;
inline void UCreateGame::clear_gameperson() {
  gameperson_ = 0;
}
inline ::google::protobuf::int32 UCreateGame::gameperson() const {
  // @@protoc_insertion_point(field_get:UCreateGame.gamePerson)
  return gameperson_;
}
inline void UCreateGame::set_gameperson(::google::protobuf::int32 value) {
  
  gameperson_ = value;
  // @@protoc_insertion_point(field_set:UCreateGame.gamePerson)
}

inline const UCreateGame* UCreateGame::internal_default_instance() {
  return &UCreateGame_default_instance_.get();
}
// -------------------------------------------------------------------

// UEnterGame

// optional sint32 roomID = 1;
inline void UEnterGame::clear_roomid() {
  roomid_ = 0;
}
inline ::google::protobuf::int32 UEnterGame::roomid() const {
  // @@protoc_insertion_point(field_get:UEnterGame.roomID)
  return roomid_;
}
inline void UEnterGame::set_roomid(::google::protobuf::int32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:UEnterGame.roomID)
}

inline const UEnterGame* UEnterGame::internal_default_instance() {
  return &UEnterGame_default_instance_.get();
}
// -------------------------------------------------------------------

// DEnterGame

// optional sint32 creatid = 1;
inline void DEnterGame::clear_creatid() {
  creatid_ = 0;
}
inline ::google::protobuf::int32 DEnterGame::creatid() const {
  // @@protoc_insertion_point(field_get:DEnterGame.creatid)
  return creatid_;
}
inline void DEnterGame::set_creatid(::google::protobuf::int32 value) {
  
  creatid_ = value;
  // @@protoc_insertion_point(field_set:DEnterGame.creatid)
}

// optional sint32 gametimes = 2;
inline void DEnterGame::clear_gametimes() {
  gametimes_ = 0;
}
inline ::google::protobuf::int32 DEnterGame::gametimes() const {
  // @@protoc_insertion_point(field_get:DEnterGame.gametimes)
  return gametimes_;
}
inline void DEnterGame::set_gametimes(::google::protobuf::int32 value) {
  
  gametimes_ = value;
  // @@protoc_insertion_point(field_set:DEnterGame.gametimes)
}

// optional sint32 roomID = 3;
inline void DEnterGame::clear_roomid() {
  roomid_ = 0;
}
inline ::google::protobuf::int32 DEnterGame::roomid() const {
  // @@protoc_insertion_point(field_get:DEnterGame.roomID)
  return roomid_;
}
inline void DEnterGame::set_roomid(::google::protobuf::int32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:DEnterGame.roomID)
}

// optional sint32 type = 4;
inline void DEnterGame::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 DEnterGame::type() const {
  // @@protoc_insertion_point(field_get:DEnterGame.type)
  return type_;
}
inline void DEnterGame::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:DEnterGame.type)
}

// optional sint32 gameType = 5;
inline void DEnterGame::clear_gametype() {
  gametype_ = 0;
}
inline ::google::protobuf::int32 DEnterGame::gametype() const {
  // @@protoc_insertion_point(field_get:DEnterGame.gameType)
  return gametype_;
}
inline void DEnterGame::set_gametype(::google::protobuf::int32 value) {
  
  gametype_ = value;
  // @@protoc_insertion_point(field_set:DEnterGame.gameType)
}

// optional sint32 curTime = 6;
inline void DEnterGame::clear_curtime() {
  curtime_ = 0;
}
inline ::google::protobuf::int32 DEnterGame::curtime() const {
  // @@protoc_insertion_point(field_get:DEnterGame.curTime)
  return curtime_;
}
inline void DEnterGame::set_curtime(::google::protobuf::int32 value) {
  
  curtime_ = value;
  // @@protoc_insertion_point(field_set:DEnterGame.curTime)
}

// optional sint32 isStart = 7;
inline void DEnterGame::clear_isstart() {
  isstart_ = 0;
}
inline ::google::protobuf::int32 DEnterGame::isstart() const {
  // @@protoc_insertion_point(field_get:DEnterGame.isStart)
  return isstart_;
}
inline void DEnterGame::set_isstart(::google::protobuf::int32 value) {
  
  isstart_ = value;
  // @@protoc_insertion_point(field_set:DEnterGame.isStart)
}

// optional sint32 count = 8;
inline void DEnterGame::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 DEnterGame::count() const {
  // @@protoc_insertion_point(field_get:DEnterGame.count)
  return count_;
}
inline void DEnterGame::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:DEnterGame.count)
}

// optional sint32 status = 9;
inline void DEnterGame::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 DEnterGame::status() const {
  // @@protoc_insertion_point(field_get:DEnterGame.status)
  return status_;
}
inline void DEnterGame::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:DEnterGame.status)
}

inline const DEnterGame* DEnterGame::internal_default_instance() {
  return &DEnterGame_default_instance_.get();
}
// -------------------------------------------------------------------

// UReady

inline const UReady* UReady::internal_default_instance() {
  return &UReady_default_instance_.get();
}
// -------------------------------------------------------------------

// DReady

// optional sint32 playerID = 1;
inline void DReady::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 DReady::playerid() const {
  // @@protoc_insertion_point(field_get:DReady.playerID)
  return playerid_;
}
inline void DReady::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:DReady.playerID)
}

inline const DReady* DReady::internal_default_instance() {
  return &DReady_default_instance_.get();
}
// -------------------------------------------------------------------

// DSyncPlayerData

// optional string headImg = 1;
inline void DSyncPlayerData::clear_headimg() {
  headimg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DSyncPlayerData::headimg() const {
  // @@protoc_insertion_point(field_get:DSyncPlayerData.headImg)
  return headimg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DSyncPlayerData::set_headimg(const ::std::string& value) {
  
  headimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DSyncPlayerData.headImg)
}
inline void DSyncPlayerData::set_headimg(const char* value) {
  
  headimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DSyncPlayerData.headImg)
}
inline void DSyncPlayerData::set_headimg(const char* value, size_t size) {
  
  headimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DSyncPlayerData.headImg)
}
inline ::std::string* DSyncPlayerData::mutable_headimg() {
  
  // @@protoc_insertion_point(field_mutable:DSyncPlayerData.headImg)
  return headimg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DSyncPlayerData::release_headimg() {
  // @@protoc_insertion_point(field_release:DSyncPlayerData.headImg)
  
  return headimg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DSyncPlayerData::set_allocated_headimg(::std::string* headimg) {
  if (headimg != NULL) {
    
  } else {
    
  }
  headimg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimg);
  // @@protoc_insertion_point(field_set_allocated:DSyncPlayerData.headImg)
}

// optional string nickname = 2;
inline void DSyncPlayerData::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DSyncPlayerData::nickname() const {
  // @@protoc_insertion_point(field_get:DSyncPlayerData.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DSyncPlayerData::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DSyncPlayerData.nickname)
}
inline void DSyncPlayerData::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DSyncPlayerData.nickname)
}
inline void DSyncPlayerData::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DSyncPlayerData.nickname)
}
inline ::std::string* DSyncPlayerData::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:DSyncPlayerData.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DSyncPlayerData::release_nickname() {
  // @@protoc_insertion_point(field_release:DSyncPlayerData.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DSyncPlayerData::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:DSyncPlayerData.nickname)
}

// optional sint32 money = 3;
inline void DSyncPlayerData::clear_money() {
  money_ = 0;
}
inline ::google::protobuf::int32 DSyncPlayerData::money() const {
  // @@protoc_insertion_point(field_get:DSyncPlayerData.money)
  return money_;
}
inline void DSyncPlayerData::set_money(::google::protobuf::int32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:DSyncPlayerData.money)
}

// optional sint32 playerID = 4;
inline void DSyncPlayerData::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 DSyncPlayerData::playerid() const {
  // @@protoc_insertion_point(field_get:DSyncPlayerData.playerID)
  return playerid_;
}
inline void DSyncPlayerData::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:DSyncPlayerData.playerID)
}

// optional sint32 isbank = 5;
inline void DSyncPlayerData::clear_isbank() {
  isbank_ = 0;
}
inline ::google::protobuf::int32 DSyncPlayerData::isbank() const {
  // @@protoc_insertion_point(field_get:DSyncPlayerData.isbank)
  return isbank_;
}
inline void DSyncPlayerData::set_isbank(::google::protobuf::int32 value) {
  
  isbank_ = value;
  // @@protoc_insertion_point(field_set:DSyncPlayerData.isbank)
}

// optional sint32 isReady = 6;
inline void DSyncPlayerData::clear_isready() {
  isready_ = 0;
}
inline ::google::protobuf::int32 DSyncPlayerData::isready() const {
  // @@protoc_insertion_point(field_get:DSyncPlayerData.isReady)
  return isready_;
}
inline void DSyncPlayerData::set_isready(::google::protobuf::int32 value) {
  
  isready_ = value;
  // @@protoc_insertion_point(field_set:DSyncPlayerData.isReady)
}

// optional sint32 bet = 7;
inline void DSyncPlayerData::clear_bet() {
  bet_ = 0;
}
inline ::google::protobuf::int32 DSyncPlayerData::bet() const {
  // @@protoc_insertion_point(field_get:DSyncPlayerData.bet)
  return bet_;
}
inline void DSyncPlayerData::set_bet(::google::protobuf::int32 value) {
  
  bet_ = value;
  // @@protoc_insertion_point(field_set:DSyncPlayerData.bet)
}

// optional sint32 alive = 8;
inline void DSyncPlayerData::clear_alive() {
  alive_ = 0;
}
inline ::google::protobuf::int32 DSyncPlayerData::alive() const {
  // @@protoc_insertion_point(field_get:DSyncPlayerData.alive)
  return alive_;
}
inline void DSyncPlayerData::set_alive(::google::protobuf::int32 value) {
  
  alive_ = value;
  // @@protoc_insertion_point(field_set:DSyncPlayerData.alive)
}

// optional sint32 index = 9;
inline void DSyncPlayerData::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 DSyncPlayerData::index() const {
  // @@protoc_insertion_point(field_get:DSyncPlayerData.index)
  return index_;
}
inline void DSyncPlayerData::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:DSyncPlayerData.index)
}

// optional sint32 isqiangzhuang = 10;
inline void DSyncPlayerData::clear_isqiangzhuang() {
  isqiangzhuang_ = 0;
}
inline ::google::protobuf::int32 DSyncPlayerData::isqiangzhuang() const {
  // @@protoc_insertion_point(field_get:DSyncPlayerData.isqiangzhuang)
  return isqiangzhuang_;
}
inline void DSyncPlayerData::set_isqiangzhuang(::google::protobuf::int32 value) {
  
  isqiangzhuang_ = value;
  // @@protoc_insertion_point(field_set:DSyncPlayerData.isqiangzhuang)
}

inline const DSyncPlayerData* DSyncPlayerData::internal_default_instance() {
  return &DSyncPlayerData_default_instance_.get();
}
// -------------------------------------------------------------------

// ULeaveRoom

inline const ULeaveRoom* ULeaveRoom::internal_default_instance() {
  return &ULeaveRoom_default_instance_.get();
}
// -------------------------------------------------------------------

// DLeaveRoom

// optional sint32 playerID = 2;
inline void DLeaveRoom::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 DLeaveRoom::playerid() const {
  // @@protoc_insertion_point(field_get:DLeaveRoom.playerID)
  return playerid_;
}
inline void DLeaveRoom::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:DLeaveRoom.playerID)
}

inline const DLeaveRoom* DLeaveRoom::internal_default_instance() {
  return &DLeaveRoom_default_instance_.get();
}
// -------------------------------------------------------------------

// DErrorMessage

// optional uint32 errorCode = 1;
inline void DErrorMessage::clear_errorcode() {
  errorcode_ = 0u;
}
inline ::google::protobuf::uint32 DErrorMessage::errorcode() const {
  // @@protoc_insertion_point(field_get:DErrorMessage.errorCode)
  return errorcode_;
}
inline void DErrorMessage::set_errorcode(::google::protobuf::uint32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:DErrorMessage.errorCode)
}

inline const DErrorMessage* DErrorMessage::internal_default_instance() {
  return &DErrorMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// UStartGame

inline const UStartGame* UStartGame::internal_default_instance() {
  return &UStartGame_default_instance_.get();
}
// -------------------------------------------------------------------

// DStartGame

// optional uint32 status = 1;
inline void DStartGame::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 DStartGame::status() const {
  // @@protoc_insertion_point(field_get:DStartGame.status)
  return status_;
}
inline void DStartGame::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:DStartGame.status)
}

inline const DStartGame* DStartGame::internal_default_instance() {
  return &DStartGame_default_instance_.get();
}
// -------------------------------------------------------------------

// DReconnectData

// optional sint32 roomID = 1;
inline void DReconnectData::clear_roomid() {
  roomid_ = 0;
}
inline ::google::protobuf::int32 DReconnectData::roomid() const {
  // @@protoc_insertion_point(field_get:DReconnectData.roomID)
  return roomid_;
}
inline void DReconnectData::set_roomid(::google::protobuf::int32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:DReconnectData.roomID)
}

inline const DReconnectData* DReconnectData::internal_default_instance() {
  return &DReconnectData_default_instance_.get();
}
// -------------------------------------------------------------------

// DGameOver

// optional sint32 bankerId = 1;
inline void DGameOver::clear_bankerid() {
  bankerid_ = 0;
}
inline ::google::protobuf::int32 DGameOver::bankerid() const {
  // @@protoc_insertion_point(field_get:DGameOver.bankerId)
  return bankerid_;
}
inline void DGameOver::set_bankerid(::google::protobuf::int32 value) {
  
  bankerid_ = value;
  // @@protoc_insertion_point(field_set:DGameOver.bankerId)
}

// optional sint32 curTimes = 2;
inline void DGameOver::clear_curtimes() {
  curtimes_ = 0;
}
inline ::google::protobuf::int32 DGameOver::curtimes() const {
  // @@protoc_insertion_point(field_get:DGameOver.curTimes)
  return curtimes_;
}
inline void DGameOver::set_curtimes(::google::protobuf::int32 value) {
  
  curtimes_ = value;
  // @@protoc_insertion_point(field_set:DGameOver.curTimes)
}

// optional sint32 data = 3;
inline void DGameOver::clear_data() {
  data_ = 0;
}
inline ::google::protobuf::int32 DGameOver::data() const {
  // @@protoc_insertion_point(field_get:DGameOver.data)
  return data_;
}
inline void DGameOver::set_data(::google::protobuf::int32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:DGameOver.data)
}

inline const DGameOver* DGameOver::internal_default_instance() {
  return &DGameOver_default_instance_.get();
}
// -------------------------------------------------------------------

// UGameBet

// optional sint32 Diamoud = 1;
inline void UGameBet::clear_diamoud() {
  diamoud_ = 0;
}
inline ::google::protobuf::int32 UGameBet::diamoud() const {
  // @@protoc_insertion_point(field_get:UGameBet.Diamoud)
  return diamoud_;
}
inline void UGameBet::set_diamoud(::google::protobuf::int32 value) {
  
  diamoud_ = value;
  // @@protoc_insertion_point(field_set:UGameBet.Diamoud)
}

inline const UGameBet* UGameBet::internal_default_instance() {
  return &UGameBet_default_instance_.get();
}
// -------------------------------------------------------------------

// DAllGameBet

// optional sint32 playerId = 1;
inline void DAllGameBet::clear_playerid() {
  playerid_ = 0;
}
inline ::google::protobuf::int32 DAllGameBet::playerid() const {
  // @@protoc_insertion_point(field_get:DAllGameBet.playerId)
  return playerid_;
}
inline void DAllGameBet::set_playerid(::google::protobuf::int32 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:DAllGameBet.playerId)
}

// optional sint32 Diamoud = 2;
inline void DAllGameBet::clear_diamoud() {
  diamoud_ = 0;
}
inline ::google::protobuf::int32 DAllGameBet::diamoud() const {
  // @@protoc_insertion_point(field_get:DAllGameBet.Diamoud)
  return diamoud_;
}
inline void DAllGameBet::set_diamoud(::google::protobuf::int32 value) {
  
  diamoud_ = value;
  // @@protoc_insertion_point(field_set:DAllGameBet.Diamoud)
}

inline const DAllGameBet* DAllGameBet::internal_default_instance() {
  return &DAllGameBet_default_instance_.get();
}
// -------------------------------------------------------------------

// URequestDissposeRoom

inline const URequestDissposeRoom* URequestDissposeRoom::internal_default_instance() {
  return &URequestDissposeRoom_default_instance_.get();
}
// -------------------------------------------------------------------

// DDissposeAsk

inline const DDissposeAsk* DDissposeAsk::internal_default_instance() {
  return &DDissposeAsk_default_instance_.get();
}
// -------------------------------------------------------------------

// UDissposeConfirm

// optional sint32 result = 1;
inline void UDissposeConfirm::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 UDissposeConfirm::result() const {
  // @@protoc_insertion_point(field_get:UDissposeConfirm.result)
  return result_;
}
inline void UDissposeConfirm::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:UDissposeConfirm.result)
}

inline const UDissposeConfirm* UDissposeConfirm::internal_default_instance() {
  return &UDissposeConfirm_default_instance_.get();
}
// -------------------------------------------------------------------

// DDissposeRoom

inline const DDissposeRoom* DDissposeRoom::internal_default_instance() {
  return &DDissposeRoom_default_instance_.get();
}
// -------------------------------------------------------------------

// UYSZCheckPoker

inline const UYSZCheckPoker* UYSZCheckPoker::internal_default_instance() {
  return &UYSZCheckPoker_default_instance_.get();
}
// -------------------------------------------------------------------

// DYSZCheckPoker

// optional uint32 card1 = 1;
inline void DYSZCheckPoker::clear_card1() {
  card1_ = 0u;
}
inline ::google::protobuf::uint32 DYSZCheckPoker::card1() const {
  // @@protoc_insertion_point(field_get:DYSZCheckPoker.card1)
  return card1_;
}
inline void DYSZCheckPoker::set_card1(::google::protobuf::uint32 value) {
  
  card1_ = value;
  // @@protoc_insertion_point(field_set:DYSZCheckPoker.card1)
}

// optional uint32 card2 = 2;
inline void DYSZCheckPoker::clear_card2() {
  card2_ = 0u;
}
inline ::google::protobuf::uint32 DYSZCheckPoker::card2() const {
  // @@protoc_insertion_point(field_get:DYSZCheckPoker.card2)
  return card2_;
}
inline void DYSZCheckPoker::set_card2(::google::protobuf::uint32 value) {
  
  card2_ = value;
  // @@protoc_insertion_point(field_set:DYSZCheckPoker.card2)
}

// optional uint32 card3 = 3;
inline void DYSZCheckPoker::clear_card3() {
  card3_ = 0u;
}
inline ::google::protobuf::uint32 DYSZCheckPoker::card3() const {
  // @@protoc_insertion_point(field_get:DYSZCheckPoker.card3)
  return card3_;
}
inline void DYSZCheckPoker::set_card3(::google::protobuf::uint32 value) {
  
  card3_ = value;
  // @@protoc_insertion_point(field_set:DYSZCheckPoker.card3)
}

inline const DYSZCheckPoker* DYSZCheckPoker::internal_default_instance() {
  return &DYSZCheckPoker_default_instance_.get();
}
// -------------------------------------------------------------------

// UYSZCompareCards

inline const UYSZCompareCards* UYSZCompareCards::internal_default_instance() {
  return &UYSZCompareCards_default_instance_.get();
}
// -------------------------------------------------------------------

// DYSZCompareCards

inline const DYSZCompareCards* DYSZCompareCards::internal_default_instance() {
  return &DYSZCompareCards_default_instance_.get();
}
// -------------------------------------------------------------------

// UYSZPass

inline const UYSZPass* UYSZPass::internal_default_instance() {
  return &UYSZPass_default_instance_.get();
}
// -------------------------------------------------------------------

// DYSZNoticePlayPassCard

inline const DYSZNoticePlayPassCard* DYSZNoticePlayPassCard::internal_default_instance() {
  return &DYSZNoticePlayPassCard_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ROOM_MODULE_MSG_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ROOM_MODULE_MSG_ID>() {
  return ::ROOM_MODULE_MSG_ID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_roommodule_2ehxx__INCLUDED
