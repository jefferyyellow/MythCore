// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: serveractmodule.hxx

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "serveractmodule.hxx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CGetServerActRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGetServerActRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGetServerActResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGetServerActResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGetCumulRechargePrizeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGetCumulRechargePrizeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGetCumulRechargePrizeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGetCumulRechargePrizeResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SERVER_ACT_MODULE_MSG_ID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_serveractmodule_2ehxx() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_serveractmodule_2ehxx() {
  protobuf_AddDesc_serveractmodule_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "serveractmodule.hxx");
  GOOGLE_CHECK(file != NULL);
  CGetServerActRequest_descriptor_ = file->message_type(0);
  static const int CGetServerActRequest_offsets_[1] = {
  };
  CGetServerActRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGetServerActRequest_descriptor_,
      CGetServerActRequest::internal_default_instance(),
      CGetServerActRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CGetServerActRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGetServerActRequest, _internal_metadata_));
  CGetServerActResponse_descriptor_ = file->message_type(1);
  static const int CGetServerActResponse_offsets_[1] = {
  };
  CGetServerActResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGetServerActResponse_descriptor_,
      CGetServerActResponse::internal_default_instance(),
      CGetServerActResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CGetServerActResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGetServerActResponse, _internal_metadata_));
  CGetCumulRechargePrizeRequest_descriptor_ = file->message_type(2);
  static const int CGetCumulRechargePrizeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGetCumulRechargePrizeRequest, activityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGetCumulRechargePrizeRequest, index_),
  };
  CGetCumulRechargePrizeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGetCumulRechargePrizeRequest_descriptor_,
      CGetCumulRechargePrizeRequest::internal_default_instance(),
      CGetCumulRechargePrizeRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CGetCumulRechargePrizeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGetCumulRechargePrizeRequest, _internal_metadata_));
  CGetCumulRechargePrizeResponse_descriptor_ = file->message_type(3);
  static const int CGetCumulRechargePrizeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGetCumulRechargePrizeResponse, result_),
  };
  CGetCumulRechargePrizeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGetCumulRechargePrizeResponse_descriptor_,
      CGetCumulRechargePrizeResponse::internal_default_instance(),
      CGetCumulRechargePrizeResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CGetCumulRechargePrizeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGetCumulRechargePrizeResponse, _internal_metadata_));
  SERVER_ACT_MODULE_MSG_ID_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_serveractmodule_2ehxx);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGetServerActRequest_descriptor_, CGetServerActRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGetServerActResponse_descriptor_, CGetServerActResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGetCumulRechargePrizeRequest_descriptor_, CGetCumulRechargePrizeRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGetCumulRechargePrizeResponse_descriptor_, CGetCumulRechargePrizeResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_serveractmodule_2ehxx() {
  CGetServerActRequest_default_instance_.Shutdown();
  delete CGetServerActRequest_reflection_;
  CGetServerActResponse_default_instance_.Shutdown();
  delete CGetServerActResponse_reflection_;
  CGetCumulRechargePrizeRequest_default_instance_.Shutdown();
  delete CGetCumulRechargePrizeRequest_reflection_;
  CGetCumulRechargePrizeResponse_default_instance_.Shutdown();
  delete CGetCumulRechargePrizeResponse_reflection_;
}

void protobuf_InitDefaults_serveractmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  CGetServerActRequest_default_instance_.DefaultConstruct();
  CGetServerActResponse_default_instance_.DefaultConstruct();
  CGetCumulRechargePrizeRequest_default_instance_.DefaultConstruct();
  CGetCumulRechargePrizeResponse_default_instance_.DefaultConstruct();
  CGetServerActRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CGetServerActResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CGetCumulRechargePrizeRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CGetCumulRechargePrizeResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_serveractmodule_2ehxx_once_);
void protobuf_InitDefaults_serveractmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_serveractmodule_2ehxx_once_,
                 &protobuf_InitDefaults_serveractmodule_2ehxx_impl);
}
void protobuf_AddDesc_serveractmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_serveractmodule_2ehxx();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023serveractmodule.hxx\"\026\n\024CGetServerActRe"
    "quest\"\027\n\025CGetServerActResponse\"B\n\035CGetCu"
    "mulRechargePrizeRequest\022\022\n\nActivityID\030\001 "
    "\001(\r\022\r\n\005Index\030\002 \001(\r\"0\n\036CGetCumulRechargeP"
    "rizeResponse\022\016\n\006Result\030\001 \001(\r*\340\001\n\030SERVER_"
    "ACT_MODULE_MSG_ID\022\036\n\032ID_SERVER_ACT_MODUL"
    "E_ERROR\020\000\022\"\n\035ID_C2S_REQUEST_GET_SERVER_A"
    "CT\020\2008\022#\n\036ID_S2C_RESPONSE_GET_SERVER_ACT\020"
    "\2018\022,\n\'ID_C2S_REQUEST_GET_CUMUL_RECHARGE_"
    "PRIZE\020\2028\022-\n(ID_S2C_RESPONSE_GET_CUMUL_RE"
    "CHARGE_PRIZE\020\2038b\006proto3", 423);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "serveractmodule.hxx", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_serveractmodule_2ehxx);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_serveractmodule_2ehxx_once_);
void protobuf_AddDesc_serveractmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_serveractmodule_2ehxx_once_,
                 &protobuf_AddDesc_serveractmodule_2ehxx_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_serveractmodule_2ehxx {
  StaticDescriptorInitializer_serveractmodule_2ehxx() {
    protobuf_AddDesc_serveractmodule_2ehxx();
  }
} static_descriptor_initializer_serveractmodule_2ehxx_;
const ::google::protobuf::EnumDescriptor* SERVER_ACT_MODULE_MSG_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SERVER_ACT_MODULE_MSG_ID_descriptor_;
}
bool SERVER_ACT_MODULE_MSG_ID_IsValid(int value) {
  switch (value) {
    case 0:
    case 7168:
    case 7169:
    case 7170:
    case 7171:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGetServerActRequest::CGetServerActRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_serveractmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGetServerActRequest)
}

void CGetServerActRequest::InitAsDefaultInstance() {
}

CGetServerActRequest::CGetServerActRequest(const CGetServerActRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGetServerActRequest)
}

void CGetServerActRequest::SharedCtor() {
  _cached_size_ = 0;
}

CGetServerActRequest::~CGetServerActRequest() {
  // @@protoc_insertion_point(destructor:CGetServerActRequest)
  SharedDtor();
}

void CGetServerActRequest::SharedDtor() {
}

void CGetServerActRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGetServerActRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGetServerActRequest_descriptor_;
}

const CGetServerActRequest& CGetServerActRequest::default_instance() {
  protobuf_InitDefaults_serveractmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CGetServerActRequest> CGetServerActRequest_default_instance_;

CGetServerActRequest* CGetServerActRequest::New(::google::protobuf::Arena* arena) const {
  CGetServerActRequest* n = new CGetServerActRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGetServerActRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CGetServerActRequest)
}

bool CGetServerActRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGetServerActRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:CGetServerActRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGetServerActRequest)
  return false;
#undef DO_
}

void CGetServerActRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGetServerActRequest)
  // @@protoc_insertion_point(serialize_end:CGetServerActRequest)
}

::google::protobuf::uint8* CGetServerActRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGetServerActRequest)
  // @@protoc_insertion_point(serialize_to_array_end:CGetServerActRequest)
  return target;
}

size_t CGetServerActRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGetServerActRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGetServerActRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGetServerActRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGetServerActRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGetServerActRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGetServerActRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGetServerActRequest)
    UnsafeMergeFrom(*source);
  }
}

void CGetServerActRequest::MergeFrom(const CGetServerActRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGetServerActRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CGetServerActRequest::UnsafeMergeFrom(const CGetServerActRequest& from) {
  GOOGLE_DCHECK(&from != this);
}

void CGetServerActRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGetServerActRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGetServerActRequest::CopyFrom(const CGetServerActRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGetServerActRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CGetServerActRequest::IsInitialized() const {

  return true;
}

void CGetServerActRequest::Swap(CGetServerActRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGetServerActRequest::InternalSwap(CGetServerActRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGetServerActRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGetServerActRequest_descriptor_;
  metadata.reflection = CGetServerActRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGetServerActRequest

inline const CGetServerActRequest* CGetServerActRequest::internal_default_instance() {
  return &CGetServerActRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGetServerActResponse::CGetServerActResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_serveractmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGetServerActResponse)
}

void CGetServerActResponse::InitAsDefaultInstance() {
}

CGetServerActResponse::CGetServerActResponse(const CGetServerActResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGetServerActResponse)
}

void CGetServerActResponse::SharedCtor() {
  _cached_size_ = 0;
}

CGetServerActResponse::~CGetServerActResponse() {
  // @@protoc_insertion_point(destructor:CGetServerActResponse)
  SharedDtor();
}

void CGetServerActResponse::SharedDtor() {
}

void CGetServerActResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGetServerActResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGetServerActResponse_descriptor_;
}

const CGetServerActResponse& CGetServerActResponse::default_instance() {
  protobuf_InitDefaults_serveractmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CGetServerActResponse> CGetServerActResponse_default_instance_;

CGetServerActResponse* CGetServerActResponse::New(::google::protobuf::Arena* arena) const {
  CGetServerActResponse* n = new CGetServerActResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGetServerActResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGetServerActResponse)
}

bool CGetServerActResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGetServerActResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:CGetServerActResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGetServerActResponse)
  return false;
#undef DO_
}

void CGetServerActResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGetServerActResponse)
  // @@protoc_insertion_point(serialize_end:CGetServerActResponse)
}

::google::protobuf::uint8* CGetServerActResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGetServerActResponse)
  // @@protoc_insertion_point(serialize_to_array_end:CGetServerActResponse)
  return target;
}

size_t CGetServerActResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGetServerActResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGetServerActResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGetServerActResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGetServerActResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGetServerActResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGetServerActResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGetServerActResponse)
    UnsafeMergeFrom(*source);
  }
}

void CGetServerActResponse::MergeFrom(const CGetServerActResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGetServerActResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CGetServerActResponse::UnsafeMergeFrom(const CGetServerActResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void CGetServerActResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGetServerActResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGetServerActResponse::CopyFrom(const CGetServerActResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGetServerActResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CGetServerActResponse::IsInitialized() const {

  return true;
}

void CGetServerActResponse::Swap(CGetServerActResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGetServerActResponse::InternalSwap(CGetServerActResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGetServerActResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGetServerActResponse_descriptor_;
  metadata.reflection = CGetServerActResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGetServerActResponse

inline const CGetServerActResponse* CGetServerActResponse::internal_default_instance() {
  return &CGetServerActResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGetCumulRechargePrizeRequest::kActivityIDFieldNumber;
const int CGetCumulRechargePrizeRequest::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGetCumulRechargePrizeRequest::CGetCumulRechargePrizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_serveractmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGetCumulRechargePrizeRequest)
}

void CGetCumulRechargePrizeRequest::InitAsDefaultInstance() {
}

CGetCumulRechargePrizeRequest::CGetCumulRechargePrizeRequest(const CGetCumulRechargePrizeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGetCumulRechargePrizeRequest)
}

void CGetCumulRechargePrizeRequest::SharedCtor() {
  ::memset(&activityid_, 0, reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&activityid_) + sizeof(index_));
  _cached_size_ = 0;
}

CGetCumulRechargePrizeRequest::~CGetCumulRechargePrizeRequest() {
  // @@protoc_insertion_point(destructor:CGetCumulRechargePrizeRequest)
  SharedDtor();
}

void CGetCumulRechargePrizeRequest::SharedDtor() {
}

void CGetCumulRechargePrizeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGetCumulRechargePrizeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGetCumulRechargePrizeRequest_descriptor_;
}

const CGetCumulRechargePrizeRequest& CGetCumulRechargePrizeRequest::default_instance() {
  protobuf_InitDefaults_serveractmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CGetCumulRechargePrizeRequest> CGetCumulRechargePrizeRequest_default_instance_;

CGetCumulRechargePrizeRequest* CGetCumulRechargePrizeRequest::New(::google::protobuf::Arena* arena) const {
  CGetCumulRechargePrizeRequest* n = new CGetCumulRechargePrizeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGetCumulRechargePrizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CGetCumulRechargePrizeRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CGetCumulRechargePrizeRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGetCumulRechargePrizeRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(activityid_, index_);

#undef ZR_HELPER_
#undef ZR_

}

bool CGetCumulRechargePrizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGetCumulRechargePrizeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ActivityID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activityid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Index;
        break;
      }

      // optional uint32 Index = 2;
      case 2: {
        if (tag == 16) {
         parse_Index:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGetCumulRechargePrizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGetCumulRechargePrizeRequest)
  return false;
#undef DO_
}

void CGetCumulRechargePrizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGetCumulRechargePrizeRequest)
  // optional uint32 ActivityID = 1;
  if (this->activityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->activityid(), output);
  }

  // optional uint32 Index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->index(), output);
  }

  // @@protoc_insertion_point(serialize_end:CGetCumulRechargePrizeRequest)
}

::google::protobuf::uint8* CGetCumulRechargePrizeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGetCumulRechargePrizeRequest)
  // optional uint32 ActivityID = 1;
  if (this->activityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->activityid(), target);
  }

  // optional uint32 Index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->index(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CGetCumulRechargePrizeRequest)
  return target;
}

size_t CGetCumulRechargePrizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGetCumulRechargePrizeRequest)
  size_t total_size = 0;

  // optional uint32 ActivityID = 1;
  if (this->activityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activityid());
  }

  // optional uint32 Index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGetCumulRechargePrizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGetCumulRechargePrizeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGetCumulRechargePrizeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGetCumulRechargePrizeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGetCumulRechargePrizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGetCumulRechargePrizeRequest)
    UnsafeMergeFrom(*source);
  }
}

void CGetCumulRechargePrizeRequest::MergeFrom(const CGetCumulRechargePrizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGetCumulRechargePrizeRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CGetCumulRechargePrizeRequest::UnsafeMergeFrom(const CGetCumulRechargePrizeRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.activityid() != 0) {
    set_activityid(from.activityid());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void CGetCumulRechargePrizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGetCumulRechargePrizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGetCumulRechargePrizeRequest::CopyFrom(const CGetCumulRechargePrizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGetCumulRechargePrizeRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CGetCumulRechargePrizeRequest::IsInitialized() const {

  return true;
}

void CGetCumulRechargePrizeRequest::Swap(CGetCumulRechargePrizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGetCumulRechargePrizeRequest::InternalSwap(CGetCumulRechargePrizeRequest* other) {
  std::swap(activityid_, other->activityid_);
  std::swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGetCumulRechargePrizeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGetCumulRechargePrizeRequest_descriptor_;
  metadata.reflection = CGetCumulRechargePrizeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGetCumulRechargePrizeRequest

// optional uint32 ActivityID = 1;
void CGetCumulRechargePrizeRequest::clear_activityid() {
  activityid_ = 0u;
}
::google::protobuf::uint32 CGetCumulRechargePrizeRequest::activityid() const {
  // @@protoc_insertion_point(field_get:CGetCumulRechargePrizeRequest.ActivityID)
  return activityid_;
}
void CGetCumulRechargePrizeRequest::set_activityid(::google::protobuf::uint32 value) {
  
  activityid_ = value;
  // @@protoc_insertion_point(field_set:CGetCumulRechargePrizeRequest.ActivityID)
}

// optional uint32 Index = 2;
void CGetCumulRechargePrizeRequest::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 CGetCumulRechargePrizeRequest::index() const {
  // @@protoc_insertion_point(field_get:CGetCumulRechargePrizeRequest.Index)
  return index_;
}
void CGetCumulRechargePrizeRequest::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:CGetCumulRechargePrizeRequest.Index)
}

inline const CGetCumulRechargePrizeRequest* CGetCumulRechargePrizeRequest::internal_default_instance() {
  return &CGetCumulRechargePrizeRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGetCumulRechargePrizeResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGetCumulRechargePrizeResponse::CGetCumulRechargePrizeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_serveractmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGetCumulRechargePrizeResponse)
}

void CGetCumulRechargePrizeResponse::InitAsDefaultInstance() {
}

CGetCumulRechargePrizeResponse::CGetCumulRechargePrizeResponse(const CGetCumulRechargePrizeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGetCumulRechargePrizeResponse)
}

void CGetCumulRechargePrizeResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

CGetCumulRechargePrizeResponse::~CGetCumulRechargePrizeResponse() {
  // @@protoc_insertion_point(destructor:CGetCumulRechargePrizeResponse)
  SharedDtor();
}

void CGetCumulRechargePrizeResponse::SharedDtor() {
}

void CGetCumulRechargePrizeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGetCumulRechargePrizeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGetCumulRechargePrizeResponse_descriptor_;
}

const CGetCumulRechargePrizeResponse& CGetCumulRechargePrizeResponse::default_instance() {
  protobuf_InitDefaults_serveractmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CGetCumulRechargePrizeResponse> CGetCumulRechargePrizeResponse_default_instance_;

CGetCumulRechargePrizeResponse* CGetCumulRechargePrizeResponse::New(::google::protobuf::Arena* arena) const {
  CGetCumulRechargePrizeResponse* n = new CGetCumulRechargePrizeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGetCumulRechargePrizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGetCumulRechargePrizeResponse)
  result_ = 0u;
}

bool CGetCumulRechargePrizeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGetCumulRechargePrizeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGetCumulRechargePrizeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGetCumulRechargePrizeResponse)
  return false;
#undef DO_
}

void CGetCumulRechargePrizeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGetCumulRechargePrizeResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:CGetCumulRechargePrizeResponse)
}

::google::protobuf::uint8* CGetCumulRechargePrizeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGetCumulRechargePrizeResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CGetCumulRechargePrizeResponse)
  return target;
}

size_t CGetCumulRechargePrizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGetCumulRechargePrizeResponse)
  size_t total_size = 0;

  // optional uint32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGetCumulRechargePrizeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGetCumulRechargePrizeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGetCumulRechargePrizeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGetCumulRechargePrizeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGetCumulRechargePrizeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGetCumulRechargePrizeResponse)
    UnsafeMergeFrom(*source);
  }
}

void CGetCumulRechargePrizeResponse::MergeFrom(const CGetCumulRechargePrizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGetCumulRechargePrizeResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CGetCumulRechargePrizeResponse::UnsafeMergeFrom(const CGetCumulRechargePrizeResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CGetCumulRechargePrizeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGetCumulRechargePrizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGetCumulRechargePrizeResponse::CopyFrom(const CGetCumulRechargePrizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGetCumulRechargePrizeResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CGetCumulRechargePrizeResponse::IsInitialized() const {

  return true;
}

void CGetCumulRechargePrizeResponse::Swap(CGetCumulRechargePrizeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGetCumulRechargePrizeResponse::InternalSwap(CGetCumulRechargePrizeResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGetCumulRechargePrizeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGetCumulRechargePrizeResponse_descriptor_;
  metadata.reflection = CGetCumulRechargePrizeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGetCumulRechargePrizeResponse

// optional uint32 Result = 1;
void CGetCumulRechargePrizeResponse::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 CGetCumulRechargePrizeResponse::result() const {
  // @@protoc_insertion_point(field_get:CGetCumulRechargePrizeResponse.Result)
  return result_;
}
void CGetCumulRechargePrizeResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CGetCumulRechargePrizeResponse.Result)
}

inline const CGetCumulRechargePrizeResponse* CGetCumulRechargePrizeResponse::internal_default_instance() {
  return &CGetCumulRechargePrizeResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
