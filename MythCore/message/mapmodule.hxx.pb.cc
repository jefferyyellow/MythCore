// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mapmodule.hxx

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mapmodule.hxx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMessageEntityMoveNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageEntityMoveNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPlayerSceneInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPlayerSceneInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageCreatePlayerListNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageCreatePlayerListNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBNpcSceneInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBNpcSceneInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageCreateNPCListNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageCreateNPCListNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessageDestroyEntityNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessageDestroyEntityNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePlayerMoveRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePlayerMoveRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePlayerMoveResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePlayerMoveResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePlayerTeleportRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePlayerTeleportRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMessagePlayerTeleportResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMessagePlayerTeleportResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MAP_MODULE_MSG_ID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_mapmodule_2ehxx() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_mapmodule_2ehxx() {
  protobuf_AddDesc_mapmodule_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mapmodule.hxx");
  GOOGLE_CHECK(file != NULL);
  CMessageEntityMoveNotify_descriptor_ = file->message_type(0);
  static const int CMessageEntityMoveNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityMoveNotify, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityMoveNotify, desposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityMoveNotify, desposy_),
  };
  CMessageEntityMoveNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMessageEntityMoveNotify_descriptor_,
      CMessageEntityMoveNotify::internal_default_instance(),
      CMessageEntityMoveNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMessageEntityMoveNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageEntityMoveNotify, _internal_metadata_));
  PBPlayerSceneInfo_descriptor_ = file->message_type(1);
  static const int PBPlayerSceneInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerSceneInfo, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerSceneInfo, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerSceneInfo, posy_),
  };
  PBPlayerSceneInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPlayerSceneInfo_descriptor_,
      PBPlayerSceneInfo::internal_default_instance(),
      PBPlayerSceneInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPlayerSceneInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerSceneInfo, _internal_metadata_));
  CMessageCreatePlayerListNotify_descriptor_ = file->message_type(2);
  static const int CMessageCreatePlayerListNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCreatePlayerListNotify, playerinfo_),
  };
  CMessageCreatePlayerListNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMessageCreatePlayerListNotify_descriptor_,
      CMessageCreatePlayerListNotify::internal_default_instance(),
      CMessageCreatePlayerListNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMessageCreatePlayerListNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCreatePlayerListNotify, _internal_metadata_));
  PBNpcSceneInfo_descriptor_ = file->message_type(3);
  static const int PBNpcSceneInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBNpcSceneInfo, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBNpcSceneInfo, tempid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBNpcSceneInfo, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBNpcSceneInfo, posy_),
  };
  PBNpcSceneInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBNpcSceneInfo_descriptor_,
      PBNpcSceneInfo::internal_default_instance(),
      PBNpcSceneInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBNpcSceneInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBNpcSceneInfo, _internal_metadata_));
  CMessageCreateNPCListNotify_descriptor_ = file->message_type(4);
  static const int CMessageCreateNPCListNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCreateNPCListNotify, npcinfo_),
  };
  CMessageCreateNPCListNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMessageCreateNPCListNotify_descriptor_,
      CMessageCreateNPCListNotify::internal_default_instance(),
      CMessageCreateNPCListNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMessageCreateNPCListNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageCreateNPCListNotify, _internal_metadata_));
  CMessageDestroyEntityNotify_descriptor_ = file->message_type(5);
  static const int CMessageDestroyEntityNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageDestroyEntityNotify, entityid_),
  };
  CMessageDestroyEntityNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMessageDestroyEntityNotify_descriptor_,
      CMessageDestroyEntityNotify::internal_default_instance(),
      CMessageDestroyEntityNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMessageDestroyEntityNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessageDestroyEntityNotify, _internal_metadata_));
  CMessagePlayerMoveRequest_descriptor_ = file->message_type(6);
  static const int CMessagePlayerMoveRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerMoveRequest, desposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerMoveRequest, despoxy_),
  };
  CMessagePlayerMoveRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMessagePlayerMoveRequest_descriptor_,
      CMessagePlayerMoveRequest::internal_default_instance(),
      CMessagePlayerMoveRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMessagePlayerMoveRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerMoveRequest, _internal_metadata_));
  CMessagePlayerMoveResponse_descriptor_ = file->message_type(7);
  static const int CMessagePlayerMoveResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerMoveResponse, result_),
  };
  CMessagePlayerMoveResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMessagePlayerMoveResponse_descriptor_,
      CMessagePlayerMoveResponse::internal_default_instance(),
      CMessagePlayerMoveResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMessagePlayerMoveResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerMoveResponse, _internal_metadata_));
  CMessagePlayerTeleportRequest_descriptor_ = file->message_type(8);
  static const int CMessagePlayerTeleportRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerTeleportRequest, mapid_),
  };
  CMessagePlayerTeleportRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMessagePlayerTeleportRequest_descriptor_,
      CMessagePlayerTeleportRequest::internal_default_instance(),
      CMessagePlayerTeleportRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMessagePlayerTeleportRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerTeleportRequest, _internal_metadata_));
  CMessagePlayerTeleportResponse_descriptor_ = file->message_type(9);
  static const int CMessagePlayerTeleportResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerTeleportResponse, result_),
  };
  CMessagePlayerTeleportResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMessagePlayerTeleportResponse_descriptor_,
      CMessagePlayerTeleportResponse::internal_default_instance(),
      CMessagePlayerTeleportResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMessagePlayerTeleportResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMessagePlayerTeleportResponse, _internal_metadata_));
  MAP_MODULE_MSG_ID_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mapmodule_2ehxx);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMessageEntityMoveNotify_descriptor_, CMessageEntityMoveNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPlayerSceneInfo_descriptor_, PBPlayerSceneInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMessageCreatePlayerListNotify_descriptor_, CMessageCreatePlayerListNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBNpcSceneInfo_descriptor_, PBNpcSceneInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMessageCreateNPCListNotify_descriptor_, CMessageCreateNPCListNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMessageDestroyEntityNotify_descriptor_, CMessageDestroyEntityNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMessagePlayerMoveRequest_descriptor_, CMessagePlayerMoveRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMessagePlayerMoveResponse_descriptor_, CMessagePlayerMoveResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMessagePlayerTeleportRequest_descriptor_, CMessagePlayerTeleportRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMessagePlayerTeleportResponse_descriptor_, CMessagePlayerTeleportResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mapmodule_2ehxx() {
  CMessageEntityMoveNotify_default_instance_.Shutdown();
  delete CMessageEntityMoveNotify_reflection_;
  PBPlayerSceneInfo_default_instance_.Shutdown();
  delete PBPlayerSceneInfo_reflection_;
  CMessageCreatePlayerListNotify_default_instance_.Shutdown();
  delete CMessageCreatePlayerListNotify_reflection_;
  PBNpcSceneInfo_default_instance_.Shutdown();
  delete PBNpcSceneInfo_reflection_;
  CMessageCreateNPCListNotify_default_instance_.Shutdown();
  delete CMessageCreateNPCListNotify_reflection_;
  CMessageDestroyEntityNotify_default_instance_.Shutdown();
  delete CMessageDestroyEntityNotify_reflection_;
  CMessagePlayerMoveRequest_default_instance_.Shutdown();
  delete CMessagePlayerMoveRequest_reflection_;
  CMessagePlayerMoveResponse_default_instance_.Shutdown();
  delete CMessagePlayerMoveResponse_reflection_;
  CMessagePlayerTeleportRequest_default_instance_.Shutdown();
  delete CMessagePlayerTeleportRequest_reflection_;
  CMessagePlayerTeleportResponse_default_instance_.Shutdown();
  delete CMessagePlayerTeleportResponse_reflection_;
}

void protobuf_InitDefaults_mapmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  CMessageEntityMoveNotify_default_instance_.DefaultConstruct();
  PBPlayerSceneInfo_default_instance_.DefaultConstruct();
  CMessageCreatePlayerListNotify_default_instance_.DefaultConstruct();
  PBNpcSceneInfo_default_instance_.DefaultConstruct();
  CMessageCreateNPCListNotify_default_instance_.DefaultConstruct();
  CMessageDestroyEntityNotify_default_instance_.DefaultConstruct();
  CMessagePlayerMoveRequest_default_instance_.DefaultConstruct();
  CMessagePlayerMoveResponse_default_instance_.DefaultConstruct();
  CMessagePlayerTeleportRequest_default_instance_.DefaultConstruct();
  CMessagePlayerTeleportResponse_default_instance_.DefaultConstruct();
  CMessageEntityMoveNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBPlayerSceneInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  CMessageCreatePlayerListNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBNpcSceneInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  CMessageCreateNPCListNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CMessageDestroyEntityNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CMessagePlayerMoveRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CMessagePlayerMoveResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CMessagePlayerTeleportRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CMessagePlayerTeleportResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_mapmodule_2ehxx_once_);
void protobuf_InitDefaults_mapmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_mapmodule_2ehxx_once_,
                 &protobuf_InitDefaults_mapmodule_2ehxx_impl);
}
void protobuf_AddDesc_mapmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_mapmodule_2ehxx();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmapmodule.hxx\"N\n\030CMessageEntityMoveNot"
    "ify\022\020\n\010EntityID\030\001 \001(\r\022\017\n\007DesPosX\030\002 \001(\r\022\017"
    "\n\007DesPosY\030\003 \001(\r\"A\n\021PBPlayerSceneInfo\022\020\n\010"
    "EntityID\030\001 \001(\r\022\014\n\004PosX\030\002 \001(\r\022\014\n\004PosY\030\003 \001"
    "(\r\"H\n\036CMessageCreatePlayerListNotify\022&\n\n"
    "PlayerInfo\030\001 \003(\0132\022.PBPlayerSceneInfo\"N\n\016"
    "PBNpcSceneInfo\022\020\n\010EntityID\030\001 \001(\r\022\016\n\006Temp"
    "ID\030\002 \001(\r\022\014\n\004PosX\030\003 \001(\r\022\014\n\004PosY\030\004 \001(\r\"\?\n\033"
    "CMessageCreateNPCListNotify\022 \n\007NPCInfo\030\001"
    " \003(\0132\017.PBNpcSceneInfo\"/\n\033CMessageDestroy"
    "EntityNotify\022\020\n\010EntityID\030\001 \003(\r\"=\n\031CMessa"
    "gePlayerMoveRequest\022\017\n\007DesPosX\030\001 \001(\r\022\017\n\007"
    "DesPoxY\030\002 \001(\r\",\n\032CMessagePlayerMoveRespo"
    "nse\022\016\n\006Result\030\001 \001(\r\".\n\035CMessagePlayerTel"
    "eportRequest\022\r\n\005MapID\030\001 \001(\r\"0\n\036CMessageP"
    "layerTeleportResponse\022\016\n\006Result\030\001 \001(\r*\272\001"
    "\n\021MAP_MODULE_MSG_ID\022\027\n\023ID_MAP_MODULE_ERR"
    "OR\020\000\022\036\n\031ID_S2C_NOTIYF_ENTITY_MOVE\020\200\030\022%\n "
    "ID_S2C_NOTIYF_CREATE_PLAYER_LIST\020\201\030\022\"\n\035I"
    "D_S2C_NOTIYF_CREATE_NPC_LIST\020\202\030\022!\n\034ID_S2"
    "C_NOTIYF_DESTROY_ENTITY\020\203\030b\006proto3", 834);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mapmodule.hxx", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mapmodule_2ehxx);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_mapmodule_2ehxx_once_);
void protobuf_AddDesc_mapmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_mapmodule_2ehxx_once_,
                 &protobuf_AddDesc_mapmodule_2ehxx_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mapmodule_2ehxx {
  StaticDescriptorInitializer_mapmodule_2ehxx() {
    protobuf_AddDesc_mapmodule_2ehxx();
  }
} static_descriptor_initializer_mapmodule_2ehxx_;
const ::google::protobuf::EnumDescriptor* MAP_MODULE_MSG_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MAP_MODULE_MSG_ID_descriptor_;
}
bool MAP_MODULE_MSG_ID_IsValid(int value) {
  switch (value) {
    case 0:
    case 3072:
    case 3073:
    case 3074:
    case 3075:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageEntityMoveNotify::kEntityIDFieldNumber;
const int CMessageEntityMoveNotify::kDesPosXFieldNumber;
const int CMessageEntityMoveNotify::kDesPosYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageEntityMoveNotify::CMessageEntityMoveNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMessageEntityMoveNotify)
}

void CMessageEntityMoveNotify::InitAsDefaultInstance() {
}

CMessageEntityMoveNotify::CMessageEntityMoveNotify(const CMessageEntityMoveNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMessageEntityMoveNotify)
}

void CMessageEntityMoveNotify::SharedCtor() {
  ::memset(&entityid_, 0, reinterpret_cast<char*>(&desposy_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(desposy_));
  _cached_size_ = 0;
}

CMessageEntityMoveNotify::~CMessageEntityMoveNotify() {
  // @@protoc_insertion_point(destructor:CMessageEntityMoveNotify)
  SharedDtor();
}

void CMessageEntityMoveNotify::SharedDtor() {
}

void CMessageEntityMoveNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageEntityMoveNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageEntityMoveNotify_descriptor_;
}

const CMessageEntityMoveNotify& CMessageEntityMoveNotify::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CMessageEntityMoveNotify> CMessageEntityMoveNotify_default_instance_;

CMessageEntityMoveNotify* CMessageEntityMoveNotify::New(::google::protobuf::Arena* arena) const {
  CMessageEntityMoveNotify* n = new CMessageEntityMoveNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMessageEntityMoveNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMessageEntityMoveNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMessageEntityMoveNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMessageEntityMoveNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(entityid_, desposy_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMessageEntityMoveNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMessageEntityMoveNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EntityID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DesPosX;
        break;
      }

      // optional uint32 DesPosX = 2;
      case 2: {
        if (tag == 16) {
         parse_DesPosX:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desposx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_DesPosY;
        break;
      }

      // optional uint32 DesPosY = 3;
      case 3: {
        if (tag == 24) {
         parse_DesPosY:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desposy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMessageEntityMoveNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMessageEntityMoveNotify)
  return false;
#undef DO_
}

void CMessageEntityMoveNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMessageEntityMoveNotify)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entityid(), output);
  }

  // optional uint32 DesPosX = 2;
  if (this->desposx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->desposx(), output);
  }

  // optional uint32 DesPosY = 3;
  if (this->desposy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->desposy(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMessageEntityMoveNotify)
}

::google::protobuf::uint8* CMessageEntityMoveNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMessageEntityMoveNotify)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entityid(), target);
  }

  // optional uint32 DesPosX = 2;
  if (this->desposx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->desposx(), target);
  }

  // optional uint32 DesPosY = 3;
  if (this->desposy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->desposy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMessageEntityMoveNotify)
  return target;
}

size_t CMessageEntityMoveNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMessageEntityMoveNotify)
  size_t total_size = 0;

  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entityid());
  }

  // optional uint32 DesPosX = 2;
  if (this->desposx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->desposx());
  }

  // optional uint32 DesPosY = 3;
  if (this->desposy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->desposy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageEntityMoveNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMessageEntityMoveNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMessageEntityMoveNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageEntityMoveNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMessageEntityMoveNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMessageEntityMoveNotify)
    UnsafeMergeFrom(*source);
  }
}

void CMessageEntityMoveNotify::MergeFrom(const CMessageEntityMoveNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMessageEntityMoveNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CMessageEntityMoveNotify::UnsafeMergeFrom(const CMessageEntityMoveNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.desposx() != 0) {
    set_desposx(from.desposx());
  }
  if (from.desposy() != 0) {
    set_desposy(from.desposy());
  }
}

void CMessageEntityMoveNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMessageEntityMoveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageEntityMoveNotify::CopyFrom(const CMessageEntityMoveNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMessageEntityMoveNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CMessageEntityMoveNotify::IsInitialized() const {

  return true;
}

void CMessageEntityMoveNotify::Swap(CMessageEntityMoveNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageEntityMoveNotify::InternalSwap(CMessageEntityMoveNotify* other) {
  std::swap(entityid_, other->entityid_);
  std::swap(desposx_, other->desposx_);
  std::swap(desposy_, other->desposy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageEntityMoveNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMessageEntityMoveNotify_descriptor_;
  metadata.reflection = CMessageEntityMoveNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMessageEntityMoveNotify

// optional uint32 EntityID = 1;
void CMessageEntityMoveNotify::clear_entityid() {
  entityid_ = 0u;
}
::google::protobuf::uint32 CMessageEntityMoveNotify::entityid() const {
  // @@protoc_insertion_point(field_get:CMessageEntityMoveNotify.EntityID)
  return entityid_;
}
void CMessageEntityMoveNotify::set_entityid(::google::protobuf::uint32 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:CMessageEntityMoveNotify.EntityID)
}

// optional uint32 DesPosX = 2;
void CMessageEntityMoveNotify::clear_desposx() {
  desposx_ = 0u;
}
::google::protobuf::uint32 CMessageEntityMoveNotify::desposx() const {
  // @@protoc_insertion_point(field_get:CMessageEntityMoveNotify.DesPosX)
  return desposx_;
}
void CMessageEntityMoveNotify::set_desposx(::google::protobuf::uint32 value) {
  
  desposx_ = value;
  // @@protoc_insertion_point(field_set:CMessageEntityMoveNotify.DesPosX)
}

// optional uint32 DesPosY = 3;
void CMessageEntityMoveNotify::clear_desposy() {
  desposy_ = 0u;
}
::google::protobuf::uint32 CMessageEntityMoveNotify::desposy() const {
  // @@protoc_insertion_point(field_get:CMessageEntityMoveNotify.DesPosY)
  return desposy_;
}
void CMessageEntityMoveNotify::set_desposy(::google::protobuf::uint32 value) {
  
  desposy_ = value;
  // @@protoc_insertion_point(field_set:CMessageEntityMoveNotify.DesPosY)
}

inline const CMessageEntityMoveNotify* CMessageEntityMoveNotify::internal_default_instance() {
  return &CMessageEntityMoveNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPlayerSceneInfo::kEntityIDFieldNumber;
const int PBPlayerSceneInfo::kPosXFieldNumber;
const int PBPlayerSceneInfo::kPosYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPlayerSceneInfo::PBPlayerSceneInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBPlayerSceneInfo)
}

void PBPlayerSceneInfo::InitAsDefaultInstance() {
}

PBPlayerSceneInfo::PBPlayerSceneInfo(const PBPlayerSceneInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBPlayerSceneInfo)
}

void PBPlayerSceneInfo::SharedCtor() {
  ::memset(&entityid_, 0, reinterpret_cast<char*>(&posy_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(posy_));
  _cached_size_ = 0;
}

PBPlayerSceneInfo::~PBPlayerSceneInfo() {
  // @@protoc_insertion_point(destructor:PBPlayerSceneInfo)
  SharedDtor();
}

void PBPlayerSceneInfo::SharedDtor() {
}

void PBPlayerSceneInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPlayerSceneInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPlayerSceneInfo_descriptor_;
}

const PBPlayerSceneInfo& PBPlayerSceneInfo::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBPlayerSceneInfo> PBPlayerSceneInfo_default_instance_;

PBPlayerSceneInfo* PBPlayerSceneInfo::New(::google::protobuf::Arena* arena) const {
  PBPlayerSceneInfo* n = new PBPlayerSceneInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPlayerSceneInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PBPlayerSceneInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBPlayerSceneInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBPlayerSceneInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(entityid_, posy_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBPlayerSceneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBPlayerSceneInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EntityID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PosX;
        break;
      }

      // optional uint32 PosX = 2;
      case 2: {
        if (tag == 16) {
         parse_PosX:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PosY;
        break;
      }

      // optional uint32 PosY = 3;
      case 3: {
        if (tag == 24) {
         parse_PosY:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBPlayerSceneInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBPlayerSceneInfo)
  return false;
#undef DO_
}

void PBPlayerSceneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBPlayerSceneInfo)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entityid(), output);
  }

  // optional uint32 PosX = 2;
  if (this->posx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->posx(), output);
  }

  // optional uint32 PosY = 3;
  if (this->posy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->posy(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBPlayerSceneInfo)
}

::google::protobuf::uint8* PBPlayerSceneInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBPlayerSceneInfo)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entityid(), target);
  }

  // optional uint32 PosX = 2;
  if (this->posx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->posx(), target);
  }

  // optional uint32 PosY = 3;
  if (this->posy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->posy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBPlayerSceneInfo)
  return target;
}

size_t PBPlayerSceneInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBPlayerSceneInfo)
  size_t total_size = 0;

  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entityid());
  }

  // optional uint32 PosX = 2;
  if (this->posx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posx());
  }

  // optional uint32 PosY = 3;
  if (this->posy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPlayerSceneInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBPlayerSceneInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPlayerSceneInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPlayerSceneInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBPlayerSceneInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBPlayerSceneInfo)
    UnsafeMergeFrom(*source);
  }
}

void PBPlayerSceneInfo::MergeFrom(const PBPlayerSceneInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBPlayerSceneInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBPlayerSceneInfo::UnsafeMergeFrom(const PBPlayerSceneInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.posx() != 0) {
    set_posx(from.posx());
  }
  if (from.posy() != 0) {
    set_posy(from.posy());
  }
}

void PBPlayerSceneInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBPlayerSceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPlayerSceneInfo::CopyFrom(const PBPlayerSceneInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBPlayerSceneInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBPlayerSceneInfo::IsInitialized() const {

  return true;
}

void PBPlayerSceneInfo::Swap(PBPlayerSceneInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPlayerSceneInfo::InternalSwap(PBPlayerSceneInfo* other) {
  std::swap(entityid_, other->entityid_);
  std::swap(posx_, other->posx_);
  std::swap(posy_, other->posy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPlayerSceneInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPlayerSceneInfo_descriptor_;
  metadata.reflection = PBPlayerSceneInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPlayerSceneInfo

// optional uint32 EntityID = 1;
void PBPlayerSceneInfo::clear_entityid() {
  entityid_ = 0u;
}
::google::protobuf::uint32 PBPlayerSceneInfo::entityid() const {
  // @@protoc_insertion_point(field_get:PBPlayerSceneInfo.EntityID)
  return entityid_;
}
void PBPlayerSceneInfo::set_entityid(::google::protobuf::uint32 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:PBPlayerSceneInfo.EntityID)
}

// optional uint32 PosX = 2;
void PBPlayerSceneInfo::clear_posx() {
  posx_ = 0u;
}
::google::protobuf::uint32 PBPlayerSceneInfo::posx() const {
  // @@protoc_insertion_point(field_get:PBPlayerSceneInfo.PosX)
  return posx_;
}
void PBPlayerSceneInfo::set_posx(::google::protobuf::uint32 value) {
  
  posx_ = value;
  // @@protoc_insertion_point(field_set:PBPlayerSceneInfo.PosX)
}

// optional uint32 PosY = 3;
void PBPlayerSceneInfo::clear_posy() {
  posy_ = 0u;
}
::google::protobuf::uint32 PBPlayerSceneInfo::posy() const {
  // @@protoc_insertion_point(field_get:PBPlayerSceneInfo.PosY)
  return posy_;
}
void PBPlayerSceneInfo::set_posy(::google::protobuf::uint32 value) {
  
  posy_ = value;
  // @@protoc_insertion_point(field_set:PBPlayerSceneInfo.PosY)
}

inline const PBPlayerSceneInfo* PBPlayerSceneInfo::internal_default_instance() {
  return &PBPlayerSceneInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageCreatePlayerListNotify::kPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageCreatePlayerListNotify::CMessageCreatePlayerListNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMessageCreatePlayerListNotify)
}

void CMessageCreatePlayerListNotify::InitAsDefaultInstance() {
}

CMessageCreatePlayerListNotify::CMessageCreatePlayerListNotify(const CMessageCreatePlayerListNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMessageCreatePlayerListNotify)
}

void CMessageCreatePlayerListNotify::SharedCtor() {
  _cached_size_ = 0;
}

CMessageCreatePlayerListNotify::~CMessageCreatePlayerListNotify() {
  // @@protoc_insertion_point(destructor:CMessageCreatePlayerListNotify)
  SharedDtor();
}

void CMessageCreatePlayerListNotify::SharedDtor() {
}

void CMessageCreatePlayerListNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageCreatePlayerListNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageCreatePlayerListNotify_descriptor_;
}

const CMessageCreatePlayerListNotify& CMessageCreatePlayerListNotify::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CMessageCreatePlayerListNotify> CMessageCreatePlayerListNotify_default_instance_;

CMessageCreatePlayerListNotify* CMessageCreatePlayerListNotify::New(::google::protobuf::Arena* arena) const {
  CMessageCreatePlayerListNotify* n = new CMessageCreatePlayerListNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMessageCreatePlayerListNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMessageCreatePlayerListNotify)
  playerinfo_.Clear();
}

bool CMessageCreatePlayerListNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMessageCreatePlayerListNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBPlayerSceneInfo PlayerInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_PlayerInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_playerinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_PlayerInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMessageCreatePlayerListNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMessageCreatePlayerListNotify)
  return false;
#undef DO_
}

void CMessageCreatePlayerListNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMessageCreatePlayerListNotify)
  // repeated .PBPlayerSceneInfo PlayerInfo = 1;
  for (unsigned int i = 0, n = this->playerinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->playerinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMessageCreatePlayerListNotify)
}

::google::protobuf::uint8* CMessageCreatePlayerListNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMessageCreatePlayerListNotify)
  // repeated .PBPlayerSceneInfo PlayerInfo = 1;
  for (unsigned int i = 0, n = this->playerinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->playerinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMessageCreatePlayerListNotify)
  return target;
}

size_t CMessageCreatePlayerListNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMessageCreatePlayerListNotify)
  size_t total_size = 0;

  // repeated .PBPlayerSceneInfo PlayerInfo = 1;
  {
    unsigned int count = this->playerinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->playerinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageCreatePlayerListNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMessageCreatePlayerListNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMessageCreatePlayerListNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageCreatePlayerListNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMessageCreatePlayerListNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMessageCreatePlayerListNotify)
    UnsafeMergeFrom(*source);
  }
}

void CMessageCreatePlayerListNotify::MergeFrom(const CMessageCreatePlayerListNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMessageCreatePlayerListNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CMessageCreatePlayerListNotify::UnsafeMergeFrom(const CMessageCreatePlayerListNotify& from) {
  GOOGLE_DCHECK(&from != this);
  playerinfo_.MergeFrom(from.playerinfo_);
}

void CMessageCreatePlayerListNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMessageCreatePlayerListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageCreatePlayerListNotify::CopyFrom(const CMessageCreatePlayerListNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMessageCreatePlayerListNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CMessageCreatePlayerListNotify::IsInitialized() const {

  return true;
}

void CMessageCreatePlayerListNotify::Swap(CMessageCreatePlayerListNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageCreatePlayerListNotify::InternalSwap(CMessageCreatePlayerListNotify* other) {
  playerinfo_.UnsafeArenaSwap(&other->playerinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageCreatePlayerListNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMessageCreatePlayerListNotify_descriptor_;
  metadata.reflection = CMessageCreatePlayerListNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMessageCreatePlayerListNotify

// repeated .PBPlayerSceneInfo PlayerInfo = 1;
int CMessageCreatePlayerListNotify::playerinfo_size() const {
  return playerinfo_.size();
}
void CMessageCreatePlayerListNotify::clear_playerinfo() {
  playerinfo_.Clear();
}
const ::PBPlayerSceneInfo& CMessageCreatePlayerListNotify::playerinfo(int index) const {
  // @@protoc_insertion_point(field_get:CMessageCreatePlayerListNotify.PlayerInfo)
  return playerinfo_.Get(index);
}
::PBPlayerSceneInfo* CMessageCreatePlayerListNotify::mutable_playerinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CMessageCreatePlayerListNotify.PlayerInfo)
  return playerinfo_.Mutable(index);
}
::PBPlayerSceneInfo* CMessageCreatePlayerListNotify::add_playerinfo() {
  // @@protoc_insertion_point(field_add:CMessageCreatePlayerListNotify.PlayerInfo)
  return playerinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBPlayerSceneInfo >*
CMessageCreatePlayerListNotify::mutable_playerinfo() {
  // @@protoc_insertion_point(field_mutable_list:CMessageCreatePlayerListNotify.PlayerInfo)
  return &playerinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::PBPlayerSceneInfo >&
CMessageCreatePlayerListNotify::playerinfo() const {
  // @@protoc_insertion_point(field_list:CMessageCreatePlayerListNotify.PlayerInfo)
  return playerinfo_;
}

inline const CMessageCreatePlayerListNotify* CMessageCreatePlayerListNotify::internal_default_instance() {
  return &CMessageCreatePlayerListNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBNpcSceneInfo::kEntityIDFieldNumber;
const int PBNpcSceneInfo::kTempIDFieldNumber;
const int PBNpcSceneInfo::kPosXFieldNumber;
const int PBNpcSceneInfo::kPosYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBNpcSceneInfo::PBNpcSceneInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBNpcSceneInfo)
}

void PBNpcSceneInfo::InitAsDefaultInstance() {
}

PBNpcSceneInfo::PBNpcSceneInfo(const PBNpcSceneInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBNpcSceneInfo)
}

void PBNpcSceneInfo::SharedCtor() {
  ::memset(&entityid_, 0, reinterpret_cast<char*>(&posy_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(posy_));
  _cached_size_ = 0;
}

PBNpcSceneInfo::~PBNpcSceneInfo() {
  // @@protoc_insertion_point(destructor:PBNpcSceneInfo)
  SharedDtor();
}

void PBNpcSceneInfo::SharedDtor() {
}

void PBNpcSceneInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBNpcSceneInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBNpcSceneInfo_descriptor_;
}

const PBNpcSceneInfo& PBNpcSceneInfo::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBNpcSceneInfo> PBNpcSceneInfo_default_instance_;

PBNpcSceneInfo* PBNpcSceneInfo::New(::google::protobuf::Arena* arena) const {
  PBNpcSceneInfo* n = new PBNpcSceneInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBNpcSceneInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PBNpcSceneInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBNpcSceneInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBNpcSceneInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(entityid_, posy_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBNpcSceneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBNpcSceneInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EntityID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TempID;
        break;
      }

      // optional uint32 TempID = 2;
      case 2: {
        if (tag == 16) {
         parse_TempID:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tempid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PosX;
        break;
      }

      // optional uint32 PosX = 3;
      case 3: {
        if (tag == 24) {
         parse_PosX:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_PosY;
        break;
      }

      // optional uint32 PosY = 4;
      case 4: {
        if (tag == 32) {
         parse_PosY:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBNpcSceneInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBNpcSceneInfo)
  return false;
#undef DO_
}

void PBNpcSceneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBNpcSceneInfo)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entityid(), output);
  }

  // optional uint32 TempID = 2;
  if (this->tempid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tempid(), output);
  }

  // optional uint32 PosX = 3;
  if (this->posx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->posx(), output);
  }

  // optional uint32 PosY = 4;
  if (this->posy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->posy(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBNpcSceneInfo)
}

::google::protobuf::uint8* PBNpcSceneInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBNpcSceneInfo)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entityid(), target);
  }

  // optional uint32 TempID = 2;
  if (this->tempid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tempid(), target);
  }

  // optional uint32 PosX = 3;
  if (this->posx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->posx(), target);
  }

  // optional uint32 PosY = 4;
  if (this->posy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->posy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBNpcSceneInfo)
  return target;
}

size_t PBNpcSceneInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBNpcSceneInfo)
  size_t total_size = 0;

  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entityid());
  }

  // optional uint32 TempID = 2;
  if (this->tempid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tempid());
  }

  // optional uint32 PosX = 3;
  if (this->posx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posx());
  }

  // optional uint32 PosY = 4;
  if (this->posy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBNpcSceneInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBNpcSceneInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBNpcSceneInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBNpcSceneInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBNpcSceneInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBNpcSceneInfo)
    UnsafeMergeFrom(*source);
  }
}

void PBNpcSceneInfo::MergeFrom(const PBNpcSceneInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBNpcSceneInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBNpcSceneInfo::UnsafeMergeFrom(const PBNpcSceneInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.tempid() != 0) {
    set_tempid(from.tempid());
  }
  if (from.posx() != 0) {
    set_posx(from.posx());
  }
  if (from.posy() != 0) {
    set_posy(from.posy());
  }
}

void PBNpcSceneInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBNpcSceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBNpcSceneInfo::CopyFrom(const PBNpcSceneInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBNpcSceneInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBNpcSceneInfo::IsInitialized() const {

  return true;
}

void PBNpcSceneInfo::Swap(PBNpcSceneInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBNpcSceneInfo::InternalSwap(PBNpcSceneInfo* other) {
  std::swap(entityid_, other->entityid_);
  std::swap(tempid_, other->tempid_);
  std::swap(posx_, other->posx_);
  std::swap(posy_, other->posy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBNpcSceneInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBNpcSceneInfo_descriptor_;
  metadata.reflection = PBNpcSceneInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBNpcSceneInfo

// optional uint32 EntityID = 1;
void PBNpcSceneInfo::clear_entityid() {
  entityid_ = 0u;
}
::google::protobuf::uint32 PBNpcSceneInfo::entityid() const {
  // @@protoc_insertion_point(field_get:PBNpcSceneInfo.EntityID)
  return entityid_;
}
void PBNpcSceneInfo::set_entityid(::google::protobuf::uint32 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:PBNpcSceneInfo.EntityID)
}

// optional uint32 TempID = 2;
void PBNpcSceneInfo::clear_tempid() {
  tempid_ = 0u;
}
::google::protobuf::uint32 PBNpcSceneInfo::tempid() const {
  // @@protoc_insertion_point(field_get:PBNpcSceneInfo.TempID)
  return tempid_;
}
void PBNpcSceneInfo::set_tempid(::google::protobuf::uint32 value) {
  
  tempid_ = value;
  // @@protoc_insertion_point(field_set:PBNpcSceneInfo.TempID)
}

// optional uint32 PosX = 3;
void PBNpcSceneInfo::clear_posx() {
  posx_ = 0u;
}
::google::protobuf::uint32 PBNpcSceneInfo::posx() const {
  // @@protoc_insertion_point(field_get:PBNpcSceneInfo.PosX)
  return posx_;
}
void PBNpcSceneInfo::set_posx(::google::protobuf::uint32 value) {
  
  posx_ = value;
  // @@protoc_insertion_point(field_set:PBNpcSceneInfo.PosX)
}

// optional uint32 PosY = 4;
void PBNpcSceneInfo::clear_posy() {
  posy_ = 0u;
}
::google::protobuf::uint32 PBNpcSceneInfo::posy() const {
  // @@protoc_insertion_point(field_get:PBNpcSceneInfo.PosY)
  return posy_;
}
void PBNpcSceneInfo::set_posy(::google::protobuf::uint32 value) {
  
  posy_ = value;
  // @@protoc_insertion_point(field_set:PBNpcSceneInfo.PosY)
}

inline const PBNpcSceneInfo* PBNpcSceneInfo::internal_default_instance() {
  return &PBNpcSceneInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageCreateNPCListNotify::kNPCInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageCreateNPCListNotify::CMessageCreateNPCListNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMessageCreateNPCListNotify)
}

void CMessageCreateNPCListNotify::InitAsDefaultInstance() {
}

CMessageCreateNPCListNotify::CMessageCreateNPCListNotify(const CMessageCreateNPCListNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMessageCreateNPCListNotify)
}

void CMessageCreateNPCListNotify::SharedCtor() {
  _cached_size_ = 0;
}

CMessageCreateNPCListNotify::~CMessageCreateNPCListNotify() {
  // @@protoc_insertion_point(destructor:CMessageCreateNPCListNotify)
  SharedDtor();
}

void CMessageCreateNPCListNotify::SharedDtor() {
}

void CMessageCreateNPCListNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageCreateNPCListNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageCreateNPCListNotify_descriptor_;
}

const CMessageCreateNPCListNotify& CMessageCreateNPCListNotify::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CMessageCreateNPCListNotify> CMessageCreateNPCListNotify_default_instance_;

CMessageCreateNPCListNotify* CMessageCreateNPCListNotify::New(::google::protobuf::Arena* arena) const {
  CMessageCreateNPCListNotify* n = new CMessageCreateNPCListNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMessageCreateNPCListNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMessageCreateNPCListNotify)
  npcinfo_.Clear();
}

bool CMessageCreateNPCListNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMessageCreateNPCListNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBNpcSceneInfo NPCInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_NPCInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_npcinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_NPCInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMessageCreateNPCListNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMessageCreateNPCListNotify)
  return false;
#undef DO_
}

void CMessageCreateNPCListNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMessageCreateNPCListNotify)
  // repeated .PBNpcSceneInfo NPCInfo = 1;
  for (unsigned int i = 0, n = this->npcinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->npcinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMessageCreateNPCListNotify)
}

::google::protobuf::uint8* CMessageCreateNPCListNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMessageCreateNPCListNotify)
  // repeated .PBNpcSceneInfo NPCInfo = 1;
  for (unsigned int i = 0, n = this->npcinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->npcinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMessageCreateNPCListNotify)
  return target;
}

size_t CMessageCreateNPCListNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMessageCreateNPCListNotify)
  size_t total_size = 0;

  // repeated .PBNpcSceneInfo NPCInfo = 1;
  {
    unsigned int count = this->npcinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->npcinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageCreateNPCListNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMessageCreateNPCListNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMessageCreateNPCListNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageCreateNPCListNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMessageCreateNPCListNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMessageCreateNPCListNotify)
    UnsafeMergeFrom(*source);
  }
}

void CMessageCreateNPCListNotify::MergeFrom(const CMessageCreateNPCListNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMessageCreateNPCListNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CMessageCreateNPCListNotify::UnsafeMergeFrom(const CMessageCreateNPCListNotify& from) {
  GOOGLE_DCHECK(&from != this);
  npcinfo_.MergeFrom(from.npcinfo_);
}

void CMessageCreateNPCListNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMessageCreateNPCListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageCreateNPCListNotify::CopyFrom(const CMessageCreateNPCListNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMessageCreateNPCListNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CMessageCreateNPCListNotify::IsInitialized() const {

  return true;
}

void CMessageCreateNPCListNotify::Swap(CMessageCreateNPCListNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageCreateNPCListNotify::InternalSwap(CMessageCreateNPCListNotify* other) {
  npcinfo_.UnsafeArenaSwap(&other->npcinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageCreateNPCListNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMessageCreateNPCListNotify_descriptor_;
  metadata.reflection = CMessageCreateNPCListNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMessageCreateNPCListNotify

// repeated .PBNpcSceneInfo NPCInfo = 1;
int CMessageCreateNPCListNotify::npcinfo_size() const {
  return npcinfo_.size();
}
void CMessageCreateNPCListNotify::clear_npcinfo() {
  npcinfo_.Clear();
}
const ::PBNpcSceneInfo& CMessageCreateNPCListNotify::npcinfo(int index) const {
  // @@protoc_insertion_point(field_get:CMessageCreateNPCListNotify.NPCInfo)
  return npcinfo_.Get(index);
}
::PBNpcSceneInfo* CMessageCreateNPCListNotify::mutable_npcinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CMessageCreateNPCListNotify.NPCInfo)
  return npcinfo_.Mutable(index);
}
::PBNpcSceneInfo* CMessageCreateNPCListNotify::add_npcinfo() {
  // @@protoc_insertion_point(field_add:CMessageCreateNPCListNotify.NPCInfo)
  return npcinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBNpcSceneInfo >*
CMessageCreateNPCListNotify::mutable_npcinfo() {
  // @@protoc_insertion_point(field_mutable_list:CMessageCreateNPCListNotify.NPCInfo)
  return &npcinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::PBNpcSceneInfo >&
CMessageCreateNPCListNotify::npcinfo() const {
  // @@protoc_insertion_point(field_list:CMessageCreateNPCListNotify.NPCInfo)
  return npcinfo_;
}

inline const CMessageCreateNPCListNotify* CMessageCreateNPCListNotify::internal_default_instance() {
  return &CMessageCreateNPCListNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessageDestroyEntityNotify::kEntityIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessageDestroyEntityNotify::CMessageDestroyEntityNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMessageDestroyEntityNotify)
}

void CMessageDestroyEntityNotify::InitAsDefaultInstance() {
}

CMessageDestroyEntityNotify::CMessageDestroyEntityNotify(const CMessageDestroyEntityNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMessageDestroyEntityNotify)
}

void CMessageDestroyEntityNotify::SharedCtor() {
  _cached_size_ = 0;
}

CMessageDestroyEntityNotify::~CMessageDestroyEntityNotify() {
  // @@protoc_insertion_point(destructor:CMessageDestroyEntityNotify)
  SharedDtor();
}

void CMessageDestroyEntityNotify::SharedDtor() {
}

void CMessageDestroyEntityNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessageDestroyEntityNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessageDestroyEntityNotify_descriptor_;
}

const CMessageDestroyEntityNotify& CMessageDestroyEntityNotify::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CMessageDestroyEntityNotify> CMessageDestroyEntityNotify_default_instance_;

CMessageDestroyEntityNotify* CMessageDestroyEntityNotify::New(::google::protobuf::Arena* arena) const {
  CMessageDestroyEntityNotify* n = new CMessageDestroyEntityNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMessageDestroyEntityNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMessageDestroyEntityNotify)
  entityid_.Clear();
}

bool CMessageDestroyEntityNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMessageDestroyEntityNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 EntityID = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_entityid())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_entityid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMessageDestroyEntityNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMessageDestroyEntityNotify)
  return false;
#undef DO_
}

void CMessageDestroyEntityNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMessageDestroyEntityNotify)
  // repeated uint32 EntityID = 1;
  if (this->entityid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_entityid_cached_byte_size_);
  }
  for (int i = 0; i < this->entityid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->entityid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CMessageDestroyEntityNotify)
}

::google::protobuf::uint8* CMessageDestroyEntityNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMessageDestroyEntityNotify)
  // repeated uint32 EntityID = 1;
  if (this->entityid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _entityid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->entityid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->entityid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMessageDestroyEntityNotify)
  return target;
}

size_t CMessageDestroyEntityNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMessageDestroyEntityNotify)
  size_t total_size = 0;

  // repeated uint32 EntityID = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->entityid_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->entityid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _entityid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessageDestroyEntityNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMessageDestroyEntityNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMessageDestroyEntityNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessageDestroyEntityNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMessageDestroyEntityNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMessageDestroyEntityNotify)
    UnsafeMergeFrom(*source);
  }
}

void CMessageDestroyEntityNotify::MergeFrom(const CMessageDestroyEntityNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMessageDestroyEntityNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CMessageDestroyEntityNotify::UnsafeMergeFrom(const CMessageDestroyEntityNotify& from) {
  GOOGLE_DCHECK(&from != this);
  entityid_.UnsafeMergeFrom(from.entityid_);
}

void CMessageDestroyEntityNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMessageDestroyEntityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessageDestroyEntityNotify::CopyFrom(const CMessageDestroyEntityNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMessageDestroyEntityNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CMessageDestroyEntityNotify::IsInitialized() const {

  return true;
}

void CMessageDestroyEntityNotify::Swap(CMessageDestroyEntityNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessageDestroyEntityNotify::InternalSwap(CMessageDestroyEntityNotify* other) {
  entityid_.UnsafeArenaSwap(&other->entityid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessageDestroyEntityNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMessageDestroyEntityNotify_descriptor_;
  metadata.reflection = CMessageDestroyEntityNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMessageDestroyEntityNotify

// repeated uint32 EntityID = 1;
int CMessageDestroyEntityNotify::entityid_size() const {
  return entityid_.size();
}
void CMessageDestroyEntityNotify::clear_entityid() {
  entityid_.Clear();
}
::google::protobuf::uint32 CMessageDestroyEntityNotify::entityid(int index) const {
  // @@protoc_insertion_point(field_get:CMessageDestroyEntityNotify.EntityID)
  return entityid_.Get(index);
}
void CMessageDestroyEntityNotify::set_entityid(int index, ::google::protobuf::uint32 value) {
  entityid_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMessageDestroyEntityNotify.EntityID)
}
void CMessageDestroyEntityNotify::add_entityid(::google::protobuf::uint32 value) {
  entityid_.Add(value);
  // @@protoc_insertion_point(field_add:CMessageDestroyEntityNotify.EntityID)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMessageDestroyEntityNotify::entityid() const {
  // @@protoc_insertion_point(field_list:CMessageDestroyEntityNotify.EntityID)
  return entityid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMessageDestroyEntityNotify::mutable_entityid() {
  // @@protoc_insertion_point(field_mutable_list:CMessageDestroyEntityNotify.EntityID)
  return &entityid_;
}

inline const CMessageDestroyEntityNotify* CMessageDestroyEntityNotify::internal_default_instance() {
  return &CMessageDestroyEntityNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessagePlayerMoveRequest::kDesPosXFieldNumber;
const int CMessagePlayerMoveRequest::kDesPoxYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessagePlayerMoveRequest::CMessagePlayerMoveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMessagePlayerMoveRequest)
}

void CMessagePlayerMoveRequest::InitAsDefaultInstance() {
}

CMessagePlayerMoveRequest::CMessagePlayerMoveRequest(const CMessagePlayerMoveRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMessagePlayerMoveRequest)
}

void CMessagePlayerMoveRequest::SharedCtor() {
  ::memset(&desposx_, 0, reinterpret_cast<char*>(&despoxy_) -
    reinterpret_cast<char*>(&desposx_) + sizeof(despoxy_));
  _cached_size_ = 0;
}

CMessagePlayerMoveRequest::~CMessagePlayerMoveRequest() {
  // @@protoc_insertion_point(destructor:CMessagePlayerMoveRequest)
  SharedDtor();
}

void CMessagePlayerMoveRequest::SharedDtor() {
}

void CMessagePlayerMoveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessagePlayerMoveRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePlayerMoveRequest_descriptor_;
}

const CMessagePlayerMoveRequest& CMessagePlayerMoveRequest::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CMessagePlayerMoveRequest> CMessagePlayerMoveRequest_default_instance_;

CMessagePlayerMoveRequest* CMessagePlayerMoveRequest::New(::google::protobuf::Arena* arena) const {
  CMessagePlayerMoveRequest* n = new CMessagePlayerMoveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMessagePlayerMoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMessagePlayerMoveRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CMessagePlayerMoveRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CMessagePlayerMoveRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(desposx_, despoxy_);

#undef ZR_HELPER_
#undef ZR_

}

bool CMessagePlayerMoveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMessagePlayerMoveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 DesPosX = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desposx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DesPoxY;
        break;
      }

      // optional uint32 DesPoxY = 2;
      case 2: {
        if (tag == 16) {
         parse_DesPoxY:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &despoxy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMessagePlayerMoveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMessagePlayerMoveRequest)
  return false;
#undef DO_
}

void CMessagePlayerMoveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMessagePlayerMoveRequest)
  // optional uint32 DesPosX = 1;
  if (this->desposx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->desposx(), output);
  }

  // optional uint32 DesPoxY = 2;
  if (this->despoxy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->despoxy(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMessagePlayerMoveRequest)
}

::google::protobuf::uint8* CMessagePlayerMoveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMessagePlayerMoveRequest)
  // optional uint32 DesPosX = 1;
  if (this->desposx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->desposx(), target);
  }

  // optional uint32 DesPoxY = 2;
  if (this->despoxy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->despoxy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMessagePlayerMoveRequest)
  return target;
}

size_t CMessagePlayerMoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMessagePlayerMoveRequest)
  size_t total_size = 0;

  // optional uint32 DesPosX = 1;
  if (this->desposx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->desposx());
  }

  // optional uint32 DesPoxY = 2;
  if (this->despoxy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->despoxy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessagePlayerMoveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMessagePlayerMoveRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMessagePlayerMoveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessagePlayerMoveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMessagePlayerMoveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMessagePlayerMoveRequest)
    UnsafeMergeFrom(*source);
  }
}

void CMessagePlayerMoveRequest::MergeFrom(const CMessagePlayerMoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMessagePlayerMoveRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CMessagePlayerMoveRequest::UnsafeMergeFrom(const CMessagePlayerMoveRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.desposx() != 0) {
    set_desposx(from.desposx());
  }
  if (from.despoxy() != 0) {
    set_despoxy(from.despoxy());
  }
}

void CMessagePlayerMoveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMessagePlayerMoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePlayerMoveRequest::CopyFrom(const CMessagePlayerMoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMessagePlayerMoveRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CMessagePlayerMoveRequest::IsInitialized() const {

  return true;
}

void CMessagePlayerMoveRequest::Swap(CMessagePlayerMoveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessagePlayerMoveRequest::InternalSwap(CMessagePlayerMoveRequest* other) {
  std::swap(desposx_, other->desposx_);
  std::swap(despoxy_, other->despoxy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessagePlayerMoveRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMessagePlayerMoveRequest_descriptor_;
  metadata.reflection = CMessagePlayerMoveRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMessagePlayerMoveRequest

// optional uint32 DesPosX = 1;
void CMessagePlayerMoveRequest::clear_desposx() {
  desposx_ = 0u;
}
::google::protobuf::uint32 CMessagePlayerMoveRequest::desposx() const {
  // @@protoc_insertion_point(field_get:CMessagePlayerMoveRequest.DesPosX)
  return desposx_;
}
void CMessagePlayerMoveRequest::set_desposx(::google::protobuf::uint32 value) {
  
  desposx_ = value;
  // @@protoc_insertion_point(field_set:CMessagePlayerMoveRequest.DesPosX)
}

// optional uint32 DesPoxY = 2;
void CMessagePlayerMoveRequest::clear_despoxy() {
  despoxy_ = 0u;
}
::google::protobuf::uint32 CMessagePlayerMoveRequest::despoxy() const {
  // @@protoc_insertion_point(field_get:CMessagePlayerMoveRequest.DesPoxY)
  return despoxy_;
}
void CMessagePlayerMoveRequest::set_despoxy(::google::protobuf::uint32 value) {
  
  despoxy_ = value;
  // @@protoc_insertion_point(field_set:CMessagePlayerMoveRequest.DesPoxY)
}

inline const CMessagePlayerMoveRequest* CMessagePlayerMoveRequest::internal_default_instance() {
  return &CMessagePlayerMoveRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessagePlayerMoveResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessagePlayerMoveResponse::CMessagePlayerMoveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMessagePlayerMoveResponse)
}

void CMessagePlayerMoveResponse::InitAsDefaultInstance() {
}

CMessagePlayerMoveResponse::CMessagePlayerMoveResponse(const CMessagePlayerMoveResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMessagePlayerMoveResponse)
}

void CMessagePlayerMoveResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

CMessagePlayerMoveResponse::~CMessagePlayerMoveResponse() {
  // @@protoc_insertion_point(destructor:CMessagePlayerMoveResponse)
  SharedDtor();
}

void CMessagePlayerMoveResponse::SharedDtor() {
}

void CMessagePlayerMoveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessagePlayerMoveResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePlayerMoveResponse_descriptor_;
}

const CMessagePlayerMoveResponse& CMessagePlayerMoveResponse::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CMessagePlayerMoveResponse> CMessagePlayerMoveResponse_default_instance_;

CMessagePlayerMoveResponse* CMessagePlayerMoveResponse::New(::google::protobuf::Arena* arena) const {
  CMessagePlayerMoveResponse* n = new CMessagePlayerMoveResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMessagePlayerMoveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMessagePlayerMoveResponse)
  result_ = 0u;
}

bool CMessagePlayerMoveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMessagePlayerMoveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMessagePlayerMoveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMessagePlayerMoveResponse)
  return false;
#undef DO_
}

void CMessagePlayerMoveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMessagePlayerMoveResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMessagePlayerMoveResponse)
}

::google::protobuf::uint8* CMessagePlayerMoveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMessagePlayerMoveResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMessagePlayerMoveResponse)
  return target;
}

size_t CMessagePlayerMoveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMessagePlayerMoveResponse)
  size_t total_size = 0;

  // optional uint32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessagePlayerMoveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMessagePlayerMoveResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMessagePlayerMoveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessagePlayerMoveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMessagePlayerMoveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMessagePlayerMoveResponse)
    UnsafeMergeFrom(*source);
  }
}

void CMessagePlayerMoveResponse::MergeFrom(const CMessagePlayerMoveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMessagePlayerMoveResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CMessagePlayerMoveResponse::UnsafeMergeFrom(const CMessagePlayerMoveResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CMessagePlayerMoveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMessagePlayerMoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePlayerMoveResponse::CopyFrom(const CMessagePlayerMoveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMessagePlayerMoveResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CMessagePlayerMoveResponse::IsInitialized() const {

  return true;
}

void CMessagePlayerMoveResponse::Swap(CMessagePlayerMoveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessagePlayerMoveResponse::InternalSwap(CMessagePlayerMoveResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessagePlayerMoveResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMessagePlayerMoveResponse_descriptor_;
  metadata.reflection = CMessagePlayerMoveResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMessagePlayerMoveResponse

// optional uint32 Result = 1;
void CMessagePlayerMoveResponse::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 CMessagePlayerMoveResponse::result() const {
  // @@protoc_insertion_point(field_get:CMessagePlayerMoveResponse.Result)
  return result_;
}
void CMessagePlayerMoveResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CMessagePlayerMoveResponse.Result)
}

inline const CMessagePlayerMoveResponse* CMessagePlayerMoveResponse::internal_default_instance() {
  return &CMessagePlayerMoveResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessagePlayerTeleportRequest::kMapIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessagePlayerTeleportRequest::CMessagePlayerTeleportRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMessagePlayerTeleportRequest)
}

void CMessagePlayerTeleportRequest::InitAsDefaultInstance() {
}

CMessagePlayerTeleportRequest::CMessagePlayerTeleportRequest(const CMessagePlayerTeleportRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMessagePlayerTeleportRequest)
}

void CMessagePlayerTeleportRequest::SharedCtor() {
  mapid_ = 0u;
  _cached_size_ = 0;
}

CMessagePlayerTeleportRequest::~CMessagePlayerTeleportRequest() {
  // @@protoc_insertion_point(destructor:CMessagePlayerTeleportRequest)
  SharedDtor();
}

void CMessagePlayerTeleportRequest::SharedDtor() {
}

void CMessagePlayerTeleportRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessagePlayerTeleportRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePlayerTeleportRequest_descriptor_;
}

const CMessagePlayerTeleportRequest& CMessagePlayerTeleportRequest::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CMessagePlayerTeleportRequest> CMessagePlayerTeleportRequest_default_instance_;

CMessagePlayerTeleportRequest* CMessagePlayerTeleportRequest::New(::google::protobuf::Arena* arena) const {
  CMessagePlayerTeleportRequest* n = new CMessagePlayerTeleportRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMessagePlayerTeleportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMessagePlayerTeleportRequest)
  mapid_ = 0u;
}

bool CMessagePlayerTeleportRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMessagePlayerTeleportRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMessagePlayerTeleportRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMessagePlayerTeleportRequest)
  return false;
#undef DO_
}

void CMessagePlayerTeleportRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMessagePlayerTeleportRequest)
  // optional uint32 MapID = 1;
  if (this->mapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMessagePlayerTeleportRequest)
}

::google::protobuf::uint8* CMessagePlayerTeleportRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMessagePlayerTeleportRequest)
  // optional uint32 MapID = 1;
  if (this->mapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMessagePlayerTeleportRequest)
  return target;
}

size_t CMessagePlayerTeleportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMessagePlayerTeleportRequest)
  size_t total_size = 0;

  // optional uint32 MapID = 1;
  if (this->mapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mapid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessagePlayerTeleportRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMessagePlayerTeleportRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMessagePlayerTeleportRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessagePlayerTeleportRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMessagePlayerTeleportRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMessagePlayerTeleportRequest)
    UnsafeMergeFrom(*source);
  }
}

void CMessagePlayerTeleportRequest::MergeFrom(const CMessagePlayerTeleportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMessagePlayerTeleportRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CMessagePlayerTeleportRequest::UnsafeMergeFrom(const CMessagePlayerTeleportRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.mapid() != 0) {
    set_mapid(from.mapid());
  }
}

void CMessagePlayerTeleportRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMessagePlayerTeleportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePlayerTeleportRequest::CopyFrom(const CMessagePlayerTeleportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMessagePlayerTeleportRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CMessagePlayerTeleportRequest::IsInitialized() const {

  return true;
}

void CMessagePlayerTeleportRequest::Swap(CMessagePlayerTeleportRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessagePlayerTeleportRequest::InternalSwap(CMessagePlayerTeleportRequest* other) {
  std::swap(mapid_, other->mapid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessagePlayerTeleportRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMessagePlayerTeleportRequest_descriptor_;
  metadata.reflection = CMessagePlayerTeleportRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMessagePlayerTeleportRequest

// optional uint32 MapID = 1;
void CMessagePlayerTeleportRequest::clear_mapid() {
  mapid_ = 0u;
}
::google::protobuf::uint32 CMessagePlayerTeleportRequest::mapid() const {
  // @@protoc_insertion_point(field_get:CMessagePlayerTeleportRequest.MapID)
  return mapid_;
}
void CMessagePlayerTeleportRequest::set_mapid(::google::protobuf::uint32 value) {
  
  mapid_ = value;
  // @@protoc_insertion_point(field_set:CMessagePlayerTeleportRequest.MapID)
}

inline const CMessagePlayerTeleportRequest* CMessagePlayerTeleportRequest::internal_default_instance() {
  return &CMessagePlayerTeleportRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMessagePlayerTeleportResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMessagePlayerTeleportResponse::CMessagePlayerTeleportResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMessagePlayerTeleportResponse)
}

void CMessagePlayerTeleportResponse::InitAsDefaultInstance() {
}

CMessagePlayerTeleportResponse::CMessagePlayerTeleportResponse(const CMessagePlayerTeleportResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMessagePlayerTeleportResponse)
}

void CMessagePlayerTeleportResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

CMessagePlayerTeleportResponse::~CMessagePlayerTeleportResponse() {
  // @@protoc_insertion_point(destructor:CMessagePlayerTeleportResponse)
  SharedDtor();
}

void CMessagePlayerTeleportResponse::SharedDtor() {
}

void CMessagePlayerTeleportResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMessagePlayerTeleportResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMessagePlayerTeleportResponse_descriptor_;
}

const CMessagePlayerTeleportResponse& CMessagePlayerTeleportResponse::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CMessagePlayerTeleportResponse> CMessagePlayerTeleportResponse_default_instance_;

CMessagePlayerTeleportResponse* CMessagePlayerTeleportResponse::New(::google::protobuf::Arena* arena) const {
  CMessagePlayerTeleportResponse* n = new CMessagePlayerTeleportResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMessagePlayerTeleportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMessagePlayerTeleportResponse)
  result_ = 0u;
}

bool CMessagePlayerTeleportResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMessagePlayerTeleportResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMessagePlayerTeleportResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMessagePlayerTeleportResponse)
  return false;
#undef DO_
}

void CMessagePlayerTeleportResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMessagePlayerTeleportResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMessagePlayerTeleportResponse)
}

::google::protobuf::uint8* CMessagePlayerTeleportResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMessagePlayerTeleportResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMessagePlayerTeleportResponse)
  return target;
}

size_t CMessagePlayerTeleportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMessagePlayerTeleportResponse)
  size_t total_size = 0;

  // optional uint32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMessagePlayerTeleportResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMessagePlayerTeleportResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMessagePlayerTeleportResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMessagePlayerTeleportResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMessagePlayerTeleportResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMessagePlayerTeleportResponse)
    UnsafeMergeFrom(*source);
  }
}

void CMessagePlayerTeleportResponse::MergeFrom(const CMessagePlayerTeleportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMessagePlayerTeleportResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CMessagePlayerTeleportResponse::UnsafeMergeFrom(const CMessagePlayerTeleportResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CMessagePlayerTeleportResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMessagePlayerTeleportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMessagePlayerTeleportResponse::CopyFrom(const CMessagePlayerTeleportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMessagePlayerTeleportResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CMessagePlayerTeleportResponse::IsInitialized() const {

  return true;
}

void CMessagePlayerTeleportResponse::Swap(CMessagePlayerTeleportResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMessagePlayerTeleportResponse::InternalSwap(CMessagePlayerTeleportResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMessagePlayerTeleportResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMessagePlayerTeleportResponse_descriptor_;
  metadata.reflection = CMessagePlayerTeleportResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMessagePlayerTeleportResponse

// optional uint32 Result = 1;
void CMessagePlayerTeleportResponse::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 CMessagePlayerTeleportResponse::result() const {
  // @@protoc_insertion_point(field_get:CMessagePlayerTeleportResponse.Result)
  return result_;
}
void CMessagePlayerTeleportResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CMessagePlayerTeleportResponse.Result)
}

inline const CMessagePlayerTeleportResponse* CMessagePlayerTeleportResponse::internal_default_instance() {
  return &CMessagePlayerTeleportResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
