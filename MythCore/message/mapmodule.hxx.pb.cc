// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mapmodule.hxx

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mapmodule.hxx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CEntityMoveNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CEntityMoveNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBPlayerSceneInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPlayerSceneInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CCreatePlayerListNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CCreatePlayerListNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBNpcSceneInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBNpcSceneInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CCreateNPCListNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CCreateNPCListNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CDestroyEntityNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CDestroyEntityNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPlayerMoveRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPlayerMoveRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPlayerMoveResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPlayerMoveResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPlayerTeleportRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPlayerTeleportRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPlayerTeleportResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPlayerTeleportResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MAP_MODULE_MSG_ID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_mapmodule_2ehxx() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_mapmodule_2ehxx() {
  protobuf_AddDesc_mapmodule_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mapmodule.hxx");
  GOOGLE_CHECK(file != NULL);
  CEntityMoveNotify_descriptor_ = file->message_type(0);
  static const int CEntityMoveNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEntityMoveNotify, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEntityMoveNotify, desposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEntityMoveNotify, desposy_),
  };
  CEntityMoveNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CEntityMoveNotify_descriptor_,
      CEntityMoveNotify::internal_default_instance(),
      CEntityMoveNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CEntityMoveNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEntityMoveNotify, _internal_metadata_));
  PBPlayerSceneInfo_descriptor_ = file->message_type(1);
  static const int PBPlayerSceneInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerSceneInfo, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerSceneInfo, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerSceneInfo, posy_),
  };
  PBPlayerSceneInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPlayerSceneInfo_descriptor_,
      PBPlayerSceneInfo::internal_default_instance(),
      PBPlayerSceneInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPlayerSceneInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPlayerSceneInfo, _internal_metadata_));
  CCreatePlayerListNotify_descriptor_ = file->message_type(2);
  static const int CCreatePlayerListNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCreatePlayerListNotify, playerinfo_),
  };
  CCreatePlayerListNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CCreatePlayerListNotify_descriptor_,
      CCreatePlayerListNotify::internal_default_instance(),
      CCreatePlayerListNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CCreatePlayerListNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCreatePlayerListNotify, _internal_metadata_));
  PBNpcSceneInfo_descriptor_ = file->message_type(3);
  static const int PBNpcSceneInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBNpcSceneInfo, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBNpcSceneInfo, tempid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBNpcSceneInfo, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBNpcSceneInfo, posy_),
  };
  PBNpcSceneInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBNpcSceneInfo_descriptor_,
      PBNpcSceneInfo::internal_default_instance(),
      PBNpcSceneInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBNpcSceneInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBNpcSceneInfo, _internal_metadata_));
  CCreateNPCListNotify_descriptor_ = file->message_type(4);
  static const int CCreateNPCListNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCreateNPCListNotify, npcinfo_),
  };
  CCreateNPCListNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CCreateNPCListNotify_descriptor_,
      CCreateNPCListNotify::internal_default_instance(),
      CCreateNPCListNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CCreateNPCListNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCreateNPCListNotify, _internal_metadata_));
  CDestroyEntityNotify_descriptor_ = file->message_type(5);
  static const int CDestroyEntityNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDestroyEntityNotify, entityid_),
  };
  CDestroyEntityNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CDestroyEntityNotify_descriptor_,
      CDestroyEntityNotify::internal_default_instance(),
      CDestroyEntityNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CDestroyEntityNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDestroyEntityNotify, _internal_metadata_));
  CPlayerMoveRequest_descriptor_ = file->message_type(6);
  static const int CPlayerMoveRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerMoveRequest, desposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerMoveRequest, desposy_),
  };
  CPlayerMoveRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPlayerMoveRequest_descriptor_,
      CPlayerMoveRequest::internal_default_instance(),
      CPlayerMoveRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPlayerMoveRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerMoveRequest, _internal_metadata_));
  CPlayerMoveResponse_descriptor_ = file->message_type(7);
  static const int CPlayerMoveResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerMoveResponse, result_),
  };
  CPlayerMoveResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPlayerMoveResponse_descriptor_,
      CPlayerMoveResponse::internal_default_instance(),
      CPlayerMoveResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPlayerMoveResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerMoveResponse, _internal_metadata_));
  CPlayerTeleportRequest_descriptor_ = file->message_type(8);
  static const int CPlayerTeleportRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerTeleportRequest, mapid_),
  };
  CPlayerTeleportRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPlayerTeleportRequest_descriptor_,
      CPlayerTeleportRequest::internal_default_instance(),
      CPlayerTeleportRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPlayerTeleportRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerTeleportRequest, _internal_metadata_));
  CPlayerTeleportResponse_descriptor_ = file->message_type(9);
  static const int CPlayerTeleportResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerTeleportResponse, result_),
  };
  CPlayerTeleportResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPlayerTeleportResponse_descriptor_,
      CPlayerTeleportResponse::internal_default_instance(),
      CPlayerTeleportResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPlayerTeleportResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerTeleportResponse, _internal_metadata_));
  MAP_MODULE_MSG_ID_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mapmodule_2ehxx);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CEntityMoveNotify_descriptor_, CEntityMoveNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPlayerSceneInfo_descriptor_, PBPlayerSceneInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CCreatePlayerListNotify_descriptor_, CCreatePlayerListNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBNpcSceneInfo_descriptor_, PBNpcSceneInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CCreateNPCListNotify_descriptor_, CCreateNPCListNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CDestroyEntityNotify_descriptor_, CDestroyEntityNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPlayerMoveRequest_descriptor_, CPlayerMoveRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPlayerMoveResponse_descriptor_, CPlayerMoveResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPlayerTeleportRequest_descriptor_, CPlayerTeleportRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPlayerTeleportResponse_descriptor_, CPlayerTeleportResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mapmodule_2ehxx() {
  CEntityMoveNotify_default_instance_.Shutdown();
  delete CEntityMoveNotify_reflection_;
  PBPlayerSceneInfo_default_instance_.Shutdown();
  delete PBPlayerSceneInfo_reflection_;
  CCreatePlayerListNotify_default_instance_.Shutdown();
  delete CCreatePlayerListNotify_reflection_;
  PBNpcSceneInfo_default_instance_.Shutdown();
  delete PBNpcSceneInfo_reflection_;
  CCreateNPCListNotify_default_instance_.Shutdown();
  delete CCreateNPCListNotify_reflection_;
  CDestroyEntityNotify_default_instance_.Shutdown();
  delete CDestroyEntityNotify_reflection_;
  CPlayerMoveRequest_default_instance_.Shutdown();
  delete CPlayerMoveRequest_reflection_;
  CPlayerMoveResponse_default_instance_.Shutdown();
  delete CPlayerMoveResponse_reflection_;
  CPlayerTeleportRequest_default_instance_.Shutdown();
  delete CPlayerTeleportRequest_reflection_;
  CPlayerTeleportResponse_default_instance_.Shutdown();
  delete CPlayerTeleportResponse_reflection_;
}

void protobuf_InitDefaults_mapmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  CEntityMoveNotify_default_instance_.DefaultConstruct();
  PBPlayerSceneInfo_default_instance_.DefaultConstruct();
  CCreatePlayerListNotify_default_instance_.DefaultConstruct();
  PBNpcSceneInfo_default_instance_.DefaultConstruct();
  CCreateNPCListNotify_default_instance_.DefaultConstruct();
  CDestroyEntityNotify_default_instance_.DefaultConstruct();
  CPlayerMoveRequest_default_instance_.DefaultConstruct();
  CPlayerMoveResponse_default_instance_.DefaultConstruct();
  CPlayerTeleportRequest_default_instance_.DefaultConstruct();
  CPlayerTeleportResponse_default_instance_.DefaultConstruct();
  CEntityMoveNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBPlayerSceneInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  CCreatePlayerListNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBNpcSceneInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  CCreateNPCListNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CDestroyEntityNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CPlayerMoveRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CPlayerMoveResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CPlayerTeleportRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CPlayerTeleportResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_mapmodule_2ehxx_once_);
void protobuf_InitDefaults_mapmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_mapmodule_2ehxx_once_,
                 &protobuf_InitDefaults_mapmodule_2ehxx_impl);
}
void protobuf_AddDesc_mapmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_mapmodule_2ehxx();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmapmodule.hxx\"G\n\021CEntityMoveNotify\022\020\n\010"
    "EntityID\030\001 \001(\r\022\017\n\007DesPosX\030\002 \001(\r\022\017\n\007DesPo"
    "sY\030\003 \001(\r\"A\n\021PBPlayerSceneInfo\022\020\n\010EntityI"
    "D\030\001 \001(\r\022\014\n\004PosX\030\002 \001(\r\022\014\n\004PosY\030\003 \001(\r\"A\n\027C"
    "CreatePlayerListNotify\022&\n\nPlayerInfo\030\001 \003"
    "(\0132\022.PBPlayerSceneInfo\"N\n\016PBNpcSceneInfo"
    "\022\020\n\010EntityID\030\001 \001(\r\022\016\n\006TempID\030\002 \001(\r\022\014\n\004Po"
    "sX\030\003 \001(\r\022\014\n\004PosY\030\004 \001(\r\"8\n\024CCreateNPCList"
    "Notify\022 \n\007NPCInfo\030\001 \003(\0132\017.PBNpcSceneInfo"
    "\"(\n\024CDestroyEntityNotify\022\020\n\010EntityID\030\001 \003"
    "(\r\"6\n\022CPlayerMoveRequest\022\017\n\007DesPosX\030\001 \001("
    "\r\022\017\n\007DesPosY\030\002 \001(\r\"%\n\023CPlayerMoveRespons"
    "e\022\016\n\006Result\030\001 \001(\r\"\'\n\026CPlayerTeleportRequ"
    "est\022\r\n\005MapID\030\001 \001(\r\")\n\027CPlayerTeleportRes"
    "ponse\022\016\n\006Result\030\001 \001(\r*\310\002\n\021MAP_MODULE_MSG"
    "_ID\022\027\n\023ID_MAP_MODULE_ERROR\020\000\022\036\n\031ID_S2C_N"
    "OTIYF_ENTITY_MOVE\020\200\030\022%\n ID_S2C_NOTIYF_CR"
    "EATE_PLAYER_LIST\020\201\030\022\"\n\035ID_S2C_NOTIYF_CRE"
    "ATE_NPC_LIST\020\202\030\022!\n\034ID_S2C_NOTIYF_DESTROY"
    "_ENTITY\020\203\030\022\037\n\032ID_C2S_REQUEST_PLAYER_MOVE"
    "\020\204\030\022 \n\033ID_S2C_RESPONSE_PLAYER_MOVE\020\205\030\022#\n"
    "\036ID_C2S_REQUEST_PLAYER_TELEPORT\020\206\030\022$\n\037ID"
    "_S2C_RESPONSE_PLAYER_TELEPORT\020\207\030b\006proto3", 920);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mapmodule.hxx", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mapmodule_2ehxx);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_mapmodule_2ehxx_once_);
void protobuf_AddDesc_mapmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_mapmodule_2ehxx_once_,
                 &protobuf_AddDesc_mapmodule_2ehxx_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mapmodule_2ehxx {
  StaticDescriptorInitializer_mapmodule_2ehxx() {
    protobuf_AddDesc_mapmodule_2ehxx();
  }
} static_descriptor_initializer_mapmodule_2ehxx_;
const ::google::protobuf::EnumDescriptor* MAP_MODULE_MSG_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MAP_MODULE_MSG_ID_descriptor_;
}
bool MAP_MODULE_MSG_ID_IsValid(int value) {
  switch (value) {
    case 0:
    case 3072:
    case 3073:
    case 3074:
    case 3075:
    case 3076:
    case 3077:
    case 3078:
    case 3079:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEntityMoveNotify::kEntityIDFieldNumber;
const int CEntityMoveNotify::kDesPosXFieldNumber;
const int CEntityMoveNotify::kDesPosYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEntityMoveNotify::CEntityMoveNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEntityMoveNotify)
}

void CEntityMoveNotify::InitAsDefaultInstance() {
}

CEntityMoveNotify::CEntityMoveNotify(const CEntityMoveNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CEntityMoveNotify)
}

void CEntityMoveNotify::SharedCtor() {
  ::memset(&entityid_, 0, reinterpret_cast<char*>(&desposy_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(desposy_));
  _cached_size_ = 0;
}

CEntityMoveNotify::~CEntityMoveNotify() {
  // @@protoc_insertion_point(destructor:CEntityMoveNotify)
  SharedDtor();
}

void CEntityMoveNotify::SharedDtor() {
}

void CEntityMoveNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CEntityMoveNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CEntityMoveNotify_descriptor_;
}

const CEntityMoveNotify& CEntityMoveNotify::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CEntityMoveNotify> CEntityMoveNotify_default_instance_;

CEntityMoveNotify* CEntityMoveNotify::New(::google::protobuf::Arena* arena) const {
  CEntityMoveNotify* n = new CEntityMoveNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CEntityMoveNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CEntityMoveNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CEntityMoveNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CEntityMoveNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(entityid_, desposy_);

#undef ZR_HELPER_
#undef ZR_

}

bool CEntityMoveNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEntityMoveNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EntityID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DesPosX;
        break;
      }

      // optional uint32 DesPosX = 2;
      case 2: {
        if (tag == 16) {
         parse_DesPosX:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desposx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_DesPosY;
        break;
      }

      // optional uint32 DesPosY = 3;
      case 3: {
        if (tag == 24) {
         parse_DesPosY:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desposy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEntityMoveNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEntityMoveNotify)
  return false;
#undef DO_
}

void CEntityMoveNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEntityMoveNotify)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entityid(), output);
  }

  // optional uint32 DesPosX = 2;
  if (this->desposx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->desposx(), output);
  }

  // optional uint32 DesPosY = 3;
  if (this->desposy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->desposy(), output);
  }

  // @@protoc_insertion_point(serialize_end:CEntityMoveNotify)
}

::google::protobuf::uint8* CEntityMoveNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEntityMoveNotify)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entityid(), target);
  }

  // optional uint32 DesPosX = 2;
  if (this->desposx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->desposx(), target);
  }

  // optional uint32 DesPosY = 3;
  if (this->desposy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->desposy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CEntityMoveNotify)
  return target;
}

size_t CEntityMoveNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEntityMoveNotify)
  size_t total_size = 0;

  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entityid());
  }

  // optional uint32 DesPosX = 2;
  if (this->desposx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->desposx());
  }

  // optional uint32 DesPosY = 3;
  if (this->desposy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->desposy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CEntityMoveNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEntityMoveNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CEntityMoveNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEntityMoveNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEntityMoveNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEntityMoveNotify)
    UnsafeMergeFrom(*source);
  }
}

void CEntityMoveNotify::MergeFrom(const CEntityMoveNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEntityMoveNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CEntityMoveNotify::UnsafeMergeFrom(const CEntityMoveNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.desposx() != 0) {
    set_desposx(from.desposx());
  }
  if (from.desposy() != 0) {
    set_desposy(from.desposy());
  }
}

void CEntityMoveNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEntityMoveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEntityMoveNotify::CopyFrom(const CEntityMoveNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEntityMoveNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CEntityMoveNotify::IsInitialized() const {

  return true;
}

void CEntityMoveNotify::Swap(CEntityMoveNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEntityMoveNotify::InternalSwap(CEntityMoveNotify* other) {
  std::swap(entityid_, other->entityid_);
  std::swap(desposx_, other->desposx_);
  std::swap(desposy_, other->desposy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CEntityMoveNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CEntityMoveNotify_descriptor_;
  metadata.reflection = CEntityMoveNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CEntityMoveNotify

// optional uint32 EntityID = 1;
void CEntityMoveNotify::clear_entityid() {
  entityid_ = 0u;
}
::google::protobuf::uint32 CEntityMoveNotify::entityid() const {
  // @@protoc_insertion_point(field_get:CEntityMoveNotify.EntityID)
  return entityid_;
}
void CEntityMoveNotify::set_entityid(::google::protobuf::uint32 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:CEntityMoveNotify.EntityID)
}

// optional uint32 DesPosX = 2;
void CEntityMoveNotify::clear_desposx() {
  desposx_ = 0u;
}
::google::protobuf::uint32 CEntityMoveNotify::desposx() const {
  // @@protoc_insertion_point(field_get:CEntityMoveNotify.DesPosX)
  return desposx_;
}
void CEntityMoveNotify::set_desposx(::google::protobuf::uint32 value) {
  
  desposx_ = value;
  // @@protoc_insertion_point(field_set:CEntityMoveNotify.DesPosX)
}

// optional uint32 DesPosY = 3;
void CEntityMoveNotify::clear_desposy() {
  desposy_ = 0u;
}
::google::protobuf::uint32 CEntityMoveNotify::desposy() const {
  // @@protoc_insertion_point(field_get:CEntityMoveNotify.DesPosY)
  return desposy_;
}
void CEntityMoveNotify::set_desposy(::google::protobuf::uint32 value) {
  
  desposy_ = value;
  // @@protoc_insertion_point(field_set:CEntityMoveNotify.DesPosY)
}

inline const CEntityMoveNotify* CEntityMoveNotify::internal_default_instance() {
  return &CEntityMoveNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPlayerSceneInfo::kEntityIDFieldNumber;
const int PBPlayerSceneInfo::kPosXFieldNumber;
const int PBPlayerSceneInfo::kPosYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPlayerSceneInfo::PBPlayerSceneInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBPlayerSceneInfo)
}

void PBPlayerSceneInfo::InitAsDefaultInstance() {
}

PBPlayerSceneInfo::PBPlayerSceneInfo(const PBPlayerSceneInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBPlayerSceneInfo)
}

void PBPlayerSceneInfo::SharedCtor() {
  ::memset(&entityid_, 0, reinterpret_cast<char*>(&posy_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(posy_));
  _cached_size_ = 0;
}

PBPlayerSceneInfo::~PBPlayerSceneInfo() {
  // @@protoc_insertion_point(destructor:PBPlayerSceneInfo)
  SharedDtor();
}

void PBPlayerSceneInfo::SharedDtor() {
}

void PBPlayerSceneInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPlayerSceneInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPlayerSceneInfo_descriptor_;
}

const PBPlayerSceneInfo& PBPlayerSceneInfo::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBPlayerSceneInfo> PBPlayerSceneInfo_default_instance_;

PBPlayerSceneInfo* PBPlayerSceneInfo::New(::google::protobuf::Arena* arena) const {
  PBPlayerSceneInfo* n = new PBPlayerSceneInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPlayerSceneInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PBPlayerSceneInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBPlayerSceneInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBPlayerSceneInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(entityid_, posy_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBPlayerSceneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBPlayerSceneInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EntityID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PosX;
        break;
      }

      // optional uint32 PosX = 2;
      case 2: {
        if (tag == 16) {
         parse_PosX:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PosY;
        break;
      }

      // optional uint32 PosY = 3;
      case 3: {
        if (tag == 24) {
         parse_PosY:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBPlayerSceneInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBPlayerSceneInfo)
  return false;
#undef DO_
}

void PBPlayerSceneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBPlayerSceneInfo)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entityid(), output);
  }

  // optional uint32 PosX = 2;
  if (this->posx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->posx(), output);
  }

  // optional uint32 PosY = 3;
  if (this->posy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->posy(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBPlayerSceneInfo)
}

::google::protobuf::uint8* PBPlayerSceneInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBPlayerSceneInfo)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entityid(), target);
  }

  // optional uint32 PosX = 2;
  if (this->posx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->posx(), target);
  }

  // optional uint32 PosY = 3;
  if (this->posy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->posy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBPlayerSceneInfo)
  return target;
}

size_t PBPlayerSceneInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBPlayerSceneInfo)
  size_t total_size = 0;

  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entityid());
  }

  // optional uint32 PosX = 2;
  if (this->posx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posx());
  }

  // optional uint32 PosY = 3;
  if (this->posy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPlayerSceneInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBPlayerSceneInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPlayerSceneInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPlayerSceneInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBPlayerSceneInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBPlayerSceneInfo)
    UnsafeMergeFrom(*source);
  }
}

void PBPlayerSceneInfo::MergeFrom(const PBPlayerSceneInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBPlayerSceneInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBPlayerSceneInfo::UnsafeMergeFrom(const PBPlayerSceneInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.posx() != 0) {
    set_posx(from.posx());
  }
  if (from.posy() != 0) {
    set_posy(from.posy());
  }
}

void PBPlayerSceneInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBPlayerSceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPlayerSceneInfo::CopyFrom(const PBPlayerSceneInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBPlayerSceneInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBPlayerSceneInfo::IsInitialized() const {

  return true;
}

void PBPlayerSceneInfo::Swap(PBPlayerSceneInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPlayerSceneInfo::InternalSwap(PBPlayerSceneInfo* other) {
  std::swap(entityid_, other->entityid_);
  std::swap(posx_, other->posx_);
  std::swap(posy_, other->posy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPlayerSceneInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPlayerSceneInfo_descriptor_;
  metadata.reflection = PBPlayerSceneInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPlayerSceneInfo

// optional uint32 EntityID = 1;
void PBPlayerSceneInfo::clear_entityid() {
  entityid_ = 0u;
}
::google::protobuf::uint32 PBPlayerSceneInfo::entityid() const {
  // @@protoc_insertion_point(field_get:PBPlayerSceneInfo.EntityID)
  return entityid_;
}
void PBPlayerSceneInfo::set_entityid(::google::protobuf::uint32 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:PBPlayerSceneInfo.EntityID)
}

// optional uint32 PosX = 2;
void PBPlayerSceneInfo::clear_posx() {
  posx_ = 0u;
}
::google::protobuf::uint32 PBPlayerSceneInfo::posx() const {
  // @@protoc_insertion_point(field_get:PBPlayerSceneInfo.PosX)
  return posx_;
}
void PBPlayerSceneInfo::set_posx(::google::protobuf::uint32 value) {
  
  posx_ = value;
  // @@protoc_insertion_point(field_set:PBPlayerSceneInfo.PosX)
}

// optional uint32 PosY = 3;
void PBPlayerSceneInfo::clear_posy() {
  posy_ = 0u;
}
::google::protobuf::uint32 PBPlayerSceneInfo::posy() const {
  // @@protoc_insertion_point(field_get:PBPlayerSceneInfo.PosY)
  return posy_;
}
void PBPlayerSceneInfo::set_posy(::google::protobuf::uint32 value) {
  
  posy_ = value;
  // @@protoc_insertion_point(field_set:PBPlayerSceneInfo.PosY)
}

inline const PBPlayerSceneInfo* PBPlayerSceneInfo::internal_default_instance() {
  return &PBPlayerSceneInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCreatePlayerListNotify::kPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCreatePlayerListNotify::CCreatePlayerListNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCreatePlayerListNotify)
}

void CCreatePlayerListNotify::InitAsDefaultInstance() {
}

CCreatePlayerListNotify::CCreatePlayerListNotify(const CCreatePlayerListNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCreatePlayerListNotify)
}

void CCreatePlayerListNotify::SharedCtor() {
  _cached_size_ = 0;
}

CCreatePlayerListNotify::~CCreatePlayerListNotify() {
  // @@protoc_insertion_point(destructor:CCreatePlayerListNotify)
  SharedDtor();
}

void CCreatePlayerListNotify::SharedDtor() {
}

void CCreatePlayerListNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCreatePlayerListNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CCreatePlayerListNotify_descriptor_;
}

const CCreatePlayerListNotify& CCreatePlayerListNotify::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CCreatePlayerListNotify> CCreatePlayerListNotify_default_instance_;

CCreatePlayerListNotify* CCreatePlayerListNotify::New(::google::protobuf::Arena* arena) const {
  CCreatePlayerListNotify* n = new CCreatePlayerListNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCreatePlayerListNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CCreatePlayerListNotify)
  playerinfo_.Clear();
}

bool CCreatePlayerListNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCreatePlayerListNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBPlayerSceneInfo PlayerInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_PlayerInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_playerinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_PlayerInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCreatePlayerListNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCreatePlayerListNotify)
  return false;
#undef DO_
}

void CCreatePlayerListNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCreatePlayerListNotify)
  // repeated .PBPlayerSceneInfo PlayerInfo = 1;
  for (unsigned int i = 0, n = this->playerinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->playerinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CCreatePlayerListNotify)
}

::google::protobuf::uint8* CCreatePlayerListNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCreatePlayerListNotify)
  // repeated .PBPlayerSceneInfo PlayerInfo = 1;
  for (unsigned int i = 0, n = this->playerinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->playerinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CCreatePlayerListNotify)
  return target;
}

size_t CCreatePlayerListNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCreatePlayerListNotify)
  size_t total_size = 0;

  // repeated .PBPlayerSceneInfo PlayerInfo = 1;
  {
    unsigned int count = this->playerinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->playerinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCreatePlayerListNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCreatePlayerListNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CCreatePlayerListNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCreatePlayerListNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCreatePlayerListNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCreatePlayerListNotify)
    UnsafeMergeFrom(*source);
  }
}

void CCreatePlayerListNotify::MergeFrom(const CCreatePlayerListNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCreatePlayerListNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CCreatePlayerListNotify::UnsafeMergeFrom(const CCreatePlayerListNotify& from) {
  GOOGLE_DCHECK(&from != this);
  playerinfo_.MergeFrom(from.playerinfo_);
}

void CCreatePlayerListNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCreatePlayerListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCreatePlayerListNotify::CopyFrom(const CCreatePlayerListNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCreatePlayerListNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CCreatePlayerListNotify::IsInitialized() const {

  return true;
}

void CCreatePlayerListNotify::Swap(CCreatePlayerListNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCreatePlayerListNotify::InternalSwap(CCreatePlayerListNotify* other) {
  playerinfo_.UnsafeArenaSwap(&other->playerinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCreatePlayerListNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CCreatePlayerListNotify_descriptor_;
  metadata.reflection = CCreatePlayerListNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCreatePlayerListNotify

// repeated .PBPlayerSceneInfo PlayerInfo = 1;
int CCreatePlayerListNotify::playerinfo_size() const {
  return playerinfo_.size();
}
void CCreatePlayerListNotify::clear_playerinfo() {
  playerinfo_.Clear();
}
const ::PBPlayerSceneInfo& CCreatePlayerListNotify::playerinfo(int index) const {
  // @@protoc_insertion_point(field_get:CCreatePlayerListNotify.PlayerInfo)
  return playerinfo_.Get(index);
}
::PBPlayerSceneInfo* CCreatePlayerListNotify::mutable_playerinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CCreatePlayerListNotify.PlayerInfo)
  return playerinfo_.Mutable(index);
}
::PBPlayerSceneInfo* CCreatePlayerListNotify::add_playerinfo() {
  // @@protoc_insertion_point(field_add:CCreatePlayerListNotify.PlayerInfo)
  return playerinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBPlayerSceneInfo >*
CCreatePlayerListNotify::mutable_playerinfo() {
  // @@protoc_insertion_point(field_mutable_list:CCreatePlayerListNotify.PlayerInfo)
  return &playerinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::PBPlayerSceneInfo >&
CCreatePlayerListNotify::playerinfo() const {
  // @@protoc_insertion_point(field_list:CCreatePlayerListNotify.PlayerInfo)
  return playerinfo_;
}

inline const CCreatePlayerListNotify* CCreatePlayerListNotify::internal_default_instance() {
  return &CCreatePlayerListNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBNpcSceneInfo::kEntityIDFieldNumber;
const int PBNpcSceneInfo::kTempIDFieldNumber;
const int PBNpcSceneInfo::kPosXFieldNumber;
const int PBNpcSceneInfo::kPosYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBNpcSceneInfo::PBNpcSceneInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBNpcSceneInfo)
}

void PBNpcSceneInfo::InitAsDefaultInstance() {
}

PBNpcSceneInfo::PBNpcSceneInfo(const PBNpcSceneInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBNpcSceneInfo)
}

void PBNpcSceneInfo::SharedCtor() {
  ::memset(&entityid_, 0, reinterpret_cast<char*>(&posy_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(posy_));
  _cached_size_ = 0;
}

PBNpcSceneInfo::~PBNpcSceneInfo() {
  // @@protoc_insertion_point(destructor:PBNpcSceneInfo)
  SharedDtor();
}

void PBNpcSceneInfo::SharedDtor() {
}

void PBNpcSceneInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBNpcSceneInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBNpcSceneInfo_descriptor_;
}

const PBNpcSceneInfo& PBNpcSceneInfo::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBNpcSceneInfo> PBNpcSceneInfo_default_instance_;

PBNpcSceneInfo* PBNpcSceneInfo::New(::google::protobuf::Arena* arena) const {
  PBNpcSceneInfo* n = new PBNpcSceneInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBNpcSceneInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PBNpcSceneInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBNpcSceneInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBNpcSceneInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(entityid_, posy_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBNpcSceneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBNpcSceneInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EntityID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TempID;
        break;
      }

      // optional uint32 TempID = 2;
      case 2: {
        if (tag == 16) {
         parse_TempID:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tempid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PosX;
        break;
      }

      // optional uint32 PosX = 3;
      case 3: {
        if (tag == 24) {
         parse_PosX:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_PosY;
        break;
      }

      // optional uint32 PosY = 4;
      case 4: {
        if (tag == 32) {
         parse_PosY:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBNpcSceneInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBNpcSceneInfo)
  return false;
#undef DO_
}

void PBNpcSceneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBNpcSceneInfo)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entityid(), output);
  }

  // optional uint32 TempID = 2;
  if (this->tempid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->tempid(), output);
  }

  // optional uint32 PosX = 3;
  if (this->posx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->posx(), output);
  }

  // optional uint32 PosY = 4;
  if (this->posy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->posy(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBNpcSceneInfo)
}

::google::protobuf::uint8* PBNpcSceneInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBNpcSceneInfo)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entityid(), target);
  }

  // optional uint32 TempID = 2;
  if (this->tempid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->tempid(), target);
  }

  // optional uint32 PosX = 3;
  if (this->posx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->posx(), target);
  }

  // optional uint32 PosY = 4;
  if (this->posy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->posy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBNpcSceneInfo)
  return target;
}

size_t PBNpcSceneInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBNpcSceneInfo)
  size_t total_size = 0;

  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entityid());
  }

  // optional uint32 TempID = 2;
  if (this->tempid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tempid());
  }

  // optional uint32 PosX = 3;
  if (this->posx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posx());
  }

  // optional uint32 PosY = 4;
  if (this->posy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBNpcSceneInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBNpcSceneInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBNpcSceneInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBNpcSceneInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBNpcSceneInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBNpcSceneInfo)
    UnsafeMergeFrom(*source);
  }
}

void PBNpcSceneInfo::MergeFrom(const PBNpcSceneInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBNpcSceneInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBNpcSceneInfo::UnsafeMergeFrom(const PBNpcSceneInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.tempid() != 0) {
    set_tempid(from.tempid());
  }
  if (from.posx() != 0) {
    set_posx(from.posx());
  }
  if (from.posy() != 0) {
    set_posy(from.posy());
  }
}

void PBNpcSceneInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBNpcSceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBNpcSceneInfo::CopyFrom(const PBNpcSceneInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBNpcSceneInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBNpcSceneInfo::IsInitialized() const {

  return true;
}

void PBNpcSceneInfo::Swap(PBNpcSceneInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBNpcSceneInfo::InternalSwap(PBNpcSceneInfo* other) {
  std::swap(entityid_, other->entityid_);
  std::swap(tempid_, other->tempid_);
  std::swap(posx_, other->posx_);
  std::swap(posy_, other->posy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBNpcSceneInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBNpcSceneInfo_descriptor_;
  metadata.reflection = PBNpcSceneInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBNpcSceneInfo

// optional uint32 EntityID = 1;
void PBNpcSceneInfo::clear_entityid() {
  entityid_ = 0u;
}
::google::protobuf::uint32 PBNpcSceneInfo::entityid() const {
  // @@protoc_insertion_point(field_get:PBNpcSceneInfo.EntityID)
  return entityid_;
}
void PBNpcSceneInfo::set_entityid(::google::protobuf::uint32 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:PBNpcSceneInfo.EntityID)
}

// optional uint32 TempID = 2;
void PBNpcSceneInfo::clear_tempid() {
  tempid_ = 0u;
}
::google::protobuf::uint32 PBNpcSceneInfo::tempid() const {
  // @@protoc_insertion_point(field_get:PBNpcSceneInfo.TempID)
  return tempid_;
}
void PBNpcSceneInfo::set_tempid(::google::protobuf::uint32 value) {
  
  tempid_ = value;
  // @@protoc_insertion_point(field_set:PBNpcSceneInfo.TempID)
}

// optional uint32 PosX = 3;
void PBNpcSceneInfo::clear_posx() {
  posx_ = 0u;
}
::google::protobuf::uint32 PBNpcSceneInfo::posx() const {
  // @@protoc_insertion_point(field_get:PBNpcSceneInfo.PosX)
  return posx_;
}
void PBNpcSceneInfo::set_posx(::google::protobuf::uint32 value) {
  
  posx_ = value;
  // @@protoc_insertion_point(field_set:PBNpcSceneInfo.PosX)
}

// optional uint32 PosY = 4;
void PBNpcSceneInfo::clear_posy() {
  posy_ = 0u;
}
::google::protobuf::uint32 PBNpcSceneInfo::posy() const {
  // @@protoc_insertion_point(field_get:PBNpcSceneInfo.PosY)
  return posy_;
}
void PBNpcSceneInfo::set_posy(::google::protobuf::uint32 value) {
  
  posy_ = value;
  // @@protoc_insertion_point(field_set:PBNpcSceneInfo.PosY)
}

inline const PBNpcSceneInfo* PBNpcSceneInfo::internal_default_instance() {
  return &PBNpcSceneInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCreateNPCListNotify::kNPCInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCreateNPCListNotify::CCreateNPCListNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCreateNPCListNotify)
}

void CCreateNPCListNotify::InitAsDefaultInstance() {
}

CCreateNPCListNotify::CCreateNPCListNotify(const CCreateNPCListNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCreateNPCListNotify)
}

void CCreateNPCListNotify::SharedCtor() {
  _cached_size_ = 0;
}

CCreateNPCListNotify::~CCreateNPCListNotify() {
  // @@protoc_insertion_point(destructor:CCreateNPCListNotify)
  SharedDtor();
}

void CCreateNPCListNotify::SharedDtor() {
}

void CCreateNPCListNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCreateNPCListNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CCreateNPCListNotify_descriptor_;
}

const CCreateNPCListNotify& CCreateNPCListNotify::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CCreateNPCListNotify> CCreateNPCListNotify_default_instance_;

CCreateNPCListNotify* CCreateNPCListNotify::New(::google::protobuf::Arena* arena) const {
  CCreateNPCListNotify* n = new CCreateNPCListNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCreateNPCListNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CCreateNPCListNotify)
  npcinfo_.Clear();
}

bool CCreateNPCListNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCreateNPCListNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBNpcSceneInfo NPCInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_NPCInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_npcinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_NPCInfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCreateNPCListNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCreateNPCListNotify)
  return false;
#undef DO_
}

void CCreateNPCListNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCreateNPCListNotify)
  // repeated .PBNpcSceneInfo NPCInfo = 1;
  for (unsigned int i = 0, n = this->npcinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->npcinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CCreateNPCListNotify)
}

::google::protobuf::uint8* CCreateNPCListNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCreateNPCListNotify)
  // repeated .PBNpcSceneInfo NPCInfo = 1;
  for (unsigned int i = 0, n = this->npcinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->npcinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CCreateNPCListNotify)
  return target;
}

size_t CCreateNPCListNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCreateNPCListNotify)
  size_t total_size = 0;

  // repeated .PBNpcSceneInfo NPCInfo = 1;
  {
    unsigned int count = this->npcinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->npcinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCreateNPCListNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCreateNPCListNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CCreateNPCListNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCreateNPCListNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCreateNPCListNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCreateNPCListNotify)
    UnsafeMergeFrom(*source);
  }
}

void CCreateNPCListNotify::MergeFrom(const CCreateNPCListNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCreateNPCListNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CCreateNPCListNotify::UnsafeMergeFrom(const CCreateNPCListNotify& from) {
  GOOGLE_DCHECK(&from != this);
  npcinfo_.MergeFrom(from.npcinfo_);
}

void CCreateNPCListNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCreateNPCListNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCreateNPCListNotify::CopyFrom(const CCreateNPCListNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCreateNPCListNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CCreateNPCListNotify::IsInitialized() const {

  return true;
}

void CCreateNPCListNotify::Swap(CCreateNPCListNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCreateNPCListNotify::InternalSwap(CCreateNPCListNotify* other) {
  npcinfo_.UnsafeArenaSwap(&other->npcinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCreateNPCListNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CCreateNPCListNotify_descriptor_;
  metadata.reflection = CCreateNPCListNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCreateNPCListNotify

// repeated .PBNpcSceneInfo NPCInfo = 1;
int CCreateNPCListNotify::npcinfo_size() const {
  return npcinfo_.size();
}
void CCreateNPCListNotify::clear_npcinfo() {
  npcinfo_.Clear();
}
const ::PBNpcSceneInfo& CCreateNPCListNotify::npcinfo(int index) const {
  // @@protoc_insertion_point(field_get:CCreateNPCListNotify.NPCInfo)
  return npcinfo_.Get(index);
}
::PBNpcSceneInfo* CCreateNPCListNotify::mutable_npcinfo(int index) {
  // @@protoc_insertion_point(field_mutable:CCreateNPCListNotify.NPCInfo)
  return npcinfo_.Mutable(index);
}
::PBNpcSceneInfo* CCreateNPCListNotify::add_npcinfo() {
  // @@protoc_insertion_point(field_add:CCreateNPCListNotify.NPCInfo)
  return npcinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBNpcSceneInfo >*
CCreateNPCListNotify::mutable_npcinfo() {
  // @@protoc_insertion_point(field_mutable_list:CCreateNPCListNotify.NPCInfo)
  return &npcinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::PBNpcSceneInfo >&
CCreateNPCListNotify::npcinfo() const {
  // @@protoc_insertion_point(field_list:CCreateNPCListNotify.NPCInfo)
  return npcinfo_;
}

inline const CCreateNPCListNotify* CCreateNPCListNotify::internal_default_instance() {
  return &CCreateNPCListNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDestroyEntityNotify::kEntityIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDestroyEntityNotify::CDestroyEntityNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDestroyEntityNotify)
}

void CDestroyEntityNotify::InitAsDefaultInstance() {
}

CDestroyEntityNotify::CDestroyEntityNotify(const CDestroyEntityNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CDestroyEntityNotify)
}

void CDestroyEntityNotify::SharedCtor() {
  _cached_size_ = 0;
}

CDestroyEntityNotify::~CDestroyEntityNotify() {
  // @@protoc_insertion_point(destructor:CDestroyEntityNotify)
  SharedDtor();
}

void CDestroyEntityNotify::SharedDtor() {
}

void CDestroyEntityNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CDestroyEntityNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CDestroyEntityNotify_descriptor_;
}

const CDestroyEntityNotify& CDestroyEntityNotify::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CDestroyEntityNotify> CDestroyEntityNotify_default_instance_;

CDestroyEntityNotify* CDestroyEntityNotify::New(::google::protobuf::Arena* arena) const {
  CDestroyEntityNotify* n = new CDestroyEntityNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CDestroyEntityNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CDestroyEntityNotify)
  entityid_.Clear();
}

bool CDestroyEntityNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDestroyEntityNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 EntityID = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_entityid())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_entityid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDestroyEntityNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDestroyEntityNotify)
  return false;
#undef DO_
}

void CDestroyEntityNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDestroyEntityNotify)
  // repeated uint32 EntityID = 1;
  if (this->entityid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_entityid_cached_byte_size_);
  }
  for (int i = 0; i < this->entityid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->entityid(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CDestroyEntityNotify)
}

::google::protobuf::uint8* CDestroyEntityNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDestroyEntityNotify)
  // repeated uint32 EntityID = 1;
  if (this->entityid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _entityid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->entityid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->entityid(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CDestroyEntityNotify)
  return target;
}

size_t CDestroyEntityNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDestroyEntityNotify)
  size_t total_size = 0;

  // repeated uint32 EntityID = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->entityid_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->entityid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _entityid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CDestroyEntityNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDestroyEntityNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CDestroyEntityNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDestroyEntityNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDestroyEntityNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDestroyEntityNotify)
    UnsafeMergeFrom(*source);
  }
}

void CDestroyEntityNotify::MergeFrom(const CDestroyEntityNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDestroyEntityNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CDestroyEntityNotify::UnsafeMergeFrom(const CDestroyEntityNotify& from) {
  GOOGLE_DCHECK(&from != this);
  entityid_.UnsafeMergeFrom(from.entityid_);
}

void CDestroyEntityNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDestroyEntityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDestroyEntityNotify::CopyFrom(const CDestroyEntityNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDestroyEntityNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CDestroyEntityNotify::IsInitialized() const {

  return true;
}

void CDestroyEntityNotify::Swap(CDestroyEntityNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDestroyEntityNotify::InternalSwap(CDestroyEntityNotify* other) {
  entityid_.UnsafeArenaSwap(&other->entityid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CDestroyEntityNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CDestroyEntityNotify_descriptor_;
  metadata.reflection = CDestroyEntityNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CDestroyEntityNotify

// repeated uint32 EntityID = 1;
int CDestroyEntityNotify::entityid_size() const {
  return entityid_.size();
}
void CDestroyEntityNotify::clear_entityid() {
  entityid_.Clear();
}
::google::protobuf::uint32 CDestroyEntityNotify::entityid(int index) const {
  // @@protoc_insertion_point(field_get:CDestroyEntityNotify.EntityID)
  return entityid_.Get(index);
}
void CDestroyEntityNotify::set_entityid(int index, ::google::protobuf::uint32 value) {
  entityid_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDestroyEntityNotify.EntityID)
}
void CDestroyEntityNotify::add_entityid(::google::protobuf::uint32 value) {
  entityid_.Add(value);
  // @@protoc_insertion_point(field_add:CDestroyEntityNotify.EntityID)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CDestroyEntityNotify::entityid() const {
  // @@protoc_insertion_point(field_list:CDestroyEntityNotify.EntityID)
  return entityid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CDestroyEntityNotify::mutable_entityid() {
  // @@protoc_insertion_point(field_mutable_list:CDestroyEntityNotify.EntityID)
  return &entityid_;
}

inline const CDestroyEntityNotify* CDestroyEntityNotify::internal_default_instance() {
  return &CDestroyEntityNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPlayerMoveRequest::kDesPosXFieldNumber;
const int CPlayerMoveRequest::kDesPosYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPlayerMoveRequest::CPlayerMoveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPlayerMoveRequest)
}

void CPlayerMoveRequest::InitAsDefaultInstance() {
}

CPlayerMoveRequest::CPlayerMoveRequest(const CPlayerMoveRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CPlayerMoveRequest)
}

void CPlayerMoveRequest::SharedCtor() {
  ::memset(&desposx_, 0, reinterpret_cast<char*>(&desposy_) -
    reinterpret_cast<char*>(&desposx_) + sizeof(desposy_));
  _cached_size_ = 0;
}

CPlayerMoveRequest::~CPlayerMoveRequest() {
  // @@protoc_insertion_point(destructor:CPlayerMoveRequest)
  SharedDtor();
}

void CPlayerMoveRequest::SharedDtor() {
}

void CPlayerMoveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPlayerMoveRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPlayerMoveRequest_descriptor_;
}

const CPlayerMoveRequest& CPlayerMoveRequest::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CPlayerMoveRequest> CPlayerMoveRequest_default_instance_;

CPlayerMoveRequest* CPlayerMoveRequest::New(::google::protobuf::Arena* arena) const {
  CPlayerMoveRequest* n = new CPlayerMoveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPlayerMoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CPlayerMoveRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CPlayerMoveRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CPlayerMoveRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(desposx_, desposy_);

#undef ZR_HELPER_
#undef ZR_

}

bool CPlayerMoveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPlayerMoveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 DesPosX = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desposx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DesPosY;
        break;
      }

      // optional uint32 DesPosY = 2;
      case 2: {
        if (tag == 16) {
         parse_DesPosY:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desposy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPlayerMoveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPlayerMoveRequest)
  return false;
#undef DO_
}

void CPlayerMoveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPlayerMoveRequest)
  // optional uint32 DesPosX = 1;
  if (this->desposx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->desposx(), output);
  }

  // optional uint32 DesPosY = 2;
  if (this->desposy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->desposy(), output);
  }

  // @@protoc_insertion_point(serialize_end:CPlayerMoveRequest)
}

::google::protobuf::uint8* CPlayerMoveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPlayerMoveRequest)
  // optional uint32 DesPosX = 1;
  if (this->desposx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->desposx(), target);
  }

  // optional uint32 DesPosY = 2;
  if (this->desposy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->desposy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CPlayerMoveRequest)
  return target;
}

size_t CPlayerMoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPlayerMoveRequest)
  size_t total_size = 0;

  // optional uint32 DesPosX = 1;
  if (this->desposx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->desposx());
  }

  // optional uint32 DesPosY = 2;
  if (this->desposy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->desposy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPlayerMoveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPlayerMoveRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CPlayerMoveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPlayerMoveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPlayerMoveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPlayerMoveRequest)
    UnsafeMergeFrom(*source);
  }
}

void CPlayerMoveRequest::MergeFrom(const CPlayerMoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPlayerMoveRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CPlayerMoveRequest::UnsafeMergeFrom(const CPlayerMoveRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.desposx() != 0) {
    set_desposx(from.desposx());
  }
  if (from.desposy() != 0) {
    set_desposy(from.desposy());
  }
}

void CPlayerMoveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPlayerMoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPlayerMoveRequest::CopyFrom(const CPlayerMoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPlayerMoveRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CPlayerMoveRequest::IsInitialized() const {

  return true;
}

void CPlayerMoveRequest::Swap(CPlayerMoveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPlayerMoveRequest::InternalSwap(CPlayerMoveRequest* other) {
  std::swap(desposx_, other->desposx_);
  std::swap(desposy_, other->desposy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPlayerMoveRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPlayerMoveRequest_descriptor_;
  metadata.reflection = CPlayerMoveRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPlayerMoveRequest

// optional uint32 DesPosX = 1;
void CPlayerMoveRequest::clear_desposx() {
  desposx_ = 0u;
}
::google::protobuf::uint32 CPlayerMoveRequest::desposx() const {
  // @@protoc_insertion_point(field_get:CPlayerMoveRequest.DesPosX)
  return desposx_;
}
void CPlayerMoveRequest::set_desposx(::google::protobuf::uint32 value) {
  
  desposx_ = value;
  // @@protoc_insertion_point(field_set:CPlayerMoveRequest.DesPosX)
}

// optional uint32 DesPosY = 2;
void CPlayerMoveRequest::clear_desposy() {
  desposy_ = 0u;
}
::google::protobuf::uint32 CPlayerMoveRequest::desposy() const {
  // @@protoc_insertion_point(field_get:CPlayerMoveRequest.DesPosY)
  return desposy_;
}
void CPlayerMoveRequest::set_desposy(::google::protobuf::uint32 value) {
  
  desposy_ = value;
  // @@protoc_insertion_point(field_set:CPlayerMoveRequest.DesPosY)
}

inline const CPlayerMoveRequest* CPlayerMoveRequest::internal_default_instance() {
  return &CPlayerMoveRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPlayerMoveResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPlayerMoveResponse::CPlayerMoveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPlayerMoveResponse)
}

void CPlayerMoveResponse::InitAsDefaultInstance() {
}

CPlayerMoveResponse::CPlayerMoveResponse(const CPlayerMoveResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CPlayerMoveResponse)
}

void CPlayerMoveResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

CPlayerMoveResponse::~CPlayerMoveResponse() {
  // @@protoc_insertion_point(destructor:CPlayerMoveResponse)
  SharedDtor();
}

void CPlayerMoveResponse::SharedDtor() {
}

void CPlayerMoveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPlayerMoveResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPlayerMoveResponse_descriptor_;
}

const CPlayerMoveResponse& CPlayerMoveResponse::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CPlayerMoveResponse> CPlayerMoveResponse_default_instance_;

CPlayerMoveResponse* CPlayerMoveResponse::New(::google::protobuf::Arena* arena) const {
  CPlayerMoveResponse* n = new CPlayerMoveResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPlayerMoveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CPlayerMoveResponse)
  result_ = 0u;
}

bool CPlayerMoveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPlayerMoveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPlayerMoveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPlayerMoveResponse)
  return false;
#undef DO_
}

void CPlayerMoveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPlayerMoveResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:CPlayerMoveResponse)
}

::google::protobuf::uint8* CPlayerMoveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPlayerMoveResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CPlayerMoveResponse)
  return target;
}

size_t CPlayerMoveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPlayerMoveResponse)
  size_t total_size = 0;

  // optional uint32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPlayerMoveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPlayerMoveResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CPlayerMoveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPlayerMoveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPlayerMoveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPlayerMoveResponse)
    UnsafeMergeFrom(*source);
  }
}

void CPlayerMoveResponse::MergeFrom(const CPlayerMoveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPlayerMoveResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CPlayerMoveResponse::UnsafeMergeFrom(const CPlayerMoveResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CPlayerMoveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPlayerMoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPlayerMoveResponse::CopyFrom(const CPlayerMoveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPlayerMoveResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CPlayerMoveResponse::IsInitialized() const {

  return true;
}

void CPlayerMoveResponse::Swap(CPlayerMoveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPlayerMoveResponse::InternalSwap(CPlayerMoveResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPlayerMoveResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPlayerMoveResponse_descriptor_;
  metadata.reflection = CPlayerMoveResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPlayerMoveResponse

// optional uint32 Result = 1;
void CPlayerMoveResponse::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 CPlayerMoveResponse::result() const {
  // @@protoc_insertion_point(field_get:CPlayerMoveResponse.Result)
  return result_;
}
void CPlayerMoveResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPlayerMoveResponse.Result)
}

inline const CPlayerMoveResponse* CPlayerMoveResponse::internal_default_instance() {
  return &CPlayerMoveResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPlayerTeleportRequest::kMapIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPlayerTeleportRequest::CPlayerTeleportRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPlayerTeleportRequest)
}

void CPlayerTeleportRequest::InitAsDefaultInstance() {
}

CPlayerTeleportRequest::CPlayerTeleportRequest(const CPlayerTeleportRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CPlayerTeleportRequest)
}

void CPlayerTeleportRequest::SharedCtor() {
  mapid_ = 0u;
  _cached_size_ = 0;
}

CPlayerTeleportRequest::~CPlayerTeleportRequest() {
  // @@protoc_insertion_point(destructor:CPlayerTeleportRequest)
  SharedDtor();
}

void CPlayerTeleportRequest::SharedDtor() {
}

void CPlayerTeleportRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPlayerTeleportRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPlayerTeleportRequest_descriptor_;
}

const CPlayerTeleportRequest& CPlayerTeleportRequest::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CPlayerTeleportRequest> CPlayerTeleportRequest_default_instance_;

CPlayerTeleportRequest* CPlayerTeleportRequest::New(::google::protobuf::Arena* arena) const {
  CPlayerTeleportRequest* n = new CPlayerTeleportRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPlayerTeleportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CPlayerTeleportRequest)
  mapid_ = 0u;
}

bool CPlayerTeleportRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPlayerTeleportRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MapID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPlayerTeleportRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPlayerTeleportRequest)
  return false;
#undef DO_
}

void CPlayerTeleportRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPlayerTeleportRequest)
  // optional uint32 MapID = 1;
  if (this->mapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mapid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CPlayerTeleportRequest)
}

::google::protobuf::uint8* CPlayerTeleportRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPlayerTeleportRequest)
  // optional uint32 MapID = 1;
  if (this->mapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mapid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CPlayerTeleportRequest)
  return target;
}

size_t CPlayerTeleportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPlayerTeleportRequest)
  size_t total_size = 0;

  // optional uint32 MapID = 1;
  if (this->mapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mapid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPlayerTeleportRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPlayerTeleportRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CPlayerTeleportRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPlayerTeleportRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPlayerTeleportRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPlayerTeleportRequest)
    UnsafeMergeFrom(*source);
  }
}

void CPlayerTeleportRequest::MergeFrom(const CPlayerTeleportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPlayerTeleportRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CPlayerTeleportRequest::UnsafeMergeFrom(const CPlayerTeleportRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.mapid() != 0) {
    set_mapid(from.mapid());
  }
}

void CPlayerTeleportRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPlayerTeleportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPlayerTeleportRequest::CopyFrom(const CPlayerTeleportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPlayerTeleportRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CPlayerTeleportRequest::IsInitialized() const {

  return true;
}

void CPlayerTeleportRequest::Swap(CPlayerTeleportRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPlayerTeleportRequest::InternalSwap(CPlayerTeleportRequest* other) {
  std::swap(mapid_, other->mapid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPlayerTeleportRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPlayerTeleportRequest_descriptor_;
  metadata.reflection = CPlayerTeleportRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPlayerTeleportRequest

// optional uint32 MapID = 1;
void CPlayerTeleportRequest::clear_mapid() {
  mapid_ = 0u;
}
::google::protobuf::uint32 CPlayerTeleportRequest::mapid() const {
  // @@protoc_insertion_point(field_get:CPlayerTeleportRequest.MapID)
  return mapid_;
}
void CPlayerTeleportRequest::set_mapid(::google::protobuf::uint32 value) {
  
  mapid_ = value;
  // @@protoc_insertion_point(field_set:CPlayerTeleportRequest.MapID)
}

inline const CPlayerTeleportRequest* CPlayerTeleportRequest::internal_default_instance() {
  return &CPlayerTeleportRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPlayerTeleportResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPlayerTeleportResponse::CPlayerTeleportResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mapmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPlayerTeleportResponse)
}

void CPlayerTeleportResponse::InitAsDefaultInstance() {
}

CPlayerTeleportResponse::CPlayerTeleportResponse(const CPlayerTeleportResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CPlayerTeleportResponse)
}

void CPlayerTeleportResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

CPlayerTeleportResponse::~CPlayerTeleportResponse() {
  // @@protoc_insertion_point(destructor:CPlayerTeleportResponse)
  SharedDtor();
}

void CPlayerTeleportResponse::SharedDtor() {
}

void CPlayerTeleportResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPlayerTeleportResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPlayerTeleportResponse_descriptor_;
}

const CPlayerTeleportResponse& CPlayerTeleportResponse::default_instance() {
  protobuf_InitDefaults_mapmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CPlayerTeleportResponse> CPlayerTeleportResponse_default_instance_;

CPlayerTeleportResponse* CPlayerTeleportResponse::New(::google::protobuf::Arena* arena) const {
  CPlayerTeleportResponse* n = new CPlayerTeleportResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPlayerTeleportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CPlayerTeleportResponse)
  result_ = 0u;
}

bool CPlayerTeleportResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPlayerTeleportResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPlayerTeleportResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPlayerTeleportResponse)
  return false;
#undef DO_
}

void CPlayerTeleportResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPlayerTeleportResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:CPlayerTeleportResponse)
}

::google::protobuf::uint8* CPlayerTeleportResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPlayerTeleportResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CPlayerTeleportResponse)
  return target;
}

size_t CPlayerTeleportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPlayerTeleportResponse)
  size_t total_size = 0;

  // optional uint32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPlayerTeleportResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPlayerTeleportResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CPlayerTeleportResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPlayerTeleportResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPlayerTeleportResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPlayerTeleportResponse)
    UnsafeMergeFrom(*source);
  }
}

void CPlayerTeleportResponse::MergeFrom(const CPlayerTeleportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPlayerTeleportResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CPlayerTeleportResponse::UnsafeMergeFrom(const CPlayerTeleportResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CPlayerTeleportResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPlayerTeleportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPlayerTeleportResponse::CopyFrom(const CPlayerTeleportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPlayerTeleportResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CPlayerTeleportResponse::IsInitialized() const {

  return true;
}

void CPlayerTeleportResponse::Swap(CPlayerTeleportResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPlayerTeleportResponse::InternalSwap(CPlayerTeleportResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPlayerTeleportResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPlayerTeleportResponse_descriptor_;
  metadata.reflection = CPlayerTeleportResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPlayerTeleportResponse

// optional uint32 Result = 1;
void CPlayerTeleportResponse::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 CPlayerTeleportResponse::result() const {
  // @@protoc_insertion_point(field_get:CPlayerTeleportResponse.Result)
  return result_;
}
void CPlayerTeleportResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPlayerTeleportResponse.Result)
}

inline const CPlayerTeleportResponse* CPlayerTeleportResponse::internal_default_instance() {
  return &CPlayerTeleportResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
