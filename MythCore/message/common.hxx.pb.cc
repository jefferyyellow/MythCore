// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.hxx

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common.hxx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PBItemList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBItemList_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBItemObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBItemObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBItemEquip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBItemEquip_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTask_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTask_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBTaskList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBTaskList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_2ehxx() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_common_2ehxx() {
  protobuf_AddDesc_common_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common.hxx");
  GOOGLE_CHECK(file != NULL);
  PBItemList_descriptor_ = file->message_type(0);
  static const int PBItemList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBItemList, itemobject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBItemList, size_),
  };
  PBItemList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBItemList_descriptor_,
      PBItemList::internal_default_instance(),
      PBItemList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBItemList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBItemList, _internal_metadata_));
  PBItemObject_descriptor_ = file->message_type(1);
  static const int PBItemObject_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBItemObject, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBItemObject, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBItemObject, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBItemObject, itemequip_),
  };
  PBItemObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBItemObject_descriptor_,
      PBItemObject::internal_default_instance(),
      PBItemObject_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBItemObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBItemObject, _internal_metadata_));
  PBItemEquip_descriptor_ = file->message_type(2);
  static const int PBItemEquip_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBItemEquip, level_),
  };
  PBItemEquip_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBItemEquip_descriptor_,
      PBItemEquip::internal_default_instance(),
      PBItemEquip_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBItemEquip),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBItemEquip, _internal_metadata_));
  PBTask_descriptor_ = file->message_type(3);
  static const int PBTask_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTask, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTask, param_),
  };
  PBTask_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBTask_descriptor_,
      PBTask::internal_default_instance(),
      PBTask_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBTask),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTask, _internal_metadata_));
  PBTaskList_descriptor_ = file->message_type(4);
  static const int PBTaskList_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTaskList, maxcompletetaskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTaskList, completetasks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTaskList, tasklist_),
  };
  PBTaskList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBTaskList_descriptor_,
      PBTaskList::internal_default_instance(),
      PBTaskList_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBTaskList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBTaskList, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_2ehxx);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBItemList_descriptor_, PBItemList::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBItemObject_descriptor_, PBItemObject::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBItemEquip_descriptor_, PBItemEquip::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBTask_descriptor_, PBTask::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBTaskList_descriptor_, PBTaskList::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_common_2ehxx() {
  PBItemList_default_instance_.Shutdown();
  delete PBItemList_reflection_;
  PBItemObject_default_instance_.Shutdown();
  delete PBItemObject_reflection_;
  PBItemEquip_default_instance_.Shutdown();
  delete PBItemEquip_reflection_;
  PBTask_default_instance_.Shutdown();
  delete PBTask_reflection_;
  PBTaskList_default_instance_.Shutdown();
  delete PBTaskList_reflection_;
}

void protobuf_InitDefaults_common_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  PBItemList_default_instance_.DefaultConstruct();
  PBItemObject_default_instance_.DefaultConstruct();
  PBItemEquip_default_instance_.DefaultConstruct();
  PBTask_default_instance_.DefaultConstruct();
  PBTaskList_default_instance_.DefaultConstruct();
  PBItemList_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBItemObject_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBItemEquip_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBTask_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBTaskList_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_common_2ehxx_once_);
void protobuf_InitDefaults_common_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_common_2ehxx_once_,
                 &protobuf_InitDefaults_common_2ehxx_impl);
}
void protobuf_AddDesc_common_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_common_2ehxx();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ncommon.hxx\"=\n\nPBItemList\022!\n\nItemObject"
    "\030\001 \003(\0132\r.PBItemObject\022\014\n\004Size\030\002 \001(\r\"^\n\014P"
    "BItemObject\022\016\n\006ItemID\030\001 \001(\r\022\016\n\006Number\030\002 "
    "\001(\r\022\r\n\005Index\030\003 \001(\r\022\037\n\tItemEquip\030\004 \001(\0132\014."
    "PBItemEquip\"\034\n\013PBItemEquip\022\r\n\005Level\030\004 \001("
    "\r\"\'\n\006PBTask\022\016\n\006TaskID\030\001 \001(\r\022\r\n\005Param\030\002 \003"
    "(\r\"Y\n\nPBTaskList\022\031\n\021MaxCompleteTaskID\030\001 "
    "\001(\r\022\025\n\rCompleteTasks\030\002 \003(\007\022\031\n\010TaskList\030\003"
    " \003(\0132\007.PBTaskb\006proto3", 341);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common.hxx", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_2ehxx);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_common_2ehxx_once_);
void protobuf_AddDesc_common_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_common_2ehxx_once_,
                 &protobuf_AddDesc_common_2ehxx_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_2ehxx {
  StaticDescriptorInitializer_common_2ehxx() {
    protobuf_AddDesc_common_2ehxx();
  }
} static_descriptor_initializer_common_2ehxx_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBItemList::kItemObjectFieldNumber;
const int PBItemList::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBItemList::PBItemList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_common_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBItemList)
}

void PBItemList::InitAsDefaultInstance() {
}

PBItemList::PBItemList(const PBItemList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBItemList)
}

void PBItemList::SharedCtor() {
  size_ = 0u;
  _cached_size_ = 0;
}

PBItemList::~PBItemList() {
  // @@protoc_insertion_point(destructor:PBItemList)
  SharedDtor();
}

void PBItemList::SharedDtor() {
}

void PBItemList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBItemList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBItemList_descriptor_;
}

const PBItemList& PBItemList::default_instance() {
  protobuf_InitDefaults_common_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBItemList> PBItemList_default_instance_;

PBItemList* PBItemList::New(::google::protobuf::Arena* arena) const {
  PBItemList* n = new PBItemList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBItemList::Clear() {
// @@protoc_insertion_point(message_clear_start:PBItemList)
  size_ = 0u;
  itemobject_.Clear();
}

bool PBItemList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBItemList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBItemObject ItemObject = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ItemObject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemobject()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ItemObject;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_Size;
        break;
      }

      // optional uint32 Size = 2;
      case 2: {
        if (tag == 16) {
         parse_Size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBItemList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBItemList)
  return false;
#undef DO_
}

void PBItemList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBItemList)
  // repeated .PBItemObject ItemObject = 1;
  for (unsigned int i = 0, n = this->itemobject_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->itemobject(i), output);
  }

  // optional uint32 Size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->size(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBItemList)
}

::google::protobuf::uint8* PBItemList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBItemList)
  // repeated .PBItemObject ItemObject = 1;
  for (unsigned int i = 0, n = this->itemobject_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->itemobject(i), false, target);
  }

  // optional uint32 Size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBItemList)
  return target;
}

size_t PBItemList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBItemList)
  size_t total_size = 0;

  // optional uint32 Size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  // repeated .PBItemObject ItemObject = 1;
  {
    unsigned int count = this->itemobject_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemobject(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBItemList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBItemList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBItemList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBItemList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBItemList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBItemList)
    UnsafeMergeFrom(*source);
  }
}

void PBItemList::MergeFrom(const PBItemList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBItemList)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBItemList::UnsafeMergeFrom(const PBItemList& from) {
  GOOGLE_DCHECK(&from != this);
  itemobject_.MergeFrom(from.itemobject_);
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void PBItemList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBItemList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBItemList::CopyFrom(const PBItemList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBItemList)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBItemList::IsInitialized() const {

  return true;
}

void PBItemList::Swap(PBItemList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBItemList::InternalSwap(PBItemList* other) {
  itemobject_.UnsafeArenaSwap(&other->itemobject_);
  std::swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBItemList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBItemList_descriptor_;
  metadata.reflection = PBItemList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBItemList

// repeated .PBItemObject ItemObject = 1;
int PBItemList::itemobject_size() const {
  return itemobject_.size();
}
void PBItemList::clear_itemobject() {
  itemobject_.Clear();
}
const ::PBItemObject& PBItemList::itemobject(int index) const {
  // @@protoc_insertion_point(field_get:PBItemList.ItemObject)
  return itemobject_.Get(index);
}
::PBItemObject* PBItemList::mutable_itemobject(int index) {
  // @@protoc_insertion_point(field_mutable:PBItemList.ItemObject)
  return itemobject_.Mutable(index);
}
::PBItemObject* PBItemList::add_itemobject() {
  // @@protoc_insertion_point(field_add:PBItemList.ItemObject)
  return itemobject_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBItemObject >*
PBItemList::mutable_itemobject() {
  // @@protoc_insertion_point(field_mutable_list:PBItemList.ItemObject)
  return &itemobject_;
}
const ::google::protobuf::RepeatedPtrField< ::PBItemObject >&
PBItemList::itemobject() const {
  // @@protoc_insertion_point(field_list:PBItemList.ItemObject)
  return itemobject_;
}

// optional uint32 Size = 2;
void PBItemList::clear_size() {
  size_ = 0u;
}
::google::protobuf::uint32 PBItemList::size() const {
  // @@protoc_insertion_point(field_get:PBItemList.Size)
  return size_;
}
void PBItemList::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:PBItemList.Size)
}

inline const PBItemList* PBItemList::internal_default_instance() {
  return &PBItemList_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBItemObject::kItemIDFieldNumber;
const int PBItemObject::kNumberFieldNumber;
const int PBItemObject::kIndexFieldNumber;
const int PBItemObject::kItemEquipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBItemObject::PBItemObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_common_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBItemObject)
}

void PBItemObject::InitAsDefaultInstance() {
  itemequip_ = const_cast< ::PBItemEquip*>(
      ::PBItemEquip::internal_default_instance());
}

PBItemObject::PBItemObject(const PBItemObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBItemObject)
}

void PBItemObject::SharedCtor() {
  itemequip_ = NULL;
  ::memset(&itemid_, 0, reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&itemid_) + sizeof(index_));
  _cached_size_ = 0;
}

PBItemObject::~PBItemObject() {
  // @@protoc_insertion_point(destructor:PBItemObject)
  SharedDtor();
}

void PBItemObject::SharedDtor() {
  if (this != &PBItemObject_default_instance_.get()) {
    delete itemequip_;
  }
}

void PBItemObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBItemObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBItemObject_descriptor_;
}

const PBItemObject& PBItemObject::default_instance() {
  protobuf_InitDefaults_common_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBItemObject> PBItemObject_default_instance_;

PBItemObject* PBItemObject::New(::google::protobuf::Arena* arena) const {
  PBItemObject* n = new PBItemObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBItemObject::Clear() {
// @@protoc_insertion_point(message_clear_start:PBItemObject)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBItemObject, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBItemObject*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(itemid_, index_);
  if (GetArenaNoVirtual() == NULL && itemequip_ != NULL) delete itemequip_;
  itemequip_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool PBItemObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBItemObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Number;
        break;
      }

      // optional uint32 Number = 2;
      case 2: {
        if (tag == 16) {
         parse_Number:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Index;
        break;
      }

      // optional uint32 Index = 3;
      case 3: {
        if (tag == 24) {
         parse_Index:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ItemEquip;
        break;
      }

      // optional .PBItemEquip ItemEquip = 4;
      case 4: {
        if (tag == 34) {
         parse_ItemEquip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemequip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBItemObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBItemObject)
  return false;
#undef DO_
}

void PBItemObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBItemObject)
  // optional uint32 ItemID = 1;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 Number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->number(), output);
  }

  // optional uint32 Index = 3;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->index(), output);
  }

  // optional .PBItemEquip ItemEquip = 4;
  if (this->has_itemequip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->itemequip_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBItemObject)
}

::google::protobuf::uint8* PBItemObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBItemObject)
  // optional uint32 ItemID = 1;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 Number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->number(), target);
  }

  // optional uint32 Index = 3;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->index(), target);
  }

  // optional .PBItemEquip ItemEquip = 4;
  if (this->has_itemequip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->itemequip_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBItemObject)
  return target;
}

size_t PBItemObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBItemObject)
  size_t total_size = 0;

  // optional uint32 ItemID = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemid());
  }

  // optional uint32 Number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number());
  }

  // optional uint32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // optional .PBItemEquip ItemEquip = 4;
  if (this->has_itemequip()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->itemequip_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBItemObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBItemObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBItemObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBItemObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBItemObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBItemObject)
    UnsafeMergeFrom(*source);
  }
}

void PBItemObject::MergeFrom(const PBItemObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBItemObject)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBItemObject::UnsafeMergeFrom(const PBItemObject& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.has_itemequip()) {
    mutable_itemequip()->::PBItemEquip::MergeFrom(from.itemequip());
  }
}

void PBItemObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBItemObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBItemObject::CopyFrom(const PBItemObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBItemObject)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBItemObject::IsInitialized() const {

  return true;
}

void PBItemObject::Swap(PBItemObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBItemObject::InternalSwap(PBItemObject* other) {
  std::swap(itemid_, other->itemid_);
  std::swap(number_, other->number_);
  std::swap(index_, other->index_);
  std::swap(itemequip_, other->itemequip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBItemObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBItemObject_descriptor_;
  metadata.reflection = PBItemObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBItemObject

// optional uint32 ItemID = 1;
void PBItemObject::clear_itemid() {
  itemid_ = 0u;
}
::google::protobuf::uint32 PBItemObject::itemid() const {
  // @@protoc_insertion_point(field_get:PBItemObject.ItemID)
  return itemid_;
}
void PBItemObject::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:PBItemObject.ItemID)
}

// optional uint32 Number = 2;
void PBItemObject::clear_number() {
  number_ = 0u;
}
::google::protobuf::uint32 PBItemObject::number() const {
  // @@protoc_insertion_point(field_get:PBItemObject.Number)
  return number_;
}
void PBItemObject::set_number(::google::protobuf::uint32 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:PBItemObject.Number)
}

// optional uint32 Index = 3;
void PBItemObject::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 PBItemObject::index() const {
  // @@protoc_insertion_point(field_get:PBItemObject.Index)
  return index_;
}
void PBItemObject::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:PBItemObject.Index)
}

// optional .PBItemEquip ItemEquip = 4;
bool PBItemObject::has_itemequip() const {
  return this != internal_default_instance() && itemequip_ != NULL;
}
void PBItemObject::clear_itemequip() {
  if (GetArenaNoVirtual() == NULL && itemequip_ != NULL) delete itemequip_;
  itemequip_ = NULL;
}
const ::PBItemEquip& PBItemObject::itemequip() const {
  // @@protoc_insertion_point(field_get:PBItemObject.ItemEquip)
  return itemequip_ != NULL ? *itemequip_
                         : *::PBItemEquip::internal_default_instance();
}
::PBItemEquip* PBItemObject::mutable_itemequip() {
  
  if (itemequip_ == NULL) {
    itemequip_ = new ::PBItemEquip;
  }
  // @@protoc_insertion_point(field_mutable:PBItemObject.ItemEquip)
  return itemequip_;
}
::PBItemEquip* PBItemObject::release_itemequip() {
  // @@protoc_insertion_point(field_release:PBItemObject.ItemEquip)
  
  ::PBItemEquip* temp = itemequip_;
  itemequip_ = NULL;
  return temp;
}
void PBItemObject::set_allocated_itemequip(::PBItemEquip* itemequip) {
  delete itemequip_;
  itemequip_ = itemequip;
  if (itemequip) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBItemObject.ItemEquip)
}

inline const PBItemObject* PBItemObject::internal_default_instance() {
  return &PBItemObject_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBItemEquip::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBItemEquip::PBItemEquip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_common_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBItemEquip)
}

void PBItemEquip::InitAsDefaultInstance() {
}

PBItemEquip::PBItemEquip(const PBItemEquip& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBItemEquip)
}

void PBItemEquip::SharedCtor() {
  level_ = 0u;
  _cached_size_ = 0;
}

PBItemEquip::~PBItemEquip() {
  // @@protoc_insertion_point(destructor:PBItemEquip)
  SharedDtor();
}

void PBItemEquip::SharedDtor() {
}

void PBItemEquip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBItemEquip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBItemEquip_descriptor_;
}

const PBItemEquip& PBItemEquip::default_instance() {
  protobuf_InitDefaults_common_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBItemEquip> PBItemEquip_default_instance_;

PBItemEquip* PBItemEquip::New(::google::protobuf::Arena* arena) const {
  PBItemEquip* n = new PBItemEquip;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBItemEquip::Clear() {
// @@protoc_insertion_point(message_clear_start:PBItemEquip)
  level_ = 0u;
}

bool PBItemEquip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBItemEquip)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Level = 4;
      case 4: {
        if (tag == 32) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBItemEquip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBItemEquip)
  return false;
#undef DO_
}

void PBItemEquip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBItemEquip)
  // optional uint32 Level = 4;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->level(), output);
  }

  // @@protoc_insertion_point(serialize_end:PBItemEquip)
}

::google::protobuf::uint8* PBItemEquip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBItemEquip)
  // optional uint32 Level = 4;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->level(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBItemEquip)
  return target;
}

size_t PBItemEquip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBItemEquip)
  size_t total_size = 0;

  // optional uint32 Level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBItemEquip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBItemEquip)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBItemEquip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBItemEquip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBItemEquip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBItemEquip)
    UnsafeMergeFrom(*source);
  }
}

void PBItemEquip::MergeFrom(const PBItemEquip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBItemEquip)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBItemEquip::UnsafeMergeFrom(const PBItemEquip& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void PBItemEquip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBItemEquip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBItemEquip::CopyFrom(const PBItemEquip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBItemEquip)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBItemEquip::IsInitialized() const {

  return true;
}

void PBItemEquip::Swap(PBItemEquip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBItemEquip::InternalSwap(PBItemEquip* other) {
  std::swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBItemEquip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBItemEquip_descriptor_;
  metadata.reflection = PBItemEquip_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBItemEquip

// optional uint32 Level = 4;
void PBItemEquip::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 PBItemEquip::level() const {
  // @@protoc_insertion_point(field_get:PBItemEquip.Level)
  return level_;
}
void PBItemEquip::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:PBItemEquip.Level)
}

inline const PBItemEquip* PBItemEquip::internal_default_instance() {
  return &PBItemEquip_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTask::kTaskIDFieldNumber;
const int PBTask::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTask::PBTask()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_common_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBTask)
}

void PBTask::InitAsDefaultInstance() {
}

PBTask::PBTask(const PBTask& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBTask)
}

void PBTask::SharedCtor() {
  taskid_ = 0u;
  _cached_size_ = 0;
}

PBTask::~PBTask() {
  // @@protoc_insertion_point(destructor:PBTask)
  SharedDtor();
}

void PBTask::SharedDtor() {
}

void PBTask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTask::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTask_descriptor_;
}

const PBTask& PBTask::default_instance() {
  protobuf_InitDefaults_common_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBTask> PBTask_default_instance_;

PBTask* PBTask::New(::google::protobuf::Arena* arena) const {
  PBTask* n = new PBTask;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBTask::Clear() {
// @@protoc_insertion_point(message_clear_start:PBTask)
  taskid_ = 0u;
  param_.Clear();
}

bool PBTask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBTask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 TaskID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Param;
        break;
      }

      // repeated uint32 Param = 2;
      case 2: {
        if (tag == 18) {
         parse_Param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_param())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_param())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBTask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBTask)
  return false;
#undef DO_
}

void PBTask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBTask)
  // optional uint32 TaskID = 1;
  if (this->taskid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->taskid(), output);
  }

  // repeated uint32 Param = 2;
  if (this->param_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_param_cached_byte_size_);
  }
  for (int i = 0; i < this->param_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->param(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PBTask)
}

::google::protobuf::uint8* PBTask::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBTask)
  // optional uint32 TaskID = 1;
  if (this->taskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->taskid(), target);
  }

  // repeated uint32 Param = 2;
  if (this->param_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _param_cached_byte_size_, target);
  }
  for (int i = 0; i < this->param_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->param(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBTask)
  return target;
}

size_t PBTask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBTask)
  size_t total_size = 0;

  // optional uint32 TaskID = 1;
  if (this->taskid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->taskid());
  }

  // repeated uint32 Param = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->param_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->param(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _param_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTask::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBTask)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBTask* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTask>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBTask)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBTask)
    UnsafeMergeFrom(*source);
  }
}

void PBTask::MergeFrom(const PBTask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBTask)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBTask::UnsafeMergeFrom(const PBTask& from) {
  GOOGLE_DCHECK(&from != this);
  param_.UnsafeMergeFrom(from.param_);
  if (from.taskid() != 0) {
    set_taskid(from.taskid());
  }
}

void PBTask::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTask::CopyFrom(const PBTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBTask)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBTask::IsInitialized() const {

  return true;
}

void PBTask::Swap(PBTask* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTask::InternalSwap(PBTask* other) {
  std::swap(taskid_, other->taskid_);
  param_.UnsafeArenaSwap(&other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBTask::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTask_descriptor_;
  metadata.reflection = PBTask_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBTask

// optional uint32 TaskID = 1;
void PBTask::clear_taskid() {
  taskid_ = 0u;
}
::google::protobuf::uint32 PBTask::taskid() const {
  // @@protoc_insertion_point(field_get:PBTask.TaskID)
  return taskid_;
}
void PBTask::set_taskid(::google::protobuf::uint32 value) {
  
  taskid_ = value;
  // @@protoc_insertion_point(field_set:PBTask.TaskID)
}

// repeated uint32 Param = 2;
int PBTask::param_size() const {
  return param_.size();
}
void PBTask::clear_param() {
  param_.Clear();
}
::google::protobuf::uint32 PBTask::param(int index) const {
  // @@protoc_insertion_point(field_get:PBTask.Param)
  return param_.Get(index);
}
void PBTask::set_param(int index, ::google::protobuf::uint32 value) {
  param_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBTask.Param)
}
void PBTask::add_param(::google::protobuf::uint32 value) {
  param_.Add(value);
  // @@protoc_insertion_point(field_add:PBTask.Param)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTask::param() const {
  // @@protoc_insertion_point(field_list:PBTask.Param)
  return param_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTask::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:PBTask.Param)
  return &param_;
}

inline const PBTask* PBTask::internal_default_instance() {
  return &PBTask_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBTaskList::kMaxCompleteTaskIDFieldNumber;
const int PBTaskList::kCompleteTasksFieldNumber;
const int PBTaskList::kTaskListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBTaskList::PBTaskList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_common_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBTaskList)
}

void PBTaskList::InitAsDefaultInstance() {
}

PBTaskList::PBTaskList(const PBTaskList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBTaskList)
}

void PBTaskList::SharedCtor() {
  maxcompletetaskid_ = 0u;
  _cached_size_ = 0;
}

PBTaskList::~PBTaskList() {
  // @@protoc_insertion_point(destructor:PBTaskList)
  SharedDtor();
}

void PBTaskList::SharedDtor() {
}

void PBTaskList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBTaskList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBTaskList_descriptor_;
}

const PBTaskList& PBTaskList::default_instance() {
  protobuf_InitDefaults_common_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBTaskList> PBTaskList_default_instance_;

PBTaskList* PBTaskList::New(::google::protobuf::Arena* arena) const {
  PBTaskList* n = new PBTaskList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBTaskList::Clear() {
// @@protoc_insertion_point(message_clear_start:PBTaskList)
  maxcompletetaskid_ = 0u;
  completetasks_.Clear();
  tasklist_.Clear();
}

bool PBTaskList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBTaskList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MaxCompleteTaskID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxcompletetaskid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CompleteTasks;
        break;
      }

      // repeated fixed32 CompleteTasks = 2;
      case 2: {
        if (tag == 18) {
         parse_CompleteTasks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_completetasks())));
        } else if (tag == 21) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 18, input, this->mutable_completetasks())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_TaskList;
        break;
      }

      // repeated .PBTask TaskList = 3;
      case 3: {
        if (tag == 26) {
         parse_TaskList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_TaskList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tasklist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_TaskList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBTaskList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBTaskList)
  return false;
#undef DO_
}

void PBTaskList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBTaskList)
  // optional uint32 MaxCompleteTaskID = 1;
  if (this->maxcompletetaskid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->maxcompletetaskid(), output);
  }

  // repeated fixed32 CompleteTasks = 2;
  if (this->completetasks_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_completetasks_cached_byte_size_);
  }
  for (int i = 0; i < this->completetasks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32NoTag(
      this->completetasks(i), output);
  }

  // repeated .PBTask TaskList = 3;
  for (unsigned int i = 0, n = this->tasklist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tasklist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PBTaskList)
}

::google::protobuf::uint8* PBTaskList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBTaskList)
  // optional uint32 MaxCompleteTaskID = 1;
  if (this->maxcompletetaskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->maxcompletetaskid(), target);
  }

  // repeated fixed32 CompleteTasks = 2;
  if (this->completetasks_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _completetasks_cached_byte_size_, target);
  }
  for (int i = 0; i < this->completetasks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->completetasks(i), target);
  }

  // repeated .PBTask TaskList = 3;
  for (unsigned int i = 0, n = this->tasklist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->tasklist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBTaskList)
  return target;
}

size_t PBTaskList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBTaskList)
  size_t total_size = 0;

  // optional uint32 MaxCompleteTaskID = 1;
  if (this->maxcompletetaskid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxcompletetaskid());
  }

  // repeated fixed32 CompleteTasks = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->completetasks_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _completetasks_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .PBTask TaskList = 3;
  {
    unsigned int count = this->tasklist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tasklist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBTaskList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBTaskList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBTaskList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBTaskList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBTaskList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBTaskList)
    UnsafeMergeFrom(*source);
  }
}

void PBTaskList::MergeFrom(const PBTaskList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBTaskList)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBTaskList::UnsafeMergeFrom(const PBTaskList& from) {
  GOOGLE_DCHECK(&from != this);
  completetasks_.UnsafeMergeFrom(from.completetasks_);
  tasklist_.MergeFrom(from.tasklist_);
  if (from.maxcompletetaskid() != 0) {
    set_maxcompletetaskid(from.maxcompletetaskid());
  }
}

void PBTaskList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBTaskList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBTaskList::CopyFrom(const PBTaskList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBTaskList)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBTaskList::IsInitialized() const {

  return true;
}

void PBTaskList::Swap(PBTaskList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBTaskList::InternalSwap(PBTaskList* other) {
  std::swap(maxcompletetaskid_, other->maxcompletetaskid_);
  completetasks_.UnsafeArenaSwap(&other->completetasks_);
  tasklist_.UnsafeArenaSwap(&other->tasklist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBTaskList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBTaskList_descriptor_;
  metadata.reflection = PBTaskList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBTaskList

// optional uint32 MaxCompleteTaskID = 1;
void PBTaskList::clear_maxcompletetaskid() {
  maxcompletetaskid_ = 0u;
}
::google::protobuf::uint32 PBTaskList::maxcompletetaskid() const {
  // @@protoc_insertion_point(field_get:PBTaskList.MaxCompleteTaskID)
  return maxcompletetaskid_;
}
void PBTaskList::set_maxcompletetaskid(::google::protobuf::uint32 value) {
  
  maxcompletetaskid_ = value;
  // @@protoc_insertion_point(field_set:PBTaskList.MaxCompleteTaskID)
}

// repeated fixed32 CompleteTasks = 2;
int PBTaskList::completetasks_size() const {
  return completetasks_.size();
}
void PBTaskList::clear_completetasks() {
  completetasks_.Clear();
}
::google::protobuf::uint32 PBTaskList::completetasks(int index) const {
  // @@protoc_insertion_point(field_get:PBTaskList.CompleteTasks)
  return completetasks_.Get(index);
}
void PBTaskList::set_completetasks(int index, ::google::protobuf::uint32 value) {
  completetasks_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBTaskList.CompleteTasks)
}
void PBTaskList::add_completetasks(::google::protobuf::uint32 value) {
  completetasks_.Add(value);
  // @@protoc_insertion_point(field_add:PBTaskList.CompleteTasks)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTaskList::completetasks() const {
  // @@protoc_insertion_point(field_list:PBTaskList.CompleteTasks)
  return completetasks_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTaskList::mutable_completetasks() {
  // @@protoc_insertion_point(field_mutable_list:PBTaskList.CompleteTasks)
  return &completetasks_;
}

// repeated .PBTask TaskList = 3;
int PBTaskList::tasklist_size() const {
  return tasklist_.size();
}
void PBTaskList::clear_tasklist() {
  tasklist_.Clear();
}
const ::PBTask& PBTaskList::tasklist(int index) const {
  // @@protoc_insertion_point(field_get:PBTaskList.TaskList)
  return tasklist_.Get(index);
}
::PBTask* PBTaskList::mutable_tasklist(int index) {
  // @@protoc_insertion_point(field_mutable:PBTaskList.TaskList)
  return tasklist_.Mutable(index);
}
::PBTask* PBTaskList::add_tasklist() {
  // @@protoc_insertion_point(field_add:PBTaskList.TaskList)
  return tasklist_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBTask >*
PBTaskList::mutable_tasklist() {
  // @@protoc_insertion_point(field_mutable_list:PBTaskList.TaskList)
  return &tasklist_;
}
const ::google::protobuf::RepeatedPtrField< ::PBTask >&
PBTaskList::tasklist() const {
  // @@protoc_insertion_point(field_list:PBTaskList.TaskList)
  return tasklist_;
}

inline const PBTaskList* PBTaskList::internal_default_instance() {
  return &PBTaskList_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
