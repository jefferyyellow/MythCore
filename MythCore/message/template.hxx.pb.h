// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: template.hxx

#ifndef PROTOBUF_template_2ehxx__INCLUDED
#define PROTOBUF_template_2ehxx__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_template_2ehxx();
void protobuf_InitDefaults_template_2ehxx();
void protobuf_AssignDesc_template_2ehxx();
void protobuf_ShutdownFile_template_2ehxx();

class PBTplConfigSet;
class PBTplFuncNPC;
class PBTplItem;
class PBTplItemSet;
class PBTplLevelExpConfig;
class PBTplNPC;
class PBTplNPCSet;
class PBTplOgre;
class PBTplSkillSet;
class PBTplTemplate;
class PBTplVIPConfig;

// ===================================================================

class PBTplTemplate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBTplTemplate) */ {
 public:
  PBTplTemplate();
  virtual ~PBTplTemplate();

  PBTplTemplate(const PBTplTemplate& from);

  inline PBTplTemplate& operator=(const PBTplTemplate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplTemplate& default_instance();

  static const PBTplTemplate* internal_default_instance();

  void Swap(PBTplTemplate* other);

  // implements Message ----------------------------------------------

  inline PBTplTemplate* New() const { return New(NULL); }

  PBTplTemplate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplTemplate& from);
  void MergeFrom(const PBTplTemplate& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBTplTemplate* other);
  void UnsafeMergeFrom(const PBTplTemplate& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PBTplItemSet ItemSet = 1;
  bool has_itemset() const;
  void clear_itemset();
  static const int kItemSetFieldNumber = 1;
  const ::PBTplItemSet& itemset() const;
  ::PBTplItemSet* mutable_itemset();
  ::PBTplItemSet* release_itemset();
  void set_allocated_itemset(::PBTplItemSet* itemset);

  // optional .PBTplConfigSet ConfigSet = 2;
  bool has_configset() const;
  void clear_configset();
  static const int kConfigSetFieldNumber = 2;
  const ::PBTplConfigSet& configset() const;
  ::PBTplConfigSet* mutable_configset();
  ::PBTplConfigSet* release_configset();
  void set_allocated_configset(::PBTplConfigSet* configset);

  // optional .PBTplSkillSet SkillSet = 3;
  bool has_skillset() const;
  void clear_skillset();
  static const int kSkillSetFieldNumber = 3;
  const ::PBTplSkillSet& skillset() const;
  ::PBTplSkillSet* mutable_skillset();
  ::PBTplSkillSet* release_skillset();
  void set_allocated_skillset(::PBTplSkillSet* skillset);

  // optional .PBTplNPCSet NPCSet = 4;
  bool has_npcset() const;
  void clear_npcset();
  static const int kNPCSetFieldNumber = 4;
  const ::PBTplNPCSet& npcset() const;
  ::PBTplNPCSet* mutable_npcset();
  ::PBTplNPCSet* release_npcset();
  void set_allocated_npcset(::PBTplNPCSet* npcset);

  // @@protoc_insertion_point(class_scope:PBTplTemplate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBTplItemSet* itemset_;
  ::PBTplConfigSet* configset_;
  ::PBTplSkillSet* skillset_;
  ::PBTplNPCSet* npcset_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_template_2ehxx_impl();
  friend void  protobuf_AddDesc_template_2ehxx_impl();
  friend void protobuf_AssignDesc_template_2ehxx();
  friend void protobuf_ShutdownFile_template_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PBTplTemplate> PBTplTemplate_default_instance_;

// -------------------------------------------------------------------

class PBTplItemSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBTplItemSet) */ {
 public:
  PBTplItemSet();
  virtual ~PBTplItemSet();

  PBTplItemSet(const PBTplItemSet& from);

  inline PBTplItemSet& operator=(const PBTplItemSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplItemSet& default_instance();

  static const PBTplItemSet* internal_default_instance();

  void Swap(PBTplItemSet* other);

  // implements Message ----------------------------------------------

  inline PBTplItemSet* New() const { return New(NULL); }

  PBTplItemSet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplItemSet& from);
  void MergeFrom(const PBTplItemSet& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBTplItemSet* other);
  void UnsafeMergeFrom(const PBTplItemSet& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PBTplItemSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_template_2ehxx_impl();
  friend void  protobuf_AddDesc_template_2ehxx_impl();
  friend void protobuf_AssignDesc_template_2ehxx();
  friend void protobuf_ShutdownFile_template_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PBTplItemSet> PBTplItemSet_default_instance_;

// -------------------------------------------------------------------

class PBTplConfigSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBTplConfigSet) */ {
 public:
  PBTplConfigSet();
  virtual ~PBTplConfigSet();

  PBTplConfigSet(const PBTplConfigSet& from);

  inline PBTplConfigSet& operator=(const PBTplConfigSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplConfigSet& default_instance();

  static const PBTplConfigSet* internal_default_instance();

  void Swap(PBTplConfigSet* other);

  // implements Message ----------------------------------------------

  inline PBTplConfigSet* New() const { return New(NULL); }

  PBTplConfigSet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplConfigSet& from);
  void MergeFrom(const PBTplConfigSet& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBTplConfigSet* other);
  void UnsafeMergeFrom(const PBTplConfigSet& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBTplLevelExpConfig LevelExpConfig = 1;
  int levelexpconfig_size() const;
  void clear_levelexpconfig();
  static const int kLevelExpConfigFieldNumber = 1;
  const ::PBTplLevelExpConfig& levelexpconfig(int index) const;
  ::PBTplLevelExpConfig* mutable_levelexpconfig(int index);
  ::PBTplLevelExpConfig* add_levelexpconfig();
  ::google::protobuf::RepeatedPtrField< ::PBTplLevelExpConfig >*
      mutable_levelexpconfig();
  const ::google::protobuf::RepeatedPtrField< ::PBTplLevelExpConfig >&
      levelexpconfig() const;

  // repeated .PBTplVIPConfig VIPConfig = 2;
  int vipconfig_size() const;
  void clear_vipconfig();
  static const int kVIPConfigFieldNumber = 2;
  const ::PBTplVIPConfig& vipconfig(int index) const;
  ::PBTplVIPConfig* mutable_vipconfig(int index);
  ::PBTplVIPConfig* add_vipconfig();
  ::google::protobuf::RepeatedPtrField< ::PBTplVIPConfig >*
      mutable_vipconfig();
  const ::google::protobuf::RepeatedPtrField< ::PBTplVIPConfig >&
      vipconfig() const;

  // @@protoc_insertion_point(class_scope:PBTplConfigSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBTplLevelExpConfig > levelexpconfig_;
  ::google::protobuf::RepeatedPtrField< ::PBTplVIPConfig > vipconfig_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_template_2ehxx_impl();
  friend void  protobuf_AddDesc_template_2ehxx_impl();
  friend void protobuf_AssignDesc_template_2ehxx();
  friend void protobuf_ShutdownFile_template_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PBTplConfigSet> PBTplConfigSet_default_instance_;

// -------------------------------------------------------------------

class PBTplSkillSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBTplSkillSet) */ {
 public:
  PBTplSkillSet();
  virtual ~PBTplSkillSet();

  PBTplSkillSet(const PBTplSkillSet& from);

  inline PBTplSkillSet& operator=(const PBTplSkillSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplSkillSet& default_instance();

  static const PBTplSkillSet* internal_default_instance();

  void Swap(PBTplSkillSet* other);

  // implements Message ----------------------------------------------

  inline PBTplSkillSet* New() const { return New(NULL); }

  PBTplSkillSet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplSkillSet& from);
  void MergeFrom(const PBTplSkillSet& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBTplSkillSet* other);
  void UnsafeMergeFrom(const PBTplSkillSet& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PBTplSkillSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_template_2ehxx_impl();
  friend void  protobuf_AddDesc_template_2ehxx_impl();
  friend void protobuf_AssignDesc_template_2ehxx();
  friend void protobuf_ShutdownFile_template_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PBTplSkillSet> PBTplSkillSet_default_instance_;

// -------------------------------------------------------------------

class PBTplNPCSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBTplNPCSet) */ {
 public:
  PBTplNPCSet();
  virtual ~PBTplNPCSet();

  PBTplNPCSet(const PBTplNPCSet& from);

  inline PBTplNPCSet& operator=(const PBTplNPCSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplNPCSet& default_instance();

  static const PBTplNPCSet* internal_default_instance();

  void Swap(PBTplNPCSet* other);

  // implements Message ----------------------------------------------

  inline PBTplNPCSet* New() const { return New(NULL); }

  PBTplNPCSet* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplNPCSet& from);
  void MergeFrom(const PBTplNPCSet& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBTplNPCSet* other);
  void UnsafeMergeFrom(const PBTplNPCSet& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBTplFuncNPC FuncNpc = 1;
  int funcnpc_size() const;
  void clear_funcnpc();
  static const int kFuncNpcFieldNumber = 1;
  const ::PBTplFuncNPC& funcnpc(int index) const;
  ::PBTplFuncNPC* mutable_funcnpc(int index);
  ::PBTplFuncNPC* add_funcnpc();
  ::google::protobuf::RepeatedPtrField< ::PBTplFuncNPC >*
      mutable_funcnpc();
  const ::google::protobuf::RepeatedPtrField< ::PBTplFuncNPC >&
      funcnpc() const;

  // repeated .PBTplOgre Ogre = 2;
  int ogre_size() const;
  void clear_ogre();
  static const int kOgreFieldNumber = 2;
  const ::PBTplOgre& ogre(int index) const;
  ::PBTplOgre* mutable_ogre(int index);
  ::PBTplOgre* add_ogre();
  ::google::protobuf::RepeatedPtrField< ::PBTplOgre >*
      mutable_ogre();
  const ::google::protobuf::RepeatedPtrField< ::PBTplOgre >&
      ogre() const;

  // @@protoc_insertion_point(class_scope:PBTplNPCSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PBTplFuncNPC > funcnpc_;
  ::google::protobuf::RepeatedPtrField< ::PBTplOgre > ogre_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_template_2ehxx_impl();
  friend void  protobuf_AddDesc_template_2ehxx_impl();
  friend void protobuf_AssignDesc_template_2ehxx();
  friend void protobuf_ShutdownFile_template_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PBTplNPCSet> PBTplNPCSet_default_instance_;

// -------------------------------------------------------------------

class PBTplItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBTplItem) */ {
 public:
  PBTplItem();
  virtual ~PBTplItem();

  PBTplItem(const PBTplItem& from);

  inline PBTplItem& operator=(const PBTplItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplItem& default_instance();

  static const PBTplItem* internal_default_instance();

  void Swap(PBTplItem* other);

  // implements Message ----------------------------------------------

  inline PBTplItem* New() const { return New(NULL); }

  PBTplItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplItem& from);
  void MergeFrom(const PBTplItem& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBTplItem* other);
  void UnsafeMergeFrom(const PBTplItem& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TempID = 1;
  void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  ::google::protobuf::uint32 tempid() const;
  void set_tempid(::google::protobuf::uint32 value);

  // optional string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string Describe = 3;
  void clear_describe();
  static const int kDescribeFieldNumber = 3;
  const ::std::string& describe() const;
  void set_describe(const ::std::string& value);
  void set_describe(const char* value);
  void set_describe(const char* value, size_t size);
  ::std::string* mutable_describe();
  ::std::string* release_describe();
  void set_allocated_describe(::std::string* describe);

  // optional uint32 ItemType = 4;
  void clear_itemtype();
  static const int kItemTypeFieldNumber = 4;
  ::google::protobuf::uint32 itemtype() const;
  void set_itemtype(::google::protobuf::uint32 value);

  // optional uint32 PileLimit = 5;
  void clear_pilelimit();
  static const int kPileLimitFieldNumber = 5;
  ::google::protobuf::uint32 pilelimit() const;
  void set_pilelimit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBTplItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr describe_;
  ::google::protobuf::uint32 tempid_;
  ::google::protobuf::uint32 itemtype_;
  ::google::protobuf::uint32 pilelimit_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_template_2ehxx_impl();
  friend void  protobuf_AddDesc_template_2ehxx_impl();
  friend void protobuf_AssignDesc_template_2ehxx();
  friend void protobuf_ShutdownFile_template_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PBTplItem> PBTplItem_default_instance_;

// -------------------------------------------------------------------

class PBTplLevelExpConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBTplLevelExpConfig) */ {
 public:
  PBTplLevelExpConfig();
  virtual ~PBTplLevelExpConfig();

  PBTplLevelExpConfig(const PBTplLevelExpConfig& from);

  inline PBTplLevelExpConfig& operator=(const PBTplLevelExpConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplLevelExpConfig& default_instance();

  static const PBTplLevelExpConfig* internal_default_instance();

  void Swap(PBTplLevelExpConfig* other);

  // implements Message ----------------------------------------------

  inline PBTplLevelExpConfig* New() const { return New(NULL); }

  PBTplLevelExpConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplLevelExpConfig& from);
  void MergeFrom(const PBTplLevelExpConfig& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBTplLevelExpConfig* other);
  void UnsafeMergeFrom(const PBTplLevelExpConfig& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TempID = 1;
  void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  ::google::protobuf::uint32 tempid() const;
  void set_tempid(::google::protobuf::uint32 value);

  // repeated uint32 LevelUpExp = 2;
  int levelupexp_size() const;
  void clear_levelupexp();
  static const int kLevelUpExpFieldNumber = 2;
  ::google::protobuf::uint32 levelupexp(int index) const;
  void set_levelupexp(int index, ::google::protobuf::uint32 value);
  void add_levelupexp(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      levelupexp() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_levelupexp();

  // @@protoc_insertion_point(class_scope:PBTplLevelExpConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > levelupexp_;
  mutable int _levelupexp_cached_byte_size_;
  ::google::protobuf::uint32 tempid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_template_2ehxx_impl();
  friend void  protobuf_AddDesc_template_2ehxx_impl();
  friend void protobuf_AssignDesc_template_2ehxx();
  friend void protobuf_ShutdownFile_template_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PBTplLevelExpConfig> PBTplLevelExpConfig_default_instance_;

// -------------------------------------------------------------------

class PBTplVIPConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBTplVIPConfig) */ {
 public:
  PBTplVIPConfig();
  virtual ~PBTplVIPConfig();

  PBTplVIPConfig(const PBTplVIPConfig& from);

  inline PBTplVIPConfig& operator=(const PBTplVIPConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplVIPConfig& default_instance();

  static const PBTplVIPConfig* internal_default_instance();

  void Swap(PBTplVIPConfig* other);

  // implements Message ----------------------------------------------

  inline PBTplVIPConfig* New() const { return New(NULL); }

  PBTplVIPConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplVIPConfig& from);
  void MergeFrom(const PBTplVIPConfig& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBTplVIPConfig* other);
  void UnsafeMergeFrom(const PBTplVIPConfig& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TempID = 1;
  void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  ::google::protobuf::uint32 tempid() const;
  void set_tempid(::google::protobuf::uint32 value);

  // repeated uint32 VIPExp = 2;
  int vipexp_size() const;
  void clear_vipexp();
  static const int kVIPExpFieldNumber = 2;
  ::google::protobuf::uint32 vipexp(int index) const;
  void set_vipexp(int index, ::google::protobuf::uint32 value);
  void add_vipexp(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      vipexp() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_vipexp();

  // @@protoc_insertion_point(class_scope:PBTplVIPConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > vipexp_;
  mutable int _vipexp_cached_byte_size_;
  ::google::protobuf::uint32 tempid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_template_2ehxx_impl();
  friend void  protobuf_AddDesc_template_2ehxx_impl();
  friend void protobuf_AssignDesc_template_2ehxx();
  friend void protobuf_ShutdownFile_template_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PBTplVIPConfig> PBTplVIPConfig_default_instance_;

// -------------------------------------------------------------------

class PBTplNPC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBTplNPC) */ {
 public:
  PBTplNPC();
  virtual ~PBTplNPC();

  PBTplNPC(const PBTplNPC& from);

  inline PBTplNPC& operator=(const PBTplNPC& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplNPC& default_instance();

  static const PBTplNPC* internal_default_instance();

  void Swap(PBTplNPC* other);

  // implements Message ----------------------------------------------

  inline PBTplNPC* New() const { return New(NULL); }

  PBTplNPC* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplNPC& from);
  void MergeFrom(const PBTplNPC& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBTplNPC* other);
  void UnsafeMergeFrom(const PBTplNPC& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 TempID = 1;
  void clear_tempid();
  static const int kTempIDFieldNumber = 1;
  ::google::protobuf::uint32 tempid() const;
  void set_tempid(::google::protobuf::uint32 value);

  // optional string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:PBTplNPC)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 tempid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_template_2ehxx_impl();
  friend void  protobuf_AddDesc_template_2ehxx_impl();
  friend void protobuf_AssignDesc_template_2ehxx();
  friend void protobuf_ShutdownFile_template_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PBTplNPC> PBTplNPC_default_instance_;

// -------------------------------------------------------------------

class PBTplFuncNPC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBTplFuncNPC) */ {
 public:
  PBTplFuncNPC();
  virtual ~PBTplFuncNPC();

  PBTplFuncNPC(const PBTplFuncNPC& from);

  inline PBTplFuncNPC& operator=(const PBTplFuncNPC& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplFuncNPC& default_instance();

  static const PBTplFuncNPC* internal_default_instance();

  void Swap(PBTplFuncNPC* other);

  // implements Message ----------------------------------------------

  inline PBTplFuncNPC* New() const { return New(NULL); }

  PBTplFuncNPC* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplFuncNPC& from);
  void MergeFrom(const PBTplFuncNPC& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBTplFuncNPC* other);
  void UnsafeMergeFrom(const PBTplFuncNPC& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PBTplNPC BaseInfo = 1;
  bool has_baseinfo() const;
  void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  const ::PBTplNPC& baseinfo() const;
  ::PBTplNPC* mutable_baseinfo();
  ::PBTplNPC* release_baseinfo();
  void set_allocated_baseinfo(::PBTplNPC* baseinfo);

  // @@protoc_insertion_point(class_scope:PBTplFuncNPC)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBTplNPC* baseinfo_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_template_2ehxx_impl();
  friend void  protobuf_AddDesc_template_2ehxx_impl();
  friend void protobuf_AssignDesc_template_2ehxx();
  friend void protobuf_ShutdownFile_template_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PBTplFuncNPC> PBTplFuncNPC_default_instance_;

// -------------------------------------------------------------------

class PBTplOgre : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBTplOgre) */ {
 public:
  PBTplOgre();
  virtual ~PBTplOgre();

  PBTplOgre(const PBTplOgre& from);

  inline PBTplOgre& operator=(const PBTplOgre& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBTplOgre& default_instance();

  static const PBTplOgre* internal_default_instance();

  void Swap(PBTplOgre* other);

  // implements Message ----------------------------------------------

  inline PBTplOgre* New() const { return New(NULL); }

  PBTplOgre* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBTplOgre& from);
  void MergeFrom(const PBTplOgre& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBTplOgre* other);
  void UnsafeMergeFrom(const PBTplOgre& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PBTplNPC BaseInfo = 1;
  bool has_baseinfo() const;
  void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  const ::PBTplNPC& baseinfo() const;
  ::PBTplNPC* mutable_baseinfo();
  ::PBTplNPC* release_baseinfo();
  void set_allocated_baseinfo(::PBTplNPC* baseinfo);

  // @@protoc_insertion_point(class_scope:PBTplOgre)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PBTplNPC* baseinfo_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_template_2ehxx_impl();
  friend void  protobuf_AddDesc_template_2ehxx_impl();
  friend void protobuf_AssignDesc_template_2ehxx();
  friend void protobuf_ShutdownFile_template_2ehxx();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PBTplOgre> PBTplOgre_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PBTplTemplate

// optional .PBTplItemSet ItemSet = 1;
inline bool PBTplTemplate::has_itemset() const {
  return this != internal_default_instance() && itemset_ != NULL;
}
inline void PBTplTemplate::clear_itemset() {
  if (GetArenaNoVirtual() == NULL && itemset_ != NULL) delete itemset_;
  itemset_ = NULL;
}
inline const ::PBTplItemSet& PBTplTemplate::itemset() const {
  // @@protoc_insertion_point(field_get:PBTplTemplate.ItemSet)
  return itemset_ != NULL ? *itemset_
                         : *::PBTplItemSet::internal_default_instance();
}
inline ::PBTplItemSet* PBTplTemplate::mutable_itemset() {
  
  if (itemset_ == NULL) {
    itemset_ = new ::PBTplItemSet;
  }
  // @@protoc_insertion_point(field_mutable:PBTplTemplate.ItemSet)
  return itemset_;
}
inline ::PBTplItemSet* PBTplTemplate::release_itemset() {
  // @@protoc_insertion_point(field_release:PBTplTemplate.ItemSet)
  
  ::PBTplItemSet* temp = itemset_;
  itemset_ = NULL;
  return temp;
}
inline void PBTplTemplate::set_allocated_itemset(::PBTplItemSet* itemset) {
  delete itemset_;
  itemset_ = itemset;
  if (itemset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBTplTemplate.ItemSet)
}

// optional .PBTplConfigSet ConfigSet = 2;
inline bool PBTplTemplate::has_configset() const {
  return this != internal_default_instance() && configset_ != NULL;
}
inline void PBTplTemplate::clear_configset() {
  if (GetArenaNoVirtual() == NULL && configset_ != NULL) delete configset_;
  configset_ = NULL;
}
inline const ::PBTplConfigSet& PBTplTemplate::configset() const {
  // @@protoc_insertion_point(field_get:PBTplTemplate.ConfigSet)
  return configset_ != NULL ? *configset_
                         : *::PBTplConfigSet::internal_default_instance();
}
inline ::PBTplConfigSet* PBTplTemplate::mutable_configset() {
  
  if (configset_ == NULL) {
    configset_ = new ::PBTplConfigSet;
  }
  // @@protoc_insertion_point(field_mutable:PBTplTemplate.ConfigSet)
  return configset_;
}
inline ::PBTplConfigSet* PBTplTemplate::release_configset() {
  // @@protoc_insertion_point(field_release:PBTplTemplate.ConfigSet)
  
  ::PBTplConfigSet* temp = configset_;
  configset_ = NULL;
  return temp;
}
inline void PBTplTemplate::set_allocated_configset(::PBTplConfigSet* configset) {
  delete configset_;
  configset_ = configset;
  if (configset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBTplTemplate.ConfigSet)
}

// optional .PBTplSkillSet SkillSet = 3;
inline bool PBTplTemplate::has_skillset() const {
  return this != internal_default_instance() && skillset_ != NULL;
}
inline void PBTplTemplate::clear_skillset() {
  if (GetArenaNoVirtual() == NULL && skillset_ != NULL) delete skillset_;
  skillset_ = NULL;
}
inline const ::PBTplSkillSet& PBTplTemplate::skillset() const {
  // @@protoc_insertion_point(field_get:PBTplTemplate.SkillSet)
  return skillset_ != NULL ? *skillset_
                         : *::PBTplSkillSet::internal_default_instance();
}
inline ::PBTplSkillSet* PBTplTemplate::mutable_skillset() {
  
  if (skillset_ == NULL) {
    skillset_ = new ::PBTplSkillSet;
  }
  // @@protoc_insertion_point(field_mutable:PBTplTemplate.SkillSet)
  return skillset_;
}
inline ::PBTplSkillSet* PBTplTemplate::release_skillset() {
  // @@protoc_insertion_point(field_release:PBTplTemplate.SkillSet)
  
  ::PBTplSkillSet* temp = skillset_;
  skillset_ = NULL;
  return temp;
}
inline void PBTplTemplate::set_allocated_skillset(::PBTplSkillSet* skillset) {
  delete skillset_;
  skillset_ = skillset;
  if (skillset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBTplTemplate.SkillSet)
}

// optional .PBTplNPCSet NPCSet = 4;
inline bool PBTplTemplate::has_npcset() const {
  return this != internal_default_instance() && npcset_ != NULL;
}
inline void PBTplTemplate::clear_npcset() {
  if (GetArenaNoVirtual() == NULL && npcset_ != NULL) delete npcset_;
  npcset_ = NULL;
}
inline const ::PBTplNPCSet& PBTplTemplate::npcset() const {
  // @@protoc_insertion_point(field_get:PBTplTemplate.NPCSet)
  return npcset_ != NULL ? *npcset_
                         : *::PBTplNPCSet::internal_default_instance();
}
inline ::PBTplNPCSet* PBTplTemplate::mutable_npcset() {
  
  if (npcset_ == NULL) {
    npcset_ = new ::PBTplNPCSet;
  }
  // @@protoc_insertion_point(field_mutable:PBTplTemplate.NPCSet)
  return npcset_;
}
inline ::PBTplNPCSet* PBTplTemplate::release_npcset() {
  // @@protoc_insertion_point(field_release:PBTplTemplate.NPCSet)
  
  ::PBTplNPCSet* temp = npcset_;
  npcset_ = NULL;
  return temp;
}
inline void PBTplTemplate::set_allocated_npcset(::PBTplNPCSet* npcset) {
  delete npcset_;
  npcset_ = npcset;
  if (npcset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBTplTemplate.NPCSet)
}

inline const PBTplTemplate* PBTplTemplate::internal_default_instance() {
  return &PBTplTemplate_default_instance_.get();
}
// -------------------------------------------------------------------

// PBTplItemSet

inline const PBTplItemSet* PBTplItemSet::internal_default_instance() {
  return &PBTplItemSet_default_instance_.get();
}
// -------------------------------------------------------------------

// PBTplConfigSet

// repeated .PBTplLevelExpConfig LevelExpConfig = 1;
inline int PBTplConfigSet::levelexpconfig_size() const {
  return levelexpconfig_.size();
}
inline void PBTplConfigSet::clear_levelexpconfig() {
  levelexpconfig_.Clear();
}
inline const ::PBTplLevelExpConfig& PBTplConfigSet::levelexpconfig(int index) const {
  // @@protoc_insertion_point(field_get:PBTplConfigSet.LevelExpConfig)
  return levelexpconfig_.Get(index);
}
inline ::PBTplLevelExpConfig* PBTplConfigSet::mutable_levelexpconfig(int index) {
  // @@protoc_insertion_point(field_mutable:PBTplConfigSet.LevelExpConfig)
  return levelexpconfig_.Mutable(index);
}
inline ::PBTplLevelExpConfig* PBTplConfigSet::add_levelexpconfig() {
  // @@protoc_insertion_point(field_add:PBTplConfigSet.LevelExpConfig)
  return levelexpconfig_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBTplLevelExpConfig >*
PBTplConfigSet::mutable_levelexpconfig() {
  // @@protoc_insertion_point(field_mutable_list:PBTplConfigSet.LevelExpConfig)
  return &levelexpconfig_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTplLevelExpConfig >&
PBTplConfigSet::levelexpconfig() const {
  // @@protoc_insertion_point(field_list:PBTplConfigSet.LevelExpConfig)
  return levelexpconfig_;
}

// repeated .PBTplVIPConfig VIPConfig = 2;
inline int PBTplConfigSet::vipconfig_size() const {
  return vipconfig_.size();
}
inline void PBTplConfigSet::clear_vipconfig() {
  vipconfig_.Clear();
}
inline const ::PBTplVIPConfig& PBTplConfigSet::vipconfig(int index) const {
  // @@protoc_insertion_point(field_get:PBTplConfigSet.VIPConfig)
  return vipconfig_.Get(index);
}
inline ::PBTplVIPConfig* PBTplConfigSet::mutable_vipconfig(int index) {
  // @@protoc_insertion_point(field_mutable:PBTplConfigSet.VIPConfig)
  return vipconfig_.Mutable(index);
}
inline ::PBTplVIPConfig* PBTplConfigSet::add_vipconfig() {
  // @@protoc_insertion_point(field_add:PBTplConfigSet.VIPConfig)
  return vipconfig_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBTplVIPConfig >*
PBTplConfigSet::mutable_vipconfig() {
  // @@protoc_insertion_point(field_mutable_list:PBTplConfigSet.VIPConfig)
  return &vipconfig_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTplVIPConfig >&
PBTplConfigSet::vipconfig() const {
  // @@protoc_insertion_point(field_list:PBTplConfigSet.VIPConfig)
  return vipconfig_;
}

inline const PBTplConfigSet* PBTplConfigSet::internal_default_instance() {
  return &PBTplConfigSet_default_instance_.get();
}
// -------------------------------------------------------------------

// PBTplSkillSet

inline const PBTplSkillSet* PBTplSkillSet::internal_default_instance() {
  return &PBTplSkillSet_default_instance_.get();
}
// -------------------------------------------------------------------

// PBTplNPCSet

// repeated .PBTplFuncNPC FuncNpc = 1;
inline int PBTplNPCSet::funcnpc_size() const {
  return funcnpc_.size();
}
inline void PBTplNPCSet::clear_funcnpc() {
  funcnpc_.Clear();
}
inline const ::PBTplFuncNPC& PBTplNPCSet::funcnpc(int index) const {
  // @@protoc_insertion_point(field_get:PBTplNPCSet.FuncNpc)
  return funcnpc_.Get(index);
}
inline ::PBTplFuncNPC* PBTplNPCSet::mutable_funcnpc(int index) {
  // @@protoc_insertion_point(field_mutable:PBTplNPCSet.FuncNpc)
  return funcnpc_.Mutable(index);
}
inline ::PBTplFuncNPC* PBTplNPCSet::add_funcnpc() {
  // @@protoc_insertion_point(field_add:PBTplNPCSet.FuncNpc)
  return funcnpc_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBTplFuncNPC >*
PBTplNPCSet::mutable_funcnpc() {
  // @@protoc_insertion_point(field_mutable_list:PBTplNPCSet.FuncNpc)
  return &funcnpc_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTplFuncNPC >&
PBTplNPCSet::funcnpc() const {
  // @@protoc_insertion_point(field_list:PBTplNPCSet.FuncNpc)
  return funcnpc_;
}

// repeated .PBTplOgre Ogre = 2;
inline int PBTplNPCSet::ogre_size() const {
  return ogre_.size();
}
inline void PBTplNPCSet::clear_ogre() {
  ogre_.Clear();
}
inline const ::PBTplOgre& PBTplNPCSet::ogre(int index) const {
  // @@protoc_insertion_point(field_get:PBTplNPCSet.Ogre)
  return ogre_.Get(index);
}
inline ::PBTplOgre* PBTplNPCSet::mutable_ogre(int index) {
  // @@protoc_insertion_point(field_mutable:PBTplNPCSet.Ogre)
  return ogre_.Mutable(index);
}
inline ::PBTplOgre* PBTplNPCSet::add_ogre() {
  // @@protoc_insertion_point(field_add:PBTplNPCSet.Ogre)
  return ogre_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBTplOgre >*
PBTplNPCSet::mutable_ogre() {
  // @@protoc_insertion_point(field_mutable_list:PBTplNPCSet.Ogre)
  return &ogre_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBTplOgre >&
PBTplNPCSet::ogre() const {
  // @@protoc_insertion_point(field_list:PBTplNPCSet.Ogre)
  return ogre_;
}

inline const PBTplNPCSet* PBTplNPCSet::internal_default_instance() {
  return &PBTplNPCSet_default_instance_.get();
}
// -------------------------------------------------------------------

// PBTplItem

// optional uint32 TempID = 1;
inline void PBTplItem::clear_tempid() {
  tempid_ = 0u;
}
inline ::google::protobuf::uint32 PBTplItem::tempid() const {
  // @@protoc_insertion_point(field_get:PBTplItem.TempID)
  return tempid_;
}
inline void PBTplItem::set_tempid(::google::protobuf::uint32 value) {
  
  tempid_ = value;
  // @@protoc_insertion_point(field_set:PBTplItem.TempID)
}

// optional string Name = 2;
inline void PBTplItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBTplItem::name() const {
  // @@protoc_insertion_point(field_get:PBTplItem.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBTplItem::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBTplItem.Name)
}
inline void PBTplItem::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBTplItem.Name)
}
inline void PBTplItem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBTplItem.Name)
}
inline ::std::string* PBTplItem::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:PBTplItem.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBTplItem::release_name() {
  // @@protoc_insertion_point(field_release:PBTplItem.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBTplItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PBTplItem.Name)
}

// optional string Describe = 3;
inline void PBTplItem::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBTplItem::describe() const {
  // @@protoc_insertion_point(field_get:PBTplItem.Describe)
  return describe_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBTplItem::set_describe(const ::std::string& value) {
  
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBTplItem.Describe)
}
inline void PBTplItem::set_describe(const char* value) {
  
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBTplItem.Describe)
}
inline void PBTplItem::set_describe(const char* value, size_t size) {
  
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBTplItem.Describe)
}
inline ::std::string* PBTplItem::mutable_describe() {
  
  // @@protoc_insertion_point(field_mutable:PBTplItem.Describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBTplItem::release_describe() {
  // @@protoc_insertion_point(field_release:PBTplItem.Describe)
  
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBTplItem::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    
  } else {
    
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:PBTplItem.Describe)
}

// optional uint32 ItemType = 4;
inline void PBTplItem::clear_itemtype() {
  itemtype_ = 0u;
}
inline ::google::protobuf::uint32 PBTplItem::itemtype() const {
  // @@protoc_insertion_point(field_get:PBTplItem.ItemType)
  return itemtype_;
}
inline void PBTplItem::set_itemtype(::google::protobuf::uint32 value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:PBTplItem.ItemType)
}

// optional uint32 PileLimit = 5;
inline void PBTplItem::clear_pilelimit() {
  pilelimit_ = 0u;
}
inline ::google::protobuf::uint32 PBTplItem::pilelimit() const {
  // @@protoc_insertion_point(field_get:PBTplItem.PileLimit)
  return pilelimit_;
}
inline void PBTplItem::set_pilelimit(::google::protobuf::uint32 value) {
  
  pilelimit_ = value;
  // @@protoc_insertion_point(field_set:PBTplItem.PileLimit)
}

inline const PBTplItem* PBTplItem::internal_default_instance() {
  return &PBTplItem_default_instance_.get();
}
// -------------------------------------------------------------------

// PBTplLevelExpConfig

// optional uint32 TempID = 1;
inline void PBTplLevelExpConfig::clear_tempid() {
  tempid_ = 0u;
}
inline ::google::protobuf::uint32 PBTplLevelExpConfig::tempid() const {
  // @@protoc_insertion_point(field_get:PBTplLevelExpConfig.TempID)
  return tempid_;
}
inline void PBTplLevelExpConfig::set_tempid(::google::protobuf::uint32 value) {
  
  tempid_ = value;
  // @@protoc_insertion_point(field_set:PBTplLevelExpConfig.TempID)
}

// repeated uint32 LevelUpExp = 2;
inline int PBTplLevelExpConfig::levelupexp_size() const {
  return levelupexp_.size();
}
inline void PBTplLevelExpConfig::clear_levelupexp() {
  levelupexp_.Clear();
}
inline ::google::protobuf::uint32 PBTplLevelExpConfig::levelupexp(int index) const {
  // @@protoc_insertion_point(field_get:PBTplLevelExpConfig.LevelUpExp)
  return levelupexp_.Get(index);
}
inline void PBTplLevelExpConfig::set_levelupexp(int index, ::google::protobuf::uint32 value) {
  levelupexp_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBTplLevelExpConfig.LevelUpExp)
}
inline void PBTplLevelExpConfig::add_levelupexp(::google::protobuf::uint32 value) {
  levelupexp_.Add(value);
  // @@protoc_insertion_point(field_add:PBTplLevelExpConfig.LevelUpExp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTplLevelExpConfig::levelupexp() const {
  // @@protoc_insertion_point(field_list:PBTplLevelExpConfig.LevelUpExp)
  return levelupexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTplLevelExpConfig::mutable_levelupexp() {
  // @@protoc_insertion_point(field_mutable_list:PBTplLevelExpConfig.LevelUpExp)
  return &levelupexp_;
}

inline const PBTplLevelExpConfig* PBTplLevelExpConfig::internal_default_instance() {
  return &PBTplLevelExpConfig_default_instance_.get();
}
// -------------------------------------------------------------------

// PBTplVIPConfig

// optional uint32 TempID = 1;
inline void PBTplVIPConfig::clear_tempid() {
  tempid_ = 0u;
}
inline ::google::protobuf::uint32 PBTplVIPConfig::tempid() const {
  // @@protoc_insertion_point(field_get:PBTplVIPConfig.TempID)
  return tempid_;
}
inline void PBTplVIPConfig::set_tempid(::google::protobuf::uint32 value) {
  
  tempid_ = value;
  // @@protoc_insertion_point(field_set:PBTplVIPConfig.TempID)
}

// repeated uint32 VIPExp = 2;
inline int PBTplVIPConfig::vipexp_size() const {
  return vipexp_.size();
}
inline void PBTplVIPConfig::clear_vipexp() {
  vipexp_.Clear();
}
inline ::google::protobuf::uint32 PBTplVIPConfig::vipexp(int index) const {
  // @@protoc_insertion_point(field_get:PBTplVIPConfig.VIPExp)
  return vipexp_.Get(index);
}
inline void PBTplVIPConfig::set_vipexp(int index, ::google::protobuf::uint32 value) {
  vipexp_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBTplVIPConfig.VIPExp)
}
inline void PBTplVIPConfig::add_vipexp(::google::protobuf::uint32 value) {
  vipexp_.Add(value);
  // @@protoc_insertion_point(field_add:PBTplVIPConfig.VIPExp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBTplVIPConfig::vipexp() const {
  // @@protoc_insertion_point(field_list:PBTplVIPConfig.VIPExp)
  return vipexp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBTplVIPConfig::mutable_vipexp() {
  // @@protoc_insertion_point(field_mutable_list:PBTplVIPConfig.VIPExp)
  return &vipexp_;
}

inline const PBTplVIPConfig* PBTplVIPConfig::internal_default_instance() {
  return &PBTplVIPConfig_default_instance_.get();
}
// -------------------------------------------------------------------

// PBTplNPC

// optional uint32 TempID = 1;
inline void PBTplNPC::clear_tempid() {
  tempid_ = 0u;
}
inline ::google::protobuf::uint32 PBTplNPC::tempid() const {
  // @@protoc_insertion_point(field_get:PBTplNPC.TempID)
  return tempid_;
}
inline void PBTplNPC::set_tempid(::google::protobuf::uint32 value) {
  
  tempid_ = value;
  // @@protoc_insertion_point(field_set:PBTplNPC.TempID)
}

// optional string Name = 2;
inline void PBTplNPC::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBTplNPC::name() const {
  // @@protoc_insertion_point(field_get:PBTplNPC.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBTplNPC::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBTplNPC.Name)
}
inline void PBTplNPC::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBTplNPC.Name)
}
inline void PBTplNPC::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBTplNPC.Name)
}
inline ::std::string* PBTplNPC::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:PBTplNPC.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBTplNPC::release_name() {
  // @@protoc_insertion_point(field_release:PBTplNPC.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBTplNPC::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PBTplNPC.Name)
}

inline const PBTplNPC* PBTplNPC::internal_default_instance() {
  return &PBTplNPC_default_instance_.get();
}
// -------------------------------------------------------------------

// PBTplFuncNPC

// optional .PBTplNPC BaseInfo = 1;
inline bool PBTplFuncNPC::has_baseinfo() const {
  return this != internal_default_instance() && baseinfo_ != NULL;
}
inline void PBTplFuncNPC::clear_baseinfo() {
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) delete baseinfo_;
  baseinfo_ = NULL;
}
inline const ::PBTplNPC& PBTplFuncNPC::baseinfo() const {
  // @@protoc_insertion_point(field_get:PBTplFuncNPC.BaseInfo)
  return baseinfo_ != NULL ? *baseinfo_
                         : *::PBTplNPC::internal_default_instance();
}
inline ::PBTplNPC* PBTplFuncNPC::mutable_baseinfo() {
  
  if (baseinfo_ == NULL) {
    baseinfo_ = new ::PBTplNPC;
  }
  // @@protoc_insertion_point(field_mutable:PBTplFuncNPC.BaseInfo)
  return baseinfo_;
}
inline ::PBTplNPC* PBTplFuncNPC::release_baseinfo() {
  // @@protoc_insertion_point(field_release:PBTplFuncNPC.BaseInfo)
  
  ::PBTplNPC* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}
inline void PBTplFuncNPC::set_allocated_baseinfo(::PBTplNPC* baseinfo) {
  delete baseinfo_;
  baseinfo_ = baseinfo;
  if (baseinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBTplFuncNPC.BaseInfo)
}

inline const PBTplFuncNPC* PBTplFuncNPC::internal_default_instance() {
  return &PBTplFuncNPC_default_instance_.get();
}
// -------------------------------------------------------------------

// PBTplOgre

// optional .PBTplNPC BaseInfo = 1;
inline bool PBTplOgre::has_baseinfo() const {
  return this != internal_default_instance() && baseinfo_ != NULL;
}
inline void PBTplOgre::clear_baseinfo() {
  if (GetArenaNoVirtual() == NULL && baseinfo_ != NULL) delete baseinfo_;
  baseinfo_ = NULL;
}
inline const ::PBTplNPC& PBTplOgre::baseinfo() const {
  // @@protoc_insertion_point(field_get:PBTplOgre.BaseInfo)
  return baseinfo_ != NULL ? *baseinfo_
                         : *::PBTplNPC::internal_default_instance();
}
inline ::PBTplNPC* PBTplOgre::mutable_baseinfo() {
  
  if (baseinfo_ == NULL) {
    baseinfo_ = new ::PBTplNPC;
  }
  // @@protoc_insertion_point(field_mutable:PBTplOgre.BaseInfo)
  return baseinfo_;
}
inline ::PBTplNPC* PBTplOgre::release_baseinfo() {
  // @@protoc_insertion_point(field_release:PBTplOgre.BaseInfo)
  
  ::PBTplNPC* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}
inline void PBTplOgre::set_allocated_baseinfo(::PBTplNPC* baseinfo) {
  delete baseinfo_;
  baseinfo_ = baseinfo;
  if (baseinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBTplOgre.BaseInfo)
}

inline const PBTplOgre* PBTplOgre::internal_default_instance() {
  return &PBTplOgre_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_template_2ehxx__INCLUDED
