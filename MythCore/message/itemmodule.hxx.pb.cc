// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: itemmodule.hxx

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "itemmodule.hxx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CCurrencyUpdateNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CCurrencyUpdateNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CInsertItemNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CInsertItemNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CInsertItemObjNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CInsertItemObjNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CRemoveItemNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CRemoveItemNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CUseItemRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CUseItemRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CUseItemResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CUseItemResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSellItemRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSellItemRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CSellItemResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSellItemResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPurchaseItemRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPurchaseItemRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPurchaseItemResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPurchaseItemResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CEquipItemRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CEquipItemRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CEquipItemResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CEquipItemResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CUnEquipItemRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CUnEquipItemRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CUnEquipItemResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CUnEquipItemResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CEquipChangeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CEquipChangeNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPickItemRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPickItemRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPickItemResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPickItemResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ITEM_MODULE_MSG_ID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_itemmodule_2ehxx() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_itemmodule_2ehxx() {
  protobuf_AddDesc_itemmodule_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "itemmodule.hxx");
  GOOGLE_CHECK(file != NULL);
  CCurrencyUpdateNotify_descriptor_ = file->message_type(0);
  static const int CCurrencyUpdateNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCurrencyUpdateNotify, currencytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCurrencyUpdateNotify, currencynum_),
  };
  CCurrencyUpdateNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CCurrencyUpdateNotify_descriptor_,
      CCurrencyUpdateNotify::internal_default_instance(),
      CCurrencyUpdateNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CCurrencyUpdateNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CCurrencyUpdateNotify, _internal_metadata_));
  CInsertItemNotify_descriptor_ = file->message_type(1);
  static const int CInsertItemNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInsertItemNotify, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInsertItemNotify, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInsertItemNotify, number_),
  };
  CInsertItemNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CInsertItemNotify_descriptor_,
      CInsertItemNotify::internal_default_instance(),
      CInsertItemNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CInsertItemNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInsertItemNotify, _internal_metadata_));
  CInsertItemObjNotify_descriptor_ = file->message_type(2);
  static const int CInsertItemObjNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInsertItemObjNotify, itemobject_),
  };
  CInsertItemObjNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CInsertItemObjNotify_descriptor_,
      CInsertItemObjNotify::internal_default_instance(),
      CInsertItemObjNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CInsertItemObjNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInsertItemObjNotify, _internal_metadata_));
  CRemoveItemNotify_descriptor_ = file->message_type(3);
  static const int CRemoveItemNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRemoveItemNotify, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRemoveItemNotify, number_),
  };
  CRemoveItemNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CRemoveItemNotify_descriptor_,
      CRemoveItemNotify::internal_default_instance(),
      CRemoveItemNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CRemoveItemNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRemoveItemNotify, _internal_metadata_));
  CUseItemRequest_descriptor_ = file->message_type(4);
  static const int CUseItemRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CUseItemRequest, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CUseItemRequest, number_),
  };
  CUseItemRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CUseItemRequest_descriptor_,
      CUseItemRequest::internal_default_instance(),
      CUseItemRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CUseItemRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CUseItemRequest, _internal_metadata_));
  CUseItemResponse_descriptor_ = file->message_type(5);
  static const int CUseItemResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CUseItemResponse, result_),
  };
  CUseItemResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CUseItemResponse_descriptor_,
      CUseItemResponse::internal_default_instance(),
      CUseItemResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CUseItemResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CUseItemResponse, _internal_metadata_));
  CSellItemRequest_descriptor_ = file->message_type(6);
  static const int CSellItemRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSellItemRequest, index_),
  };
  CSellItemRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CSellItemRequest_descriptor_,
      CSellItemRequest::internal_default_instance(),
      CSellItemRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CSellItemRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSellItemRequest, _internal_metadata_));
  CSellItemResponse_descriptor_ = file->message_type(7);
  static const int CSellItemResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSellItemResponse, result_),
  };
  CSellItemResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CSellItemResponse_descriptor_,
      CSellItemResponse::internal_default_instance(),
      CSellItemResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CSellItemResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSellItemResponse, _internal_metadata_));
  CPurchaseItemRequest_descriptor_ = file->message_type(8);
  static const int CPurchaseItemRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPurchaseItemRequest, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPurchaseItemRequest, num_),
  };
  CPurchaseItemRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPurchaseItemRequest_descriptor_,
      CPurchaseItemRequest::internal_default_instance(),
      CPurchaseItemRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPurchaseItemRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPurchaseItemRequest, _internal_metadata_));
  CPurchaseItemResponse_descriptor_ = file->message_type(9);
  static const int CPurchaseItemResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPurchaseItemResponse, result_),
  };
  CPurchaseItemResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPurchaseItemResponse_descriptor_,
      CPurchaseItemResponse::internal_default_instance(),
      CPurchaseItemResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPurchaseItemResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPurchaseItemResponse, _internal_metadata_));
  CEquipItemRequest_descriptor_ = file->message_type(10);
  static const int CEquipItemRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEquipItemRequest, itemindex_),
  };
  CEquipItemRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CEquipItemRequest_descriptor_,
      CEquipItemRequest::internal_default_instance(),
      CEquipItemRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CEquipItemRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEquipItemRequest, _internal_metadata_));
  CEquipItemResponse_descriptor_ = file->message_type(11);
  static const int CEquipItemResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEquipItemResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEquipItemResponse, itemindex_),
  };
  CEquipItemResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CEquipItemResponse_descriptor_,
      CEquipItemResponse::internal_default_instance(),
      CEquipItemResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CEquipItemResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEquipItemResponse, _internal_metadata_));
  CUnEquipItemRequest_descriptor_ = file->message_type(12);
  static const int CUnEquipItemRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CUnEquipItemRequest, equippart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CUnEquipItemRequest, itemindex_),
  };
  CUnEquipItemRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CUnEquipItemRequest_descriptor_,
      CUnEquipItemRequest::internal_default_instance(),
      CUnEquipItemRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CUnEquipItemRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CUnEquipItemRequest, _internal_metadata_));
  CUnEquipItemResponse_descriptor_ = file->message_type(13);
  static const int CUnEquipItemResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CUnEquipItemResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CUnEquipItemResponse, equippart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CUnEquipItemResponse, itemindex_),
  };
  CUnEquipItemResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CUnEquipItemResponse_descriptor_,
      CUnEquipItemResponse::internal_default_instance(),
      CUnEquipItemResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CUnEquipItemResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CUnEquipItemResponse, _internal_metadata_));
  CEquipChangeNotify_descriptor_ = file->message_type(14);
  static const int CEquipChangeNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEquipChangeNotify, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEquipChangeNotify, equippart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEquipChangeNotify, equipitemid_),
  };
  CEquipChangeNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CEquipChangeNotify_descriptor_,
      CEquipChangeNotify::internal_default_instance(),
      CEquipChangeNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CEquipChangeNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CEquipChangeNotify, _internal_metadata_));
  CPickItemRequest_descriptor_ = file->message_type(15);
  static const int CPickItemRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPickItemRequest, entityid_),
  };
  CPickItemRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPickItemRequest_descriptor_,
      CPickItemRequest::internal_default_instance(),
      CPickItemRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPickItemRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPickItemRequest, _internal_metadata_));
  CPickItemResponse_descriptor_ = file->message_type(16);
  static const int CPickItemResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPickItemResponse, result_),
  };
  CPickItemResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPickItemResponse_descriptor_,
      CPickItemResponse::internal_default_instance(),
      CPickItemResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPickItemResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPickItemResponse, _internal_metadata_));
  ITEM_MODULE_MSG_ID_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_itemmodule_2ehxx);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CCurrencyUpdateNotify_descriptor_, CCurrencyUpdateNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CInsertItemNotify_descriptor_, CInsertItemNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CInsertItemObjNotify_descriptor_, CInsertItemObjNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CRemoveItemNotify_descriptor_, CRemoveItemNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CUseItemRequest_descriptor_, CUseItemRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CUseItemResponse_descriptor_, CUseItemResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CSellItemRequest_descriptor_, CSellItemRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CSellItemResponse_descriptor_, CSellItemResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPurchaseItemRequest_descriptor_, CPurchaseItemRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPurchaseItemResponse_descriptor_, CPurchaseItemResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CEquipItemRequest_descriptor_, CEquipItemRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CEquipItemResponse_descriptor_, CEquipItemResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CUnEquipItemRequest_descriptor_, CUnEquipItemRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CUnEquipItemResponse_descriptor_, CUnEquipItemResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CEquipChangeNotify_descriptor_, CEquipChangeNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPickItemRequest_descriptor_, CPickItemRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPickItemResponse_descriptor_, CPickItemResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_itemmodule_2ehxx() {
  CCurrencyUpdateNotify_default_instance_.Shutdown();
  delete CCurrencyUpdateNotify_reflection_;
  CInsertItemNotify_default_instance_.Shutdown();
  delete CInsertItemNotify_reflection_;
  CInsertItemObjNotify_default_instance_.Shutdown();
  delete CInsertItemObjNotify_reflection_;
  CRemoveItemNotify_default_instance_.Shutdown();
  delete CRemoveItemNotify_reflection_;
  CUseItemRequest_default_instance_.Shutdown();
  delete CUseItemRequest_reflection_;
  CUseItemResponse_default_instance_.Shutdown();
  delete CUseItemResponse_reflection_;
  CSellItemRequest_default_instance_.Shutdown();
  delete CSellItemRequest_reflection_;
  CSellItemResponse_default_instance_.Shutdown();
  delete CSellItemResponse_reflection_;
  CPurchaseItemRequest_default_instance_.Shutdown();
  delete CPurchaseItemRequest_reflection_;
  CPurchaseItemResponse_default_instance_.Shutdown();
  delete CPurchaseItemResponse_reflection_;
  CEquipItemRequest_default_instance_.Shutdown();
  delete CEquipItemRequest_reflection_;
  CEquipItemResponse_default_instance_.Shutdown();
  delete CEquipItemResponse_reflection_;
  CUnEquipItemRequest_default_instance_.Shutdown();
  delete CUnEquipItemRequest_reflection_;
  CUnEquipItemResponse_default_instance_.Shutdown();
  delete CUnEquipItemResponse_reflection_;
  CEquipChangeNotify_default_instance_.Shutdown();
  delete CEquipChangeNotify_reflection_;
  CPickItemRequest_default_instance_.Shutdown();
  delete CPickItemRequest_reflection_;
  CPickItemResponse_default_instance_.Shutdown();
  delete CPickItemResponse_reflection_;
}

void protobuf_InitDefaults_itemmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_common_2ehxx();
  CCurrencyUpdateNotify_default_instance_.DefaultConstruct();
  CInsertItemNotify_default_instance_.DefaultConstruct();
  CInsertItemObjNotify_default_instance_.DefaultConstruct();
  CRemoveItemNotify_default_instance_.DefaultConstruct();
  CUseItemRequest_default_instance_.DefaultConstruct();
  CUseItemResponse_default_instance_.DefaultConstruct();
  CSellItemRequest_default_instance_.DefaultConstruct();
  CSellItemResponse_default_instance_.DefaultConstruct();
  CPurchaseItemRequest_default_instance_.DefaultConstruct();
  CPurchaseItemResponse_default_instance_.DefaultConstruct();
  CEquipItemRequest_default_instance_.DefaultConstruct();
  CEquipItemResponse_default_instance_.DefaultConstruct();
  CUnEquipItemRequest_default_instance_.DefaultConstruct();
  CUnEquipItemResponse_default_instance_.DefaultConstruct();
  CEquipChangeNotify_default_instance_.DefaultConstruct();
  CPickItemRequest_default_instance_.DefaultConstruct();
  CPickItemResponse_default_instance_.DefaultConstruct();
  CCurrencyUpdateNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CInsertItemNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CInsertItemObjNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CRemoveItemNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CUseItemRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CUseItemResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CSellItemRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CSellItemResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CPurchaseItemRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CPurchaseItemResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CEquipItemRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CEquipItemResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CUnEquipItemRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CUnEquipItemResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CEquipChangeNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CPickItemRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CPickItemResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_itemmodule_2ehxx_once_);
void protobuf_InitDefaults_itemmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_itemmodule_2ehxx_once_,
                 &protobuf_InitDefaults_itemmodule_2ehxx_impl);
}
void protobuf_AddDesc_itemmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_itemmodule_2ehxx();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016itemmodule.hxx\032\ncommon.hxx\"B\n\025CCurrenc"
    "yUpdateNotify\022\024\n\014CurrencyType\030\001 \001(\r\022\023\n\013C"
    "urrencyNum\030\002 \001(\r\"B\n\021CInsertItemNotify\022\016\n"
    "\006ItemID\030\001 \001(\r\022\r\n\005Index\030\002 \003(\r\022\016\n\006Number\030\003"
    " \003(\r\"9\n\024CInsertItemObjNotify\022!\n\nItemObje"
    "ct\030\001 \001(\0132\r.PBItemObject\"2\n\021CRemoveItemNo"
    "tify\022\r\n\005Index\030\001 \001(\r\022\016\n\006Number\030\002 \001(\r\"0\n\017C"
    "UseItemRequest\022\r\n\005Index\030\001 \001(\r\022\016\n\006Number\030"
    "\002 \001(\r\"\"\n\020CUseItemResponse\022\016\n\006Result\030\001 \001("
    "\r\"!\n\020CSellItemRequest\022\r\n\005Index\030\001 \001(\r\"#\n\021"
    "CSellItemResponse\022\016\n\006Result\030\001 \001(\r\"2\n\024CPu"
    "rchaseItemRequest\022\r\n\005Index\030\001 \001(\r\022\013\n\003Num\030"
    "\002 \001(\r\"\'\n\025CPurchaseItemResponse\022\016\n\006Result"
    "\030\001 \001(\r\"&\n\021CEquipItemRequest\022\021\n\tItemIndex"
    "\030\001 \001(\r\"7\n\022CEquipItemResponse\022\016\n\006Result\030\001"
    " \001(\r\022\021\n\tItemIndex\030\002 \001(\r\";\n\023CUnEquipItemR"
    "equest\022\021\n\tEquipPart\030\001 \001(\r\022\021\n\tItemIndex\030\002"
    " \001(\r\"L\n\024CUnEquipItemResponse\022\016\n\006Result\030\001"
    " \001(\r\022\021\n\tEquipPart\030\002 \001(\r\022\021\n\tItemIndex\030\003 \001"
    "(\r\"N\n\022CEquipChangeNotify\022\020\n\010EntityID\030\001 \001"
    "(\r\022\021\n\tEquipPart\030\002 \001(\r\022\023\n\013EquipItemID\030\003 \001"
    "(\r\"$\n\020CPickItemRequest\022\020\n\010EntityID\030\001 \001(\r"
    "\"#\n\021CPickItemResponse\022\016\n\006Result\030\001 \001(\r*\337\004"
    "\n\022ITEM_MODULE_MSG_ID\022\030\n\024ID_ITEM_MODULE_E"
    "RROR\020\000\022\"\n\035ID_S2C_NOTIYF_CURRENCY_UPDATE\020"
    "\200\020\022\036\n\031ID_S2C_NOTIYF_INSERT_ITEM\020\202\020\022\"\n\035ID"
    "_S2C_NOTIYF_INSERT_ITEM_OBJ\020\203\020\022\036\n\031ID_S2C"
    "_NOTIYF_REMOVE_ITEM\020\204\020\022\034\n\027ID_C2S_REQUEST"
    "_USE_ITEM\020\205\020\022\035\n\030ID_S2C_RESPONSE_USE_ITEM"
    "\020\206\020\022\035\n\030ID_C2S_REQUEST_SELL_ITEM\020\207\020\022\036\n\031ID"
    "_S2C_RESPONSE_SELL_ITEM\020\210\020\022!\n\034ID_C2S_REQ"
    "UEST_PURCHASE_ITEM\020\211\020\022\"\n\035ID_S2C_RESPONSE"
    "_PURCHASE_ITEM\020\212\020\022\036\n\031ID_C2S_REQUEST_EQUI"
    "P_ITEM\020\213\020\022\037\n\032ID_S2C_RESPONSE_EQUIP_ITEM\020"
    "\214\020\022 \n\033ID_C2S_REQUEST_UNEQUIP_ITEM\020\215\020\022!\n\034"
    "ID_S2C_RESPONSE_UNEQUIP_ITEM\020\216\020\022\037\n\032ID_S2"
    "C_NOTIYF_EQUIP_CHANGE\020\217\020\022\035\n\030ID_C2S_REQUE"
    "ST_PICK_ITEM\020\220\020\022\036\n\031ID_S2C_RESPONSE_PICK_"
    "ITEM\020\221\020b\006proto3", 1535);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "itemmodule.hxx", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_common_2ehxx();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_itemmodule_2ehxx);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_itemmodule_2ehxx_once_);
void protobuf_AddDesc_itemmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_itemmodule_2ehxx_once_,
                 &protobuf_AddDesc_itemmodule_2ehxx_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_itemmodule_2ehxx {
  StaticDescriptorInitializer_itemmodule_2ehxx() {
    protobuf_AddDesc_itemmodule_2ehxx();
  }
} static_descriptor_initializer_itemmodule_2ehxx_;
const ::google::protobuf::EnumDescriptor* ITEM_MODULE_MSG_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITEM_MODULE_MSG_ID_descriptor_;
}
bool ITEM_MODULE_MSG_ID_IsValid(int value) {
  switch (value) {
    case 0:
    case 2048:
    case 2050:
    case 2051:
    case 2052:
    case 2053:
    case 2054:
    case 2055:
    case 2056:
    case 2057:
    case 2058:
    case 2059:
    case 2060:
    case 2061:
    case 2062:
    case 2063:
    case 2064:
    case 2065:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CCurrencyUpdateNotify::kCurrencyTypeFieldNumber;
const int CCurrencyUpdateNotify::kCurrencyNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CCurrencyUpdateNotify::CCurrencyUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CCurrencyUpdateNotify)
}

void CCurrencyUpdateNotify::InitAsDefaultInstance() {
}

CCurrencyUpdateNotify::CCurrencyUpdateNotify(const CCurrencyUpdateNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CCurrencyUpdateNotify)
}

void CCurrencyUpdateNotify::SharedCtor() {
  ::memset(&currencytype_, 0, reinterpret_cast<char*>(&currencynum_) -
    reinterpret_cast<char*>(&currencytype_) + sizeof(currencynum_));
  _cached_size_ = 0;
}

CCurrencyUpdateNotify::~CCurrencyUpdateNotify() {
  // @@protoc_insertion_point(destructor:CCurrencyUpdateNotify)
  SharedDtor();
}

void CCurrencyUpdateNotify::SharedDtor() {
}

void CCurrencyUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CCurrencyUpdateNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CCurrencyUpdateNotify_descriptor_;
}

const CCurrencyUpdateNotify& CCurrencyUpdateNotify::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CCurrencyUpdateNotify> CCurrencyUpdateNotify_default_instance_;

CCurrencyUpdateNotify* CCurrencyUpdateNotify::New(::google::protobuf::Arena* arena) const {
  CCurrencyUpdateNotify* n = new CCurrencyUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CCurrencyUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CCurrencyUpdateNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CCurrencyUpdateNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CCurrencyUpdateNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(currencytype_, currencynum_);

#undef ZR_HELPER_
#undef ZR_

}

bool CCurrencyUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CCurrencyUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CurrencyType = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currencytype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CurrencyNum;
        break;
      }

      // optional uint32 CurrencyNum = 2;
      case 2: {
        if (tag == 16) {
         parse_CurrencyNum:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currencynum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CCurrencyUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CCurrencyUpdateNotify)
  return false;
#undef DO_
}

void CCurrencyUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CCurrencyUpdateNotify)
  // optional uint32 CurrencyType = 1;
  if (this->currencytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->currencytype(), output);
  }

  // optional uint32 CurrencyNum = 2;
  if (this->currencynum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->currencynum(), output);
  }

  // @@protoc_insertion_point(serialize_end:CCurrencyUpdateNotify)
}

::google::protobuf::uint8* CCurrencyUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CCurrencyUpdateNotify)
  // optional uint32 CurrencyType = 1;
  if (this->currencytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->currencytype(), target);
  }

  // optional uint32 CurrencyNum = 2;
  if (this->currencynum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->currencynum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CCurrencyUpdateNotify)
  return target;
}

size_t CCurrencyUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCurrencyUpdateNotify)
  size_t total_size = 0;

  // optional uint32 CurrencyType = 1;
  if (this->currencytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->currencytype());
  }

  // optional uint32 CurrencyNum = 2;
  if (this->currencynum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->currencynum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CCurrencyUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CCurrencyUpdateNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CCurrencyUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CCurrencyUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CCurrencyUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CCurrencyUpdateNotify)
    UnsafeMergeFrom(*source);
  }
}

void CCurrencyUpdateNotify::MergeFrom(const CCurrencyUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CCurrencyUpdateNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CCurrencyUpdateNotify::UnsafeMergeFrom(const CCurrencyUpdateNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.currencytype() != 0) {
    set_currencytype(from.currencytype());
  }
  if (from.currencynum() != 0) {
    set_currencynum(from.currencynum());
  }
}

void CCurrencyUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CCurrencyUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CCurrencyUpdateNotify::CopyFrom(const CCurrencyUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCurrencyUpdateNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CCurrencyUpdateNotify::IsInitialized() const {

  return true;
}

void CCurrencyUpdateNotify::Swap(CCurrencyUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CCurrencyUpdateNotify::InternalSwap(CCurrencyUpdateNotify* other) {
  std::swap(currencytype_, other->currencytype_);
  std::swap(currencynum_, other->currencynum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CCurrencyUpdateNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CCurrencyUpdateNotify_descriptor_;
  metadata.reflection = CCurrencyUpdateNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CCurrencyUpdateNotify

// optional uint32 CurrencyType = 1;
void CCurrencyUpdateNotify::clear_currencytype() {
  currencytype_ = 0u;
}
::google::protobuf::uint32 CCurrencyUpdateNotify::currencytype() const {
  // @@protoc_insertion_point(field_get:CCurrencyUpdateNotify.CurrencyType)
  return currencytype_;
}
void CCurrencyUpdateNotify::set_currencytype(::google::protobuf::uint32 value) {
  
  currencytype_ = value;
  // @@protoc_insertion_point(field_set:CCurrencyUpdateNotify.CurrencyType)
}

// optional uint32 CurrencyNum = 2;
void CCurrencyUpdateNotify::clear_currencynum() {
  currencynum_ = 0u;
}
::google::protobuf::uint32 CCurrencyUpdateNotify::currencynum() const {
  // @@protoc_insertion_point(field_get:CCurrencyUpdateNotify.CurrencyNum)
  return currencynum_;
}
void CCurrencyUpdateNotify::set_currencynum(::google::protobuf::uint32 value) {
  
  currencynum_ = value;
  // @@protoc_insertion_point(field_set:CCurrencyUpdateNotify.CurrencyNum)
}

inline const CCurrencyUpdateNotify* CCurrencyUpdateNotify::internal_default_instance() {
  return &CCurrencyUpdateNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CInsertItemNotify::kItemIDFieldNumber;
const int CInsertItemNotify::kIndexFieldNumber;
const int CInsertItemNotify::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CInsertItemNotify::CInsertItemNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CInsertItemNotify)
}

void CInsertItemNotify::InitAsDefaultInstance() {
}

CInsertItemNotify::CInsertItemNotify(const CInsertItemNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CInsertItemNotify)
}

void CInsertItemNotify::SharedCtor() {
  itemid_ = 0u;
  _cached_size_ = 0;
}

CInsertItemNotify::~CInsertItemNotify() {
  // @@protoc_insertion_point(destructor:CInsertItemNotify)
  SharedDtor();
}

void CInsertItemNotify::SharedDtor() {
}

void CInsertItemNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CInsertItemNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CInsertItemNotify_descriptor_;
}

const CInsertItemNotify& CInsertItemNotify::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CInsertItemNotify> CInsertItemNotify_default_instance_;

CInsertItemNotify* CInsertItemNotify::New(::google::protobuf::Arena* arena) const {
  CInsertItemNotify* n = new CInsertItemNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CInsertItemNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CInsertItemNotify)
  itemid_ = 0u;
  index_.Clear();
  number_.Clear();
}

bool CInsertItemNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CInsertItemNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Index;
        break;
      }

      // repeated uint32 Index = 2;
      case 2: {
        if (tag == 18) {
         parse_Index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_index())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_index())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Number;
        break;
      }

      // repeated uint32 Number = 3;
      case 3: {
        if (tag == 26) {
         parse_Number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_number())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26, input, this->mutable_number())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CInsertItemNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CInsertItemNotify)
  return false;
#undef DO_
}

void CInsertItemNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CInsertItemNotify)
  // optional uint32 ItemID = 1;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // repeated uint32 Index = 2;
  if (this->index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_index_cached_byte_size_);
  }
  for (int i = 0; i < this->index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->index(i), output);
  }

  // repeated uint32 Number = 3;
  if (this->number_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_number_cached_byte_size_);
  }
  for (int i = 0; i < this->number_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->number(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CInsertItemNotify)
}

::google::protobuf::uint8* CInsertItemNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CInsertItemNotify)
  // optional uint32 ItemID = 1;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // repeated uint32 Index = 2;
  if (this->index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _index_cached_byte_size_, target);
  }
  for (int i = 0; i < this->index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->index(i), target);
  }

  // repeated uint32 Number = 3;
  if (this->number_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _number_cached_byte_size_, target);
  }
  for (int i = 0; i < this->number_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->number(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CInsertItemNotify)
  return target;
}

size_t CInsertItemNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CInsertItemNotify)
  size_t total_size = 0;

  // optional uint32 ItemID = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemid());
  }

  // repeated uint32 Index = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->index_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->index(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _index_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 Number = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->number_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->number(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _number_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CInsertItemNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CInsertItemNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CInsertItemNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CInsertItemNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CInsertItemNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CInsertItemNotify)
    UnsafeMergeFrom(*source);
  }
}

void CInsertItemNotify::MergeFrom(const CInsertItemNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CInsertItemNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CInsertItemNotify::UnsafeMergeFrom(const CInsertItemNotify& from) {
  GOOGLE_DCHECK(&from != this);
  index_.UnsafeMergeFrom(from.index_);
  number_.UnsafeMergeFrom(from.number_);
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
}

void CInsertItemNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CInsertItemNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CInsertItemNotify::CopyFrom(const CInsertItemNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CInsertItemNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CInsertItemNotify::IsInitialized() const {

  return true;
}

void CInsertItemNotify::Swap(CInsertItemNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CInsertItemNotify::InternalSwap(CInsertItemNotify* other) {
  std::swap(itemid_, other->itemid_);
  index_.UnsafeArenaSwap(&other->index_);
  number_.UnsafeArenaSwap(&other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CInsertItemNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CInsertItemNotify_descriptor_;
  metadata.reflection = CInsertItemNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CInsertItemNotify

// optional uint32 ItemID = 1;
void CInsertItemNotify::clear_itemid() {
  itemid_ = 0u;
}
::google::protobuf::uint32 CInsertItemNotify::itemid() const {
  // @@protoc_insertion_point(field_get:CInsertItemNotify.ItemID)
  return itemid_;
}
void CInsertItemNotify::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:CInsertItemNotify.ItemID)
}

// repeated uint32 Index = 2;
int CInsertItemNotify::index_size() const {
  return index_.size();
}
void CInsertItemNotify::clear_index() {
  index_.Clear();
}
::google::protobuf::uint32 CInsertItemNotify::index(int index) const {
  // @@protoc_insertion_point(field_get:CInsertItemNotify.Index)
  return index_.Get(index);
}
void CInsertItemNotify::set_index(int index, ::google::protobuf::uint32 value) {
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:CInsertItemNotify.Index)
}
void CInsertItemNotify::add_index(::google::protobuf::uint32 value) {
  index_.Add(value);
  // @@protoc_insertion_point(field_add:CInsertItemNotify.Index)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CInsertItemNotify::index() const {
  // @@protoc_insertion_point(field_list:CInsertItemNotify.Index)
  return index_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CInsertItemNotify::mutable_index() {
  // @@protoc_insertion_point(field_mutable_list:CInsertItemNotify.Index)
  return &index_;
}

// repeated uint32 Number = 3;
int CInsertItemNotify::number_size() const {
  return number_.size();
}
void CInsertItemNotify::clear_number() {
  number_.Clear();
}
::google::protobuf::uint32 CInsertItemNotify::number(int index) const {
  // @@protoc_insertion_point(field_get:CInsertItemNotify.Number)
  return number_.Get(index);
}
void CInsertItemNotify::set_number(int index, ::google::protobuf::uint32 value) {
  number_.Set(index, value);
  // @@protoc_insertion_point(field_set:CInsertItemNotify.Number)
}
void CInsertItemNotify::add_number(::google::protobuf::uint32 value) {
  number_.Add(value);
  // @@protoc_insertion_point(field_add:CInsertItemNotify.Number)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CInsertItemNotify::number() const {
  // @@protoc_insertion_point(field_list:CInsertItemNotify.Number)
  return number_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CInsertItemNotify::mutable_number() {
  // @@protoc_insertion_point(field_mutable_list:CInsertItemNotify.Number)
  return &number_;
}

inline const CInsertItemNotify* CInsertItemNotify::internal_default_instance() {
  return &CInsertItemNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CInsertItemObjNotify::kItemObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CInsertItemObjNotify::CInsertItemObjNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CInsertItemObjNotify)
}

void CInsertItemObjNotify::InitAsDefaultInstance() {
  itemobject_ = const_cast< ::PBItemObject*>(
      ::PBItemObject::internal_default_instance());
}

CInsertItemObjNotify::CInsertItemObjNotify(const CInsertItemObjNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CInsertItemObjNotify)
}

void CInsertItemObjNotify::SharedCtor() {
  itemobject_ = NULL;
  _cached_size_ = 0;
}

CInsertItemObjNotify::~CInsertItemObjNotify() {
  // @@protoc_insertion_point(destructor:CInsertItemObjNotify)
  SharedDtor();
}

void CInsertItemObjNotify::SharedDtor() {
  if (this != &CInsertItemObjNotify_default_instance_.get()) {
    delete itemobject_;
  }
}

void CInsertItemObjNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CInsertItemObjNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CInsertItemObjNotify_descriptor_;
}

const CInsertItemObjNotify& CInsertItemObjNotify::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CInsertItemObjNotify> CInsertItemObjNotify_default_instance_;

CInsertItemObjNotify* CInsertItemObjNotify::New(::google::protobuf::Arena* arena) const {
  CInsertItemObjNotify* n = new CInsertItemObjNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CInsertItemObjNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CInsertItemObjNotify)
  if (GetArenaNoVirtual() == NULL && itemobject_ != NULL) delete itemobject_;
  itemobject_ = NULL;
}

bool CInsertItemObjNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CInsertItemObjNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PBItemObject ItemObject = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemobject()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CInsertItemObjNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CInsertItemObjNotify)
  return false;
#undef DO_
}

void CInsertItemObjNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CInsertItemObjNotify)
  // optional .PBItemObject ItemObject = 1;
  if (this->has_itemobject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->itemobject_, output);
  }

  // @@protoc_insertion_point(serialize_end:CInsertItemObjNotify)
}

::google::protobuf::uint8* CInsertItemObjNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CInsertItemObjNotify)
  // optional .PBItemObject ItemObject = 1;
  if (this->has_itemobject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->itemobject_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CInsertItemObjNotify)
  return target;
}

size_t CInsertItemObjNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CInsertItemObjNotify)
  size_t total_size = 0;

  // optional .PBItemObject ItemObject = 1;
  if (this->has_itemobject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->itemobject_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CInsertItemObjNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CInsertItemObjNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CInsertItemObjNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CInsertItemObjNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CInsertItemObjNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CInsertItemObjNotify)
    UnsafeMergeFrom(*source);
  }
}

void CInsertItemObjNotify::MergeFrom(const CInsertItemObjNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CInsertItemObjNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CInsertItemObjNotify::UnsafeMergeFrom(const CInsertItemObjNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_itemobject()) {
    mutable_itemobject()->::PBItemObject::MergeFrom(from.itemobject());
  }
}

void CInsertItemObjNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CInsertItemObjNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CInsertItemObjNotify::CopyFrom(const CInsertItemObjNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CInsertItemObjNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CInsertItemObjNotify::IsInitialized() const {

  return true;
}

void CInsertItemObjNotify::Swap(CInsertItemObjNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CInsertItemObjNotify::InternalSwap(CInsertItemObjNotify* other) {
  std::swap(itemobject_, other->itemobject_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CInsertItemObjNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CInsertItemObjNotify_descriptor_;
  metadata.reflection = CInsertItemObjNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CInsertItemObjNotify

// optional .PBItemObject ItemObject = 1;
bool CInsertItemObjNotify::has_itemobject() const {
  return this != internal_default_instance() && itemobject_ != NULL;
}
void CInsertItemObjNotify::clear_itemobject() {
  if (GetArenaNoVirtual() == NULL && itemobject_ != NULL) delete itemobject_;
  itemobject_ = NULL;
}
const ::PBItemObject& CInsertItemObjNotify::itemobject() const {
  // @@protoc_insertion_point(field_get:CInsertItemObjNotify.ItemObject)
  return itemobject_ != NULL ? *itemobject_
                         : *::PBItemObject::internal_default_instance();
}
::PBItemObject* CInsertItemObjNotify::mutable_itemobject() {
  
  if (itemobject_ == NULL) {
    itemobject_ = new ::PBItemObject;
  }
  // @@protoc_insertion_point(field_mutable:CInsertItemObjNotify.ItemObject)
  return itemobject_;
}
::PBItemObject* CInsertItemObjNotify::release_itemobject() {
  // @@protoc_insertion_point(field_release:CInsertItemObjNotify.ItemObject)
  
  ::PBItemObject* temp = itemobject_;
  itemobject_ = NULL;
  return temp;
}
void CInsertItemObjNotify::set_allocated_itemobject(::PBItemObject* itemobject) {
  delete itemobject_;
  itemobject_ = itemobject;
  if (itemobject) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CInsertItemObjNotify.ItemObject)
}

inline const CInsertItemObjNotify* CInsertItemObjNotify::internal_default_instance() {
  return &CInsertItemObjNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CRemoveItemNotify::kIndexFieldNumber;
const int CRemoveItemNotify::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CRemoveItemNotify::CRemoveItemNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CRemoveItemNotify)
}

void CRemoveItemNotify::InitAsDefaultInstance() {
}

CRemoveItemNotify::CRemoveItemNotify(const CRemoveItemNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CRemoveItemNotify)
}

void CRemoveItemNotify::SharedCtor() {
  ::memset(&index_, 0, reinterpret_cast<char*>(&number_) -
    reinterpret_cast<char*>(&index_) + sizeof(number_));
  _cached_size_ = 0;
}

CRemoveItemNotify::~CRemoveItemNotify() {
  // @@protoc_insertion_point(destructor:CRemoveItemNotify)
  SharedDtor();
}

void CRemoveItemNotify::SharedDtor() {
}

void CRemoveItemNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CRemoveItemNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CRemoveItemNotify_descriptor_;
}

const CRemoveItemNotify& CRemoveItemNotify::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CRemoveItemNotify> CRemoveItemNotify_default_instance_;

CRemoveItemNotify* CRemoveItemNotify::New(::google::protobuf::Arena* arena) const {
  CRemoveItemNotify* n = new CRemoveItemNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CRemoveItemNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CRemoveItemNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CRemoveItemNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CRemoveItemNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(index_, number_);

#undef ZR_HELPER_
#undef ZR_

}

bool CRemoveItemNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CRemoveItemNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Index = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Number;
        break;
      }

      // optional uint32 Number = 2;
      case 2: {
        if (tag == 16) {
         parse_Number:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CRemoveItemNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CRemoveItemNotify)
  return false;
#undef DO_
}

void CRemoveItemNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CRemoveItemNotify)
  // optional uint32 Index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // optional uint32 Number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->number(), output);
  }

  // @@protoc_insertion_point(serialize_end:CRemoveItemNotify)
}

::google::protobuf::uint8* CRemoveItemNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CRemoveItemNotify)
  // optional uint32 Index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // optional uint32 Number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->number(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CRemoveItemNotify)
  return target;
}

size_t CRemoveItemNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRemoveItemNotify)
  size_t total_size = 0;

  // optional uint32 Index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // optional uint32 Number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CRemoveItemNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CRemoveItemNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CRemoveItemNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CRemoveItemNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CRemoveItemNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CRemoveItemNotify)
    UnsafeMergeFrom(*source);
  }
}

void CRemoveItemNotify::MergeFrom(const CRemoveItemNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CRemoveItemNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CRemoveItemNotify::UnsafeMergeFrom(const CRemoveItemNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void CRemoveItemNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CRemoveItemNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CRemoveItemNotify::CopyFrom(const CRemoveItemNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRemoveItemNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CRemoveItemNotify::IsInitialized() const {

  return true;
}

void CRemoveItemNotify::Swap(CRemoveItemNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CRemoveItemNotify::InternalSwap(CRemoveItemNotify* other) {
  std::swap(index_, other->index_);
  std::swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CRemoveItemNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CRemoveItemNotify_descriptor_;
  metadata.reflection = CRemoveItemNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CRemoveItemNotify

// optional uint32 Index = 1;
void CRemoveItemNotify::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 CRemoveItemNotify::index() const {
  // @@protoc_insertion_point(field_get:CRemoveItemNotify.Index)
  return index_;
}
void CRemoveItemNotify::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:CRemoveItemNotify.Index)
}

// optional uint32 Number = 2;
void CRemoveItemNotify::clear_number() {
  number_ = 0u;
}
::google::protobuf::uint32 CRemoveItemNotify::number() const {
  // @@protoc_insertion_point(field_get:CRemoveItemNotify.Number)
  return number_;
}
void CRemoveItemNotify::set_number(::google::protobuf::uint32 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:CRemoveItemNotify.Number)
}

inline const CRemoveItemNotify* CRemoveItemNotify::internal_default_instance() {
  return &CRemoveItemNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUseItemRequest::kIndexFieldNumber;
const int CUseItemRequest::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUseItemRequest::CUseItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUseItemRequest)
}

void CUseItemRequest::InitAsDefaultInstance() {
}

CUseItemRequest::CUseItemRequest(const CUseItemRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CUseItemRequest)
}

void CUseItemRequest::SharedCtor() {
  ::memset(&index_, 0, reinterpret_cast<char*>(&number_) -
    reinterpret_cast<char*>(&index_) + sizeof(number_));
  _cached_size_ = 0;
}

CUseItemRequest::~CUseItemRequest() {
  // @@protoc_insertion_point(destructor:CUseItemRequest)
  SharedDtor();
}

void CUseItemRequest::SharedDtor() {
}

void CUseItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CUseItemRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CUseItemRequest_descriptor_;
}

const CUseItemRequest& CUseItemRequest::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CUseItemRequest> CUseItemRequest_default_instance_;

CUseItemRequest* CUseItemRequest::New(::google::protobuf::Arena* arena) const {
  CUseItemRequest* n = new CUseItemRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CUseItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CUseItemRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CUseItemRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CUseItemRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(index_, number_);

#undef ZR_HELPER_
#undef ZR_

}

bool CUseItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUseItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Index = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Number;
        break;
      }

      // optional uint32 Number = 2;
      case 2: {
        if (tag == 16) {
         parse_Number:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUseItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUseItemRequest)
  return false;
#undef DO_
}

void CUseItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUseItemRequest)
  // optional uint32 Index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // optional uint32 Number = 2;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->number(), output);
  }

  // @@protoc_insertion_point(serialize_end:CUseItemRequest)
}

::google::protobuf::uint8* CUseItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUseItemRequest)
  // optional uint32 Index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // optional uint32 Number = 2;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->number(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CUseItemRequest)
  return target;
}

size_t CUseItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUseItemRequest)
  size_t total_size = 0;

  // optional uint32 Index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // optional uint32 Number = 2;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CUseItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUseItemRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CUseItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUseItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUseItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUseItemRequest)
    UnsafeMergeFrom(*source);
  }
}

void CUseItemRequest::MergeFrom(const CUseItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUseItemRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CUseItemRequest::UnsafeMergeFrom(const CUseItemRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void CUseItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUseItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUseItemRequest::CopyFrom(const CUseItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUseItemRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CUseItemRequest::IsInitialized() const {

  return true;
}

void CUseItemRequest::Swap(CUseItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUseItemRequest::InternalSwap(CUseItemRequest* other) {
  std::swap(index_, other->index_);
  std::swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CUseItemRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CUseItemRequest_descriptor_;
  metadata.reflection = CUseItemRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CUseItemRequest

// optional uint32 Index = 1;
void CUseItemRequest::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 CUseItemRequest::index() const {
  // @@protoc_insertion_point(field_get:CUseItemRequest.Index)
  return index_;
}
void CUseItemRequest::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:CUseItemRequest.Index)
}

// optional uint32 Number = 2;
void CUseItemRequest::clear_number() {
  number_ = 0u;
}
::google::protobuf::uint32 CUseItemRequest::number() const {
  // @@protoc_insertion_point(field_get:CUseItemRequest.Number)
  return number_;
}
void CUseItemRequest::set_number(::google::protobuf::uint32 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:CUseItemRequest.Number)
}

inline const CUseItemRequest* CUseItemRequest::internal_default_instance() {
  return &CUseItemRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUseItemResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUseItemResponse::CUseItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUseItemResponse)
}

void CUseItemResponse::InitAsDefaultInstance() {
}

CUseItemResponse::CUseItemResponse(const CUseItemResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CUseItemResponse)
}

void CUseItemResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

CUseItemResponse::~CUseItemResponse() {
  // @@protoc_insertion_point(destructor:CUseItemResponse)
  SharedDtor();
}

void CUseItemResponse::SharedDtor() {
}

void CUseItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CUseItemResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CUseItemResponse_descriptor_;
}

const CUseItemResponse& CUseItemResponse::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CUseItemResponse> CUseItemResponse_default_instance_;

CUseItemResponse* CUseItemResponse::New(::google::protobuf::Arena* arena) const {
  CUseItemResponse* n = new CUseItemResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CUseItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CUseItemResponse)
  result_ = 0u;
}

bool CUseItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUseItemResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUseItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUseItemResponse)
  return false;
#undef DO_
}

void CUseItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUseItemResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:CUseItemResponse)
}

::google::protobuf::uint8* CUseItemResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUseItemResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CUseItemResponse)
  return target;
}

size_t CUseItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUseItemResponse)
  size_t total_size = 0;

  // optional uint32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CUseItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUseItemResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CUseItemResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUseItemResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUseItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUseItemResponse)
    UnsafeMergeFrom(*source);
  }
}

void CUseItemResponse::MergeFrom(const CUseItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUseItemResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CUseItemResponse::UnsafeMergeFrom(const CUseItemResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CUseItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUseItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUseItemResponse::CopyFrom(const CUseItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUseItemResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CUseItemResponse::IsInitialized() const {

  return true;
}

void CUseItemResponse::Swap(CUseItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUseItemResponse::InternalSwap(CUseItemResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CUseItemResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CUseItemResponse_descriptor_;
  metadata.reflection = CUseItemResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CUseItemResponse

// optional uint32 Result = 1;
void CUseItemResponse::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 CUseItemResponse::result() const {
  // @@protoc_insertion_point(field_get:CUseItemResponse.Result)
  return result_;
}
void CUseItemResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CUseItemResponse.Result)
}

inline const CUseItemResponse* CUseItemResponse::internal_default_instance() {
  return &CUseItemResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSellItemRequest::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSellItemRequest::CSellItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSellItemRequest)
}

void CSellItemRequest::InitAsDefaultInstance() {
}

CSellItemRequest::CSellItemRequest(const CSellItemRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSellItemRequest)
}

void CSellItemRequest::SharedCtor() {
  index_ = 0u;
  _cached_size_ = 0;
}

CSellItemRequest::~CSellItemRequest() {
  // @@protoc_insertion_point(destructor:CSellItemRequest)
  SharedDtor();
}

void CSellItemRequest::SharedDtor() {
}

void CSellItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSellItemRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSellItemRequest_descriptor_;
}

const CSellItemRequest& CSellItemRequest::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CSellItemRequest> CSellItemRequest_default_instance_;

CSellItemRequest* CSellItemRequest::New(::google::protobuf::Arena* arena) const {
  CSellItemRequest* n = new CSellItemRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSellItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CSellItemRequest)
  index_ = 0u;
}

bool CSellItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSellItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Index = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSellItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSellItemRequest)
  return false;
#undef DO_
}

void CSellItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSellItemRequest)
  // optional uint32 Index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // @@protoc_insertion_point(serialize_end:CSellItemRequest)
}

::google::protobuf::uint8* CSellItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSellItemRequest)
  // optional uint32 Index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CSellItemRequest)
  return target;
}

size_t CSellItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSellItemRequest)
  size_t total_size = 0;

  // optional uint32 Index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSellItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSellItemRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CSellItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSellItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSellItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSellItemRequest)
    UnsafeMergeFrom(*source);
  }
}

void CSellItemRequest::MergeFrom(const CSellItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSellItemRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CSellItemRequest::UnsafeMergeFrom(const CSellItemRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void CSellItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSellItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSellItemRequest::CopyFrom(const CSellItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSellItemRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CSellItemRequest::IsInitialized() const {

  return true;
}

void CSellItemRequest::Swap(CSellItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSellItemRequest::InternalSwap(CSellItemRequest* other) {
  std::swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSellItemRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSellItemRequest_descriptor_;
  metadata.reflection = CSellItemRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CSellItemRequest

// optional uint32 Index = 1;
void CSellItemRequest::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 CSellItemRequest::index() const {
  // @@protoc_insertion_point(field_get:CSellItemRequest.Index)
  return index_;
}
void CSellItemRequest::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:CSellItemRequest.Index)
}

inline const CSellItemRequest* CSellItemRequest::internal_default_instance() {
  return &CSellItemRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSellItemResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSellItemResponse::CSellItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CSellItemResponse)
}

void CSellItemResponse::InitAsDefaultInstance() {
}

CSellItemResponse::CSellItemResponse(const CSellItemResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CSellItemResponse)
}

void CSellItemResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

CSellItemResponse::~CSellItemResponse() {
  // @@protoc_insertion_point(destructor:CSellItemResponse)
  SharedDtor();
}

void CSellItemResponse::SharedDtor() {
}

void CSellItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSellItemResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSellItemResponse_descriptor_;
}

const CSellItemResponse& CSellItemResponse::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CSellItemResponse> CSellItemResponse_default_instance_;

CSellItemResponse* CSellItemResponse::New(::google::protobuf::Arena* arena) const {
  CSellItemResponse* n = new CSellItemResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSellItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CSellItemResponse)
  result_ = 0u;
}

bool CSellItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CSellItemResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CSellItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CSellItemResponse)
  return false;
#undef DO_
}

void CSellItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CSellItemResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:CSellItemResponse)
}

::google::protobuf::uint8* CSellItemResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CSellItemResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CSellItemResponse)
  return target;
}

size_t CSellItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSellItemResponse)
  size_t total_size = 0;

  // optional uint32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSellItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CSellItemResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CSellItemResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CSellItemResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CSellItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CSellItemResponse)
    UnsafeMergeFrom(*source);
  }
}

void CSellItemResponse::MergeFrom(const CSellItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSellItemResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CSellItemResponse::UnsafeMergeFrom(const CSellItemResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CSellItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CSellItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSellItemResponse::CopyFrom(const CSellItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSellItemResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CSellItemResponse::IsInitialized() const {

  return true;
}

void CSellItemResponse::Swap(CSellItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSellItemResponse::InternalSwap(CSellItemResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSellItemResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSellItemResponse_descriptor_;
  metadata.reflection = CSellItemResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CSellItemResponse

// optional uint32 Result = 1;
void CSellItemResponse::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 CSellItemResponse::result() const {
  // @@protoc_insertion_point(field_get:CSellItemResponse.Result)
  return result_;
}
void CSellItemResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CSellItemResponse.Result)
}

inline const CSellItemResponse* CSellItemResponse::internal_default_instance() {
  return &CSellItemResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPurchaseItemRequest::kIndexFieldNumber;
const int CPurchaseItemRequest::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPurchaseItemRequest::CPurchaseItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPurchaseItemRequest)
}

void CPurchaseItemRequest::InitAsDefaultInstance() {
}

CPurchaseItemRequest::CPurchaseItemRequest(const CPurchaseItemRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CPurchaseItemRequest)
}

void CPurchaseItemRequest::SharedCtor() {
  ::memset(&index_, 0, reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&index_) + sizeof(num_));
  _cached_size_ = 0;
}

CPurchaseItemRequest::~CPurchaseItemRequest() {
  // @@protoc_insertion_point(destructor:CPurchaseItemRequest)
  SharedDtor();
}

void CPurchaseItemRequest::SharedDtor() {
}

void CPurchaseItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPurchaseItemRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPurchaseItemRequest_descriptor_;
}

const CPurchaseItemRequest& CPurchaseItemRequest::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CPurchaseItemRequest> CPurchaseItemRequest_default_instance_;

CPurchaseItemRequest* CPurchaseItemRequest::New(::google::protobuf::Arena* arena) const {
  CPurchaseItemRequest* n = new CPurchaseItemRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPurchaseItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CPurchaseItemRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CPurchaseItemRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CPurchaseItemRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(index_, num_);

#undef ZR_HELPER_
#undef ZR_

}

bool CPurchaseItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPurchaseItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Index = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Num;
        break;
      }

      // optional uint32 Num = 2;
      case 2: {
        if (tag == 16) {
         parse_Num:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPurchaseItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPurchaseItemRequest)
  return false;
#undef DO_
}

void CPurchaseItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPurchaseItemRequest)
  // optional uint32 Index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // optional uint32 Num = 2;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  // @@protoc_insertion_point(serialize_end:CPurchaseItemRequest)
}

::google::protobuf::uint8* CPurchaseItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPurchaseItemRequest)
  // optional uint32 Index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // optional uint32 Num = 2;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CPurchaseItemRequest)
  return target;
}

size_t CPurchaseItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPurchaseItemRequest)
  size_t total_size = 0;

  // optional uint32 Index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // optional uint32 Num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPurchaseItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPurchaseItemRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CPurchaseItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPurchaseItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPurchaseItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPurchaseItemRequest)
    UnsafeMergeFrom(*source);
  }
}

void CPurchaseItemRequest::MergeFrom(const CPurchaseItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPurchaseItemRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CPurchaseItemRequest::UnsafeMergeFrom(const CPurchaseItemRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void CPurchaseItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPurchaseItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPurchaseItemRequest::CopyFrom(const CPurchaseItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPurchaseItemRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CPurchaseItemRequest::IsInitialized() const {

  return true;
}

void CPurchaseItemRequest::Swap(CPurchaseItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPurchaseItemRequest::InternalSwap(CPurchaseItemRequest* other) {
  std::swap(index_, other->index_);
  std::swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPurchaseItemRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPurchaseItemRequest_descriptor_;
  metadata.reflection = CPurchaseItemRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPurchaseItemRequest

// optional uint32 Index = 1;
void CPurchaseItemRequest::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 CPurchaseItemRequest::index() const {
  // @@protoc_insertion_point(field_get:CPurchaseItemRequest.Index)
  return index_;
}
void CPurchaseItemRequest::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:CPurchaseItemRequest.Index)
}

// optional uint32 Num = 2;
void CPurchaseItemRequest::clear_num() {
  num_ = 0u;
}
::google::protobuf::uint32 CPurchaseItemRequest::num() const {
  // @@protoc_insertion_point(field_get:CPurchaseItemRequest.Num)
  return num_;
}
void CPurchaseItemRequest::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:CPurchaseItemRequest.Num)
}

inline const CPurchaseItemRequest* CPurchaseItemRequest::internal_default_instance() {
  return &CPurchaseItemRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPurchaseItemResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPurchaseItemResponse::CPurchaseItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPurchaseItemResponse)
}

void CPurchaseItemResponse::InitAsDefaultInstance() {
}

CPurchaseItemResponse::CPurchaseItemResponse(const CPurchaseItemResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CPurchaseItemResponse)
}

void CPurchaseItemResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

CPurchaseItemResponse::~CPurchaseItemResponse() {
  // @@protoc_insertion_point(destructor:CPurchaseItemResponse)
  SharedDtor();
}

void CPurchaseItemResponse::SharedDtor() {
}

void CPurchaseItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPurchaseItemResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPurchaseItemResponse_descriptor_;
}

const CPurchaseItemResponse& CPurchaseItemResponse::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CPurchaseItemResponse> CPurchaseItemResponse_default_instance_;

CPurchaseItemResponse* CPurchaseItemResponse::New(::google::protobuf::Arena* arena) const {
  CPurchaseItemResponse* n = new CPurchaseItemResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPurchaseItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CPurchaseItemResponse)
  result_ = 0u;
}

bool CPurchaseItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPurchaseItemResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPurchaseItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPurchaseItemResponse)
  return false;
#undef DO_
}

void CPurchaseItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPurchaseItemResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:CPurchaseItemResponse)
}

::google::protobuf::uint8* CPurchaseItemResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPurchaseItemResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CPurchaseItemResponse)
  return target;
}

size_t CPurchaseItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPurchaseItemResponse)
  size_t total_size = 0;

  // optional uint32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPurchaseItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPurchaseItemResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CPurchaseItemResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPurchaseItemResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPurchaseItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPurchaseItemResponse)
    UnsafeMergeFrom(*source);
  }
}

void CPurchaseItemResponse::MergeFrom(const CPurchaseItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPurchaseItemResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CPurchaseItemResponse::UnsafeMergeFrom(const CPurchaseItemResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CPurchaseItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPurchaseItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPurchaseItemResponse::CopyFrom(const CPurchaseItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPurchaseItemResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CPurchaseItemResponse::IsInitialized() const {

  return true;
}

void CPurchaseItemResponse::Swap(CPurchaseItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPurchaseItemResponse::InternalSwap(CPurchaseItemResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPurchaseItemResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPurchaseItemResponse_descriptor_;
  metadata.reflection = CPurchaseItemResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPurchaseItemResponse

// optional uint32 Result = 1;
void CPurchaseItemResponse::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 CPurchaseItemResponse::result() const {
  // @@protoc_insertion_point(field_get:CPurchaseItemResponse.Result)
  return result_;
}
void CPurchaseItemResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPurchaseItemResponse.Result)
}

inline const CPurchaseItemResponse* CPurchaseItemResponse::internal_default_instance() {
  return &CPurchaseItemResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEquipItemRequest::kItemIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEquipItemRequest::CEquipItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEquipItemRequest)
}

void CEquipItemRequest::InitAsDefaultInstance() {
}

CEquipItemRequest::CEquipItemRequest(const CEquipItemRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CEquipItemRequest)
}

void CEquipItemRequest::SharedCtor() {
  itemindex_ = 0u;
  _cached_size_ = 0;
}

CEquipItemRequest::~CEquipItemRequest() {
  // @@protoc_insertion_point(destructor:CEquipItemRequest)
  SharedDtor();
}

void CEquipItemRequest::SharedDtor() {
}

void CEquipItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CEquipItemRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CEquipItemRequest_descriptor_;
}

const CEquipItemRequest& CEquipItemRequest::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CEquipItemRequest> CEquipItemRequest_default_instance_;

CEquipItemRequest* CEquipItemRequest::New(::google::protobuf::Arena* arena) const {
  CEquipItemRequest* n = new CEquipItemRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CEquipItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CEquipItemRequest)
  itemindex_ = 0u;
}

bool CEquipItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEquipItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemIndex = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemindex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEquipItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEquipItemRequest)
  return false;
#undef DO_
}

void CEquipItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEquipItemRequest)
  // optional uint32 ItemIndex = 1;
  if (this->itemindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:CEquipItemRequest)
}

::google::protobuf::uint8* CEquipItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEquipItemRequest)
  // optional uint32 ItemIndex = 1;
  if (this->itemindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CEquipItemRequest)
  return target;
}

size_t CEquipItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEquipItemRequest)
  size_t total_size = 0;

  // optional uint32 ItemIndex = 1;
  if (this->itemindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CEquipItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEquipItemRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CEquipItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEquipItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEquipItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEquipItemRequest)
    UnsafeMergeFrom(*source);
  }
}

void CEquipItemRequest::MergeFrom(const CEquipItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEquipItemRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CEquipItemRequest::UnsafeMergeFrom(const CEquipItemRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.itemindex() != 0) {
    set_itemindex(from.itemindex());
  }
}

void CEquipItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEquipItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEquipItemRequest::CopyFrom(const CEquipItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEquipItemRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CEquipItemRequest::IsInitialized() const {

  return true;
}

void CEquipItemRequest::Swap(CEquipItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEquipItemRequest::InternalSwap(CEquipItemRequest* other) {
  std::swap(itemindex_, other->itemindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CEquipItemRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CEquipItemRequest_descriptor_;
  metadata.reflection = CEquipItemRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CEquipItemRequest

// optional uint32 ItemIndex = 1;
void CEquipItemRequest::clear_itemindex() {
  itemindex_ = 0u;
}
::google::protobuf::uint32 CEquipItemRequest::itemindex() const {
  // @@protoc_insertion_point(field_get:CEquipItemRequest.ItemIndex)
  return itemindex_;
}
void CEquipItemRequest::set_itemindex(::google::protobuf::uint32 value) {
  
  itemindex_ = value;
  // @@protoc_insertion_point(field_set:CEquipItemRequest.ItemIndex)
}

inline const CEquipItemRequest* CEquipItemRequest::internal_default_instance() {
  return &CEquipItemRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEquipItemResponse::kResultFieldNumber;
const int CEquipItemResponse::kItemIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEquipItemResponse::CEquipItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEquipItemResponse)
}

void CEquipItemResponse::InitAsDefaultInstance() {
}

CEquipItemResponse::CEquipItemResponse(const CEquipItemResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CEquipItemResponse)
}

void CEquipItemResponse::SharedCtor() {
  ::memset(&result_, 0, reinterpret_cast<char*>(&itemindex_) -
    reinterpret_cast<char*>(&result_) + sizeof(itemindex_));
  _cached_size_ = 0;
}

CEquipItemResponse::~CEquipItemResponse() {
  // @@protoc_insertion_point(destructor:CEquipItemResponse)
  SharedDtor();
}

void CEquipItemResponse::SharedDtor() {
}

void CEquipItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CEquipItemResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CEquipItemResponse_descriptor_;
}

const CEquipItemResponse& CEquipItemResponse::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CEquipItemResponse> CEquipItemResponse_default_instance_;

CEquipItemResponse* CEquipItemResponse::New(::google::protobuf::Arena* arena) const {
  CEquipItemResponse* n = new CEquipItemResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CEquipItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CEquipItemResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CEquipItemResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CEquipItemResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(result_, itemindex_);

#undef ZR_HELPER_
#undef ZR_

}

bool CEquipItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEquipItemResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemIndex;
        break;
      }

      // optional uint32 ItemIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemIndex:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemindex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEquipItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEquipItemResponse)
  return false;
#undef DO_
}

void CEquipItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEquipItemResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // optional uint32 ItemIndex = 2;
  if (this->itemindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itemindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:CEquipItemResponse)
}

::google::protobuf::uint8* CEquipItemResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEquipItemResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // optional uint32 ItemIndex = 2;
  if (this->itemindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itemindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CEquipItemResponse)
  return target;
}

size_t CEquipItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEquipItemResponse)
  size_t total_size = 0;

  // optional uint32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  // optional uint32 ItemIndex = 2;
  if (this->itemindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CEquipItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEquipItemResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CEquipItemResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEquipItemResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEquipItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEquipItemResponse)
    UnsafeMergeFrom(*source);
  }
}

void CEquipItemResponse::MergeFrom(const CEquipItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEquipItemResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CEquipItemResponse::UnsafeMergeFrom(const CEquipItemResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.itemindex() != 0) {
    set_itemindex(from.itemindex());
  }
}

void CEquipItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEquipItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEquipItemResponse::CopyFrom(const CEquipItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEquipItemResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CEquipItemResponse::IsInitialized() const {

  return true;
}

void CEquipItemResponse::Swap(CEquipItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEquipItemResponse::InternalSwap(CEquipItemResponse* other) {
  std::swap(result_, other->result_);
  std::swap(itemindex_, other->itemindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CEquipItemResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CEquipItemResponse_descriptor_;
  metadata.reflection = CEquipItemResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CEquipItemResponse

// optional uint32 Result = 1;
void CEquipItemResponse::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 CEquipItemResponse::result() const {
  // @@protoc_insertion_point(field_get:CEquipItemResponse.Result)
  return result_;
}
void CEquipItemResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CEquipItemResponse.Result)
}

// optional uint32 ItemIndex = 2;
void CEquipItemResponse::clear_itemindex() {
  itemindex_ = 0u;
}
::google::protobuf::uint32 CEquipItemResponse::itemindex() const {
  // @@protoc_insertion_point(field_get:CEquipItemResponse.ItemIndex)
  return itemindex_;
}
void CEquipItemResponse::set_itemindex(::google::protobuf::uint32 value) {
  
  itemindex_ = value;
  // @@protoc_insertion_point(field_set:CEquipItemResponse.ItemIndex)
}

inline const CEquipItemResponse* CEquipItemResponse::internal_default_instance() {
  return &CEquipItemResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUnEquipItemRequest::kEquipPartFieldNumber;
const int CUnEquipItemRequest::kItemIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUnEquipItemRequest::CUnEquipItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUnEquipItemRequest)
}

void CUnEquipItemRequest::InitAsDefaultInstance() {
}

CUnEquipItemRequest::CUnEquipItemRequest(const CUnEquipItemRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CUnEquipItemRequest)
}

void CUnEquipItemRequest::SharedCtor() {
  ::memset(&equippart_, 0, reinterpret_cast<char*>(&itemindex_) -
    reinterpret_cast<char*>(&equippart_) + sizeof(itemindex_));
  _cached_size_ = 0;
}

CUnEquipItemRequest::~CUnEquipItemRequest() {
  // @@protoc_insertion_point(destructor:CUnEquipItemRequest)
  SharedDtor();
}

void CUnEquipItemRequest::SharedDtor() {
}

void CUnEquipItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CUnEquipItemRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CUnEquipItemRequest_descriptor_;
}

const CUnEquipItemRequest& CUnEquipItemRequest::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CUnEquipItemRequest> CUnEquipItemRequest_default_instance_;

CUnEquipItemRequest* CUnEquipItemRequest::New(::google::protobuf::Arena* arena) const {
  CUnEquipItemRequest* n = new CUnEquipItemRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CUnEquipItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CUnEquipItemRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CUnEquipItemRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CUnEquipItemRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(equippart_, itemindex_);

#undef ZR_HELPER_
#undef ZR_

}

bool CUnEquipItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUnEquipItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EquipPart = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equippart_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemIndex;
        break;
      }

      // optional uint32 ItemIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemIndex:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemindex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUnEquipItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUnEquipItemRequest)
  return false;
#undef DO_
}

void CUnEquipItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUnEquipItemRequest)
  // optional uint32 EquipPart = 1;
  if (this->equippart() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->equippart(), output);
  }

  // optional uint32 ItemIndex = 2;
  if (this->itemindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itemindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:CUnEquipItemRequest)
}

::google::protobuf::uint8* CUnEquipItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUnEquipItemRequest)
  // optional uint32 EquipPart = 1;
  if (this->equippart() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->equippart(), target);
  }

  // optional uint32 ItemIndex = 2;
  if (this->itemindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itemindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CUnEquipItemRequest)
  return target;
}

size_t CUnEquipItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUnEquipItemRequest)
  size_t total_size = 0;

  // optional uint32 EquipPart = 1;
  if (this->equippart() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->equippart());
  }

  // optional uint32 ItemIndex = 2;
  if (this->itemindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CUnEquipItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUnEquipItemRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CUnEquipItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUnEquipItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUnEquipItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUnEquipItemRequest)
    UnsafeMergeFrom(*source);
  }
}

void CUnEquipItemRequest::MergeFrom(const CUnEquipItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUnEquipItemRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CUnEquipItemRequest::UnsafeMergeFrom(const CUnEquipItemRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.equippart() != 0) {
    set_equippart(from.equippart());
  }
  if (from.itemindex() != 0) {
    set_itemindex(from.itemindex());
  }
}

void CUnEquipItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUnEquipItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUnEquipItemRequest::CopyFrom(const CUnEquipItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUnEquipItemRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CUnEquipItemRequest::IsInitialized() const {

  return true;
}

void CUnEquipItemRequest::Swap(CUnEquipItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUnEquipItemRequest::InternalSwap(CUnEquipItemRequest* other) {
  std::swap(equippart_, other->equippart_);
  std::swap(itemindex_, other->itemindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CUnEquipItemRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CUnEquipItemRequest_descriptor_;
  metadata.reflection = CUnEquipItemRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CUnEquipItemRequest

// optional uint32 EquipPart = 1;
void CUnEquipItemRequest::clear_equippart() {
  equippart_ = 0u;
}
::google::protobuf::uint32 CUnEquipItemRequest::equippart() const {
  // @@protoc_insertion_point(field_get:CUnEquipItemRequest.EquipPart)
  return equippart_;
}
void CUnEquipItemRequest::set_equippart(::google::protobuf::uint32 value) {
  
  equippart_ = value;
  // @@protoc_insertion_point(field_set:CUnEquipItemRequest.EquipPart)
}

// optional uint32 ItemIndex = 2;
void CUnEquipItemRequest::clear_itemindex() {
  itemindex_ = 0u;
}
::google::protobuf::uint32 CUnEquipItemRequest::itemindex() const {
  // @@protoc_insertion_point(field_get:CUnEquipItemRequest.ItemIndex)
  return itemindex_;
}
void CUnEquipItemRequest::set_itemindex(::google::protobuf::uint32 value) {
  
  itemindex_ = value;
  // @@protoc_insertion_point(field_set:CUnEquipItemRequest.ItemIndex)
}

inline const CUnEquipItemRequest* CUnEquipItemRequest::internal_default_instance() {
  return &CUnEquipItemRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CUnEquipItemResponse::kResultFieldNumber;
const int CUnEquipItemResponse::kEquipPartFieldNumber;
const int CUnEquipItemResponse::kItemIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CUnEquipItemResponse::CUnEquipItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CUnEquipItemResponse)
}

void CUnEquipItemResponse::InitAsDefaultInstance() {
}

CUnEquipItemResponse::CUnEquipItemResponse(const CUnEquipItemResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CUnEquipItemResponse)
}

void CUnEquipItemResponse::SharedCtor() {
  ::memset(&result_, 0, reinterpret_cast<char*>(&itemindex_) -
    reinterpret_cast<char*>(&result_) + sizeof(itemindex_));
  _cached_size_ = 0;
}

CUnEquipItemResponse::~CUnEquipItemResponse() {
  // @@protoc_insertion_point(destructor:CUnEquipItemResponse)
  SharedDtor();
}

void CUnEquipItemResponse::SharedDtor() {
}

void CUnEquipItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CUnEquipItemResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CUnEquipItemResponse_descriptor_;
}

const CUnEquipItemResponse& CUnEquipItemResponse::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CUnEquipItemResponse> CUnEquipItemResponse_default_instance_;

CUnEquipItemResponse* CUnEquipItemResponse::New(::google::protobuf::Arena* arena) const {
  CUnEquipItemResponse* n = new CUnEquipItemResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CUnEquipItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CUnEquipItemResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CUnEquipItemResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CUnEquipItemResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(result_, itemindex_);

#undef ZR_HELPER_
#undef ZR_

}

bool CUnEquipItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CUnEquipItemResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_EquipPart;
        break;
      }

      // optional uint32 EquipPart = 2;
      case 2: {
        if (tag == 16) {
         parse_EquipPart:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equippart_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ItemIndex;
        break;
      }

      // optional uint32 ItemIndex = 3;
      case 3: {
        if (tag == 24) {
         parse_ItemIndex:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemindex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CUnEquipItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CUnEquipItemResponse)
  return false;
#undef DO_
}

void CUnEquipItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CUnEquipItemResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // optional uint32 EquipPart = 2;
  if (this->equippart() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->equippart(), output);
  }

  // optional uint32 ItemIndex = 3;
  if (this->itemindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->itemindex(), output);
  }

  // @@protoc_insertion_point(serialize_end:CUnEquipItemResponse)
}

::google::protobuf::uint8* CUnEquipItemResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CUnEquipItemResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // optional uint32 EquipPart = 2;
  if (this->equippart() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->equippart(), target);
  }

  // optional uint32 ItemIndex = 3;
  if (this->itemindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->itemindex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CUnEquipItemResponse)
  return target;
}

size_t CUnEquipItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CUnEquipItemResponse)
  size_t total_size = 0;

  // optional uint32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  // optional uint32 EquipPart = 2;
  if (this->equippart() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->equippart());
  }

  // optional uint32 ItemIndex = 3;
  if (this->itemindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CUnEquipItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CUnEquipItemResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CUnEquipItemResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CUnEquipItemResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CUnEquipItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CUnEquipItemResponse)
    UnsafeMergeFrom(*source);
  }
}

void CUnEquipItemResponse::MergeFrom(const CUnEquipItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CUnEquipItemResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CUnEquipItemResponse::UnsafeMergeFrom(const CUnEquipItemResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.equippart() != 0) {
    set_equippart(from.equippart());
  }
  if (from.itemindex() != 0) {
    set_itemindex(from.itemindex());
  }
}

void CUnEquipItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CUnEquipItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CUnEquipItemResponse::CopyFrom(const CUnEquipItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CUnEquipItemResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CUnEquipItemResponse::IsInitialized() const {

  return true;
}

void CUnEquipItemResponse::Swap(CUnEquipItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CUnEquipItemResponse::InternalSwap(CUnEquipItemResponse* other) {
  std::swap(result_, other->result_);
  std::swap(equippart_, other->equippart_);
  std::swap(itemindex_, other->itemindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CUnEquipItemResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CUnEquipItemResponse_descriptor_;
  metadata.reflection = CUnEquipItemResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CUnEquipItemResponse

// optional uint32 Result = 1;
void CUnEquipItemResponse::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 CUnEquipItemResponse::result() const {
  // @@protoc_insertion_point(field_get:CUnEquipItemResponse.Result)
  return result_;
}
void CUnEquipItemResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CUnEquipItemResponse.Result)
}

// optional uint32 EquipPart = 2;
void CUnEquipItemResponse::clear_equippart() {
  equippart_ = 0u;
}
::google::protobuf::uint32 CUnEquipItemResponse::equippart() const {
  // @@protoc_insertion_point(field_get:CUnEquipItemResponse.EquipPart)
  return equippart_;
}
void CUnEquipItemResponse::set_equippart(::google::protobuf::uint32 value) {
  
  equippart_ = value;
  // @@protoc_insertion_point(field_set:CUnEquipItemResponse.EquipPart)
}

// optional uint32 ItemIndex = 3;
void CUnEquipItemResponse::clear_itemindex() {
  itemindex_ = 0u;
}
::google::protobuf::uint32 CUnEquipItemResponse::itemindex() const {
  // @@protoc_insertion_point(field_get:CUnEquipItemResponse.ItemIndex)
  return itemindex_;
}
void CUnEquipItemResponse::set_itemindex(::google::protobuf::uint32 value) {
  
  itemindex_ = value;
  // @@protoc_insertion_point(field_set:CUnEquipItemResponse.ItemIndex)
}

inline const CUnEquipItemResponse* CUnEquipItemResponse::internal_default_instance() {
  return &CUnEquipItemResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CEquipChangeNotify::kEntityIDFieldNumber;
const int CEquipChangeNotify::kEquipPartFieldNumber;
const int CEquipChangeNotify::kEquipItemIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CEquipChangeNotify::CEquipChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CEquipChangeNotify)
}

void CEquipChangeNotify::InitAsDefaultInstance() {
}

CEquipChangeNotify::CEquipChangeNotify(const CEquipChangeNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CEquipChangeNotify)
}

void CEquipChangeNotify::SharedCtor() {
  ::memset(&entityid_, 0, reinterpret_cast<char*>(&equipitemid_) -
    reinterpret_cast<char*>(&entityid_) + sizeof(equipitemid_));
  _cached_size_ = 0;
}

CEquipChangeNotify::~CEquipChangeNotify() {
  // @@protoc_insertion_point(destructor:CEquipChangeNotify)
  SharedDtor();
}

void CEquipChangeNotify::SharedDtor() {
}

void CEquipChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CEquipChangeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CEquipChangeNotify_descriptor_;
}

const CEquipChangeNotify& CEquipChangeNotify::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CEquipChangeNotify> CEquipChangeNotify_default_instance_;

CEquipChangeNotify* CEquipChangeNotify::New(::google::protobuf::Arena* arena) const {
  CEquipChangeNotify* n = new CEquipChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CEquipChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CEquipChangeNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CEquipChangeNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CEquipChangeNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(entityid_, equipitemid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CEquipChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CEquipChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EntityID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_EquipPart;
        break;
      }

      // optional uint32 EquipPart = 2;
      case 2: {
        if (tag == 16) {
         parse_EquipPart:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equippart_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_EquipItemID;
        break;
      }

      // optional uint32 EquipItemID = 3;
      case 3: {
        if (tag == 24) {
         parse_EquipItemID:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &equipitemid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CEquipChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CEquipChangeNotify)
  return false;
#undef DO_
}

void CEquipChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CEquipChangeNotify)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entityid(), output);
  }

  // optional uint32 EquipPart = 2;
  if (this->equippart() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->equippart(), output);
  }

  // optional uint32 EquipItemID = 3;
  if (this->equipitemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->equipitemid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CEquipChangeNotify)
}

::google::protobuf::uint8* CEquipChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CEquipChangeNotify)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entityid(), target);
  }

  // optional uint32 EquipPart = 2;
  if (this->equippart() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->equippart(), target);
  }

  // optional uint32 EquipItemID = 3;
  if (this->equipitemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->equipitemid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CEquipChangeNotify)
  return target;
}

size_t CEquipChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CEquipChangeNotify)
  size_t total_size = 0;

  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entityid());
  }

  // optional uint32 EquipPart = 2;
  if (this->equippart() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->equippart());
  }

  // optional uint32 EquipItemID = 3;
  if (this->equipitemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->equipitemid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CEquipChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CEquipChangeNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CEquipChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CEquipChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CEquipChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CEquipChangeNotify)
    UnsafeMergeFrom(*source);
  }
}

void CEquipChangeNotify::MergeFrom(const CEquipChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CEquipChangeNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CEquipChangeNotify::UnsafeMergeFrom(const CEquipChangeNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.equippart() != 0) {
    set_equippart(from.equippart());
  }
  if (from.equipitemid() != 0) {
    set_equipitemid(from.equipitemid());
  }
}

void CEquipChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CEquipChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CEquipChangeNotify::CopyFrom(const CEquipChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CEquipChangeNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CEquipChangeNotify::IsInitialized() const {

  return true;
}

void CEquipChangeNotify::Swap(CEquipChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CEquipChangeNotify::InternalSwap(CEquipChangeNotify* other) {
  std::swap(entityid_, other->entityid_);
  std::swap(equippart_, other->equippart_);
  std::swap(equipitemid_, other->equipitemid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CEquipChangeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CEquipChangeNotify_descriptor_;
  metadata.reflection = CEquipChangeNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CEquipChangeNotify

// optional uint32 EntityID = 1;
void CEquipChangeNotify::clear_entityid() {
  entityid_ = 0u;
}
::google::protobuf::uint32 CEquipChangeNotify::entityid() const {
  // @@protoc_insertion_point(field_get:CEquipChangeNotify.EntityID)
  return entityid_;
}
void CEquipChangeNotify::set_entityid(::google::protobuf::uint32 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:CEquipChangeNotify.EntityID)
}

// optional uint32 EquipPart = 2;
void CEquipChangeNotify::clear_equippart() {
  equippart_ = 0u;
}
::google::protobuf::uint32 CEquipChangeNotify::equippart() const {
  // @@protoc_insertion_point(field_get:CEquipChangeNotify.EquipPart)
  return equippart_;
}
void CEquipChangeNotify::set_equippart(::google::protobuf::uint32 value) {
  
  equippart_ = value;
  // @@protoc_insertion_point(field_set:CEquipChangeNotify.EquipPart)
}

// optional uint32 EquipItemID = 3;
void CEquipChangeNotify::clear_equipitemid() {
  equipitemid_ = 0u;
}
::google::protobuf::uint32 CEquipChangeNotify::equipitemid() const {
  // @@protoc_insertion_point(field_get:CEquipChangeNotify.EquipItemID)
  return equipitemid_;
}
void CEquipChangeNotify::set_equipitemid(::google::protobuf::uint32 value) {
  
  equipitemid_ = value;
  // @@protoc_insertion_point(field_set:CEquipChangeNotify.EquipItemID)
}

inline const CEquipChangeNotify* CEquipChangeNotify::internal_default_instance() {
  return &CEquipChangeNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPickItemRequest::kEntityIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPickItemRequest::CPickItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPickItemRequest)
}

void CPickItemRequest::InitAsDefaultInstance() {
}

CPickItemRequest::CPickItemRequest(const CPickItemRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CPickItemRequest)
}

void CPickItemRequest::SharedCtor() {
  entityid_ = 0u;
  _cached_size_ = 0;
}

CPickItemRequest::~CPickItemRequest() {
  // @@protoc_insertion_point(destructor:CPickItemRequest)
  SharedDtor();
}

void CPickItemRequest::SharedDtor() {
}

void CPickItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPickItemRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPickItemRequest_descriptor_;
}

const CPickItemRequest& CPickItemRequest::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CPickItemRequest> CPickItemRequest_default_instance_;

CPickItemRequest* CPickItemRequest::New(::google::protobuf::Arena* arena) const {
  CPickItemRequest* n = new CPickItemRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPickItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CPickItemRequest)
  entityid_ = 0u;
}

bool CPickItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPickItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 EntityID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPickItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPickItemRequest)
  return false;
#undef DO_
}

void CPickItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPickItemRequest)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entityid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CPickItemRequest)
}

::google::protobuf::uint8* CPickItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPickItemRequest)
  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entityid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CPickItemRequest)
  return target;
}

size_t CPickItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPickItemRequest)
  size_t total_size = 0;

  // optional uint32 EntityID = 1;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entityid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPickItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPickItemRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CPickItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPickItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPickItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPickItemRequest)
    UnsafeMergeFrom(*source);
  }
}

void CPickItemRequest::MergeFrom(const CPickItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPickItemRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CPickItemRequest::UnsafeMergeFrom(const CPickItemRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
}

void CPickItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPickItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPickItemRequest::CopyFrom(const CPickItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPickItemRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CPickItemRequest::IsInitialized() const {

  return true;
}

void CPickItemRequest::Swap(CPickItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPickItemRequest::InternalSwap(CPickItemRequest* other) {
  std::swap(entityid_, other->entityid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPickItemRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPickItemRequest_descriptor_;
  metadata.reflection = CPickItemRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPickItemRequest

// optional uint32 EntityID = 1;
void CPickItemRequest::clear_entityid() {
  entityid_ = 0u;
}
::google::protobuf::uint32 CPickItemRequest::entityid() const {
  // @@protoc_insertion_point(field_get:CPickItemRequest.EntityID)
  return entityid_;
}
void CPickItemRequest::set_entityid(::google::protobuf::uint32 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:CPickItemRequest.EntityID)
}

inline const CPickItemRequest* CPickItemRequest::internal_default_instance() {
  return &CPickItemRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPickItemResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPickItemResponse::CPickItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPickItemResponse)
}

void CPickItemResponse::InitAsDefaultInstance() {
}

CPickItemResponse::CPickItemResponse(const CPickItemResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CPickItemResponse)
}

void CPickItemResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

CPickItemResponse::~CPickItemResponse() {
  // @@protoc_insertion_point(destructor:CPickItemResponse)
  SharedDtor();
}

void CPickItemResponse::SharedDtor() {
}

void CPickItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPickItemResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPickItemResponse_descriptor_;
}

const CPickItemResponse& CPickItemResponse::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CPickItemResponse> CPickItemResponse_default_instance_;

CPickItemResponse* CPickItemResponse::New(::google::protobuf::Arena* arena) const {
  CPickItemResponse* n = new CPickItemResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPickItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CPickItemResponse)
  result_ = 0u;
}

bool CPickItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPickItemResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPickItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPickItemResponse)
  return false;
#undef DO_
}

void CPickItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPickItemResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:CPickItemResponse)
}

::google::protobuf::uint8* CPickItemResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPickItemResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CPickItemResponse)
  return target;
}

size_t CPickItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPickItemResponse)
  size_t total_size = 0;

  // optional uint32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPickItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPickItemResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CPickItemResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPickItemResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPickItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPickItemResponse)
    UnsafeMergeFrom(*source);
  }
}

void CPickItemResponse::MergeFrom(const CPickItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPickItemResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CPickItemResponse::UnsafeMergeFrom(const CPickItemResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CPickItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPickItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPickItemResponse::CopyFrom(const CPickItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPickItemResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CPickItemResponse::IsInitialized() const {

  return true;
}

void CPickItemResponse::Swap(CPickItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPickItemResponse::InternalSwap(CPickItemResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPickItemResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPickItemResponse_descriptor_;
  metadata.reflection = CPickItemResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPickItemResponse

// optional uint32 Result = 1;
void CPickItemResponse::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 CPickItemResponse::result() const {
  // @@protoc_insertion_point(field_get:CPickItemResponse.Result)
  return result_;
}
void CPickItemResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CPickItemResponse.Result)
}

inline const CPickItemResponse* CPickItemResponse::internal_default_instance() {
  return &CPickItemResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
