// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: itemmodule.hxx

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "itemmodule.hxx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMoneyUpdateNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMoneyUpdateNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CDiamondUpdateNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CDiamondUpdateNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CInsertItemNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CInsertItemNotify_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ITEM_MODULE_MSG_ID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_itemmodule_2ehxx() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_itemmodule_2ehxx() {
  protobuf_AddDesc_itemmodule_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "itemmodule.hxx");
  GOOGLE_CHECK(file != NULL);
  CMoneyUpdateNotify_descriptor_ = file->message_type(0);
  static const int CMoneyUpdateNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMoneyUpdateNotify, money_),
  };
  CMoneyUpdateNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMoneyUpdateNotify_descriptor_,
      CMoneyUpdateNotify::internal_default_instance(),
      CMoneyUpdateNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMoneyUpdateNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMoneyUpdateNotify, _internal_metadata_));
  CDiamondUpdateNotify_descriptor_ = file->message_type(1);
  static const int CDiamondUpdateNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDiamondUpdateNotify, diamond_),
  };
  CDiamondUpdateNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CDiamondUpdateNotify_descriptor_,
      CDiamondUpdateNotify::internal_default_instance(),
      CDiamondUpdateNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CDiamondUpdateNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDiamondUpdateNotify, _internal_metadata_));
  CInsertItemNotify_descriptor_ = file->message_type(2);
  static const int CInsertItemNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInsertItemNotify, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInsertItemNotify, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInsertItemNotify, number_),
  };
  CInsertItemNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CInsertItemNotify_descriptor_,
      CInsertItemNotify::internal_default_instance(),
      CInsertItemNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CInsertItemNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CInsertItemNotify, _internal_metadata_));
  ITEM_MODULE_MSG_ID_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_itemmodule_2ehxx);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMoneyUpdateNotify_descriptor_, CMoneyUpdateNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CDiamondUpdateNotify_descriptor_, CDiamondUpdateNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CInsertItemNotify_descriptor_, CInsertItemNotify::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_itemmodule_2ehxx() {
  CMoneyUpdateNotify_default_instance_.Shutdown();
  delete CMoneyUpdateNotify_reflection_;
  CDiamondUpdateNotify_default_instance_.Shutdown();
  delete CDiamondUpdateNotify_reflection_;
  CInsertItemNotify_default_instance_.Shutdown();
  delete CInsertItemNotify_reflection_;
}

void protobuf_InitDefaults_itemmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  CMoneyUpdateNotify_default_instance_.DefaultConstruct();
  CDiamondUpdateNotify_default_instance_.DefaultConstruct();
  CInsertItemNotify_default_instance_.DefaultConstruct();
  CMoneyUpdateNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CDiamondUpdateNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CInsertItemNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_itemmodule_2ehxx_once_);
void protobuf_InitDefaults_itemmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_itemmodule_2ehxx_once_,
                 &protobuf_InitDefaults_itemmodule_2ehxx_impl);
}
void protobuf_AddDesc_itemmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_itemmodule_2ehxx();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016itemmodule.hxx\"#\n\022CMoneyUpdateNotify\022\r"
    "\n\005Money\030\001 \001(\r\"\'\n\024CDiamondUpdateNotify\022\017\n"
    "\007Diamond\030\001 \001(\r\"B\n\021CInsertItemNotify\022\016\n\006I"
    "temID\030\001 \001(\r\022\r\n\005Index\030\002 \001(\r\022\016\n\006Number\030\003 \001"
    "(\r*r\n\022ITEM_MODULE_MSG_ID\022\030\n\024ID_ITEM_MODU"
    "LE_ERROR\020\000\022\037\n\032ID_S2C_NOTIYF_MONEY_UPDATE"
    "\020\200\020\022!\n\034ID_S2C_NOTIYF_DIAMOND_UPDATE\020\201\020b\006"
    "proto3", 286);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "itemmodule.hxx", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_itemmodule_2ehxx);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_itemmodule_2ehxx_once_);
void protobuf_AddDesc_itemmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_itemmodule_2ehxx_once_,
                 &protobuf_AddDesc_itemmodule_2ehxx_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_itemmodule_2ehxx {
  StaticDescriptorInitializer_itemmodule_2ehxx() {
    protobuf_AddDesc_itemmodule_2ehxx();
  }
} static_descriptor_initializer_itemmodule_2ehxx_;
const ::google::protobuf::EnumDescriptor* ITEM_MODULE_MSG_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITEM_MODULE_MSG_ID_descriptor_;
}
bool ITEM_MODULE_MSG_ID_IsValid(int value) {
  switch (value) {
    case 0:
    case 2048:
    case 2049:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMoneyUpdateNotify::kMoneyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMoneyUpdateNotify::CMoneyUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMoneyUpdateNotify)
}

void CMoneyUpdateNotify::InitAsDefaultInstance() {
}

CMoneyUpdateNotify::CMoneyUpdateNotify(const CMoneyUpdateNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMoneyUpdateNotify)
}

void CMoneyUpdateNotify::SharedCtor() {
  money_ = 0u;
  _cached_size_ = 0;
}

CMoneyUpdateNotify::~CMoneyUpdateNotify() {
  // @@protoc_insertion_point(destructor:CMoneyUpdateNotify)
  SharedDtor();
}

void CMoneyUpdateNotify::SharedDtor() {
}

void CMoneyUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMoneyUpdateNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMoneyUpdateNotify_descriptor_;
}

const CMoneyUpdateNotify& CMoneyUpdateNotify::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CMoneyUpdateNotify> CMoneyUpdateNotify_default_instance_;

CMoneyUpdateNotify* CMoneyUpdateNotify::New(::google::protobuf::Arena* arena) const {
  CMoneyUpdateNotify* n = new CMoneyUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMoneyUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CMoneyUpdateNotify)
  money_ = 0u;
}

bool CMoneyUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMoneyUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Money = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMoneyUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMoneyUpdateNotify)
  return false;
#undef DO_
}

void CMoneyUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMoneyUpdateNotify)
  // optional uint32 Money = 1;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->money(), output);
  }

  // @@protoc_insertion_point(serialize_end:CMoneyUpdateNotify)
}

::google::protobuf::uint8* CMoneyUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMoneyUpdateNotify)
  // optional uint32 Money = 1;
  if (this->money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->money(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CMoneyUpdateNotify)
  return target;
}

size_t CMoneyUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMoneyUpdateNotify)
  size_t total_size = 0;

  // optional uint32 Money = 1;
  if (this->money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->money());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMoneyUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMoneyUpdateNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMoneyUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMoneyUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMoneyUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMoneyUpdateNotify)
    UnsafeMergeFrom(*source);
  }
}

void CMoneyUpdateNotify::MergeFrom(const CMoneyUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMoneyUpdateNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CMoneyUpdateNotify::UnsafeMergeFrom(const CMoneyUpdateNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.money() != 0) {
    set_money(from.money());
  }
}

void CMoneyUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMoneyUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMoneyUpdateNotify::CopyFrom(const CMoneyUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMoneyUpdateNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CMoneyUpdateNotify::IsInitialized() const {

  return true;
}

void CMoneyUpdateNotify::Swap(CMoneyUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMoneyUpdateNotify::InternalSwap(CMoneyUpdateNotify* other) {
  std::swap(money_, other->money_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMoneyUpdateNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMoneyUpdateNotify_descriptor_;
  metadata.reflection = CMoneyUpdateNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMoneyUpdateNotify

// optional uint32 Money = 1;
void CMoneyUpdateNotify::clear_money() {
  money_ = 0u;
}
::google::protobuf::uint32 CMoneyUpdateNotify::money() const {
  // @@protoc_insertion_point(field_get:CMoneyUpdateNotify.Money)
  return money_;
}
void CMoneyUpdateNotify::set_money(::google::protobuf::uint32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:CMoneyUpdateNotify.Money)
}

inline const CMoneyUpdateNotify* CMoneyUpdateNotify::internal_default_instance() {
  return &CMoneyUpdateNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDiamondUpdateNotify::kDiamondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDiamondUpdateNotify::CDiamondUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CDiamondUpdateNotify)
}

void CDiamondUpdateNotify::InitAsDefaultInstance() {
}

CDiamondUpdateNotify::CDiamondUpdateNotify(const CDiamondUpdateNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CDiamondUpdateNotify)
}

void CDiamondUpdateNotify::SharedCtor() {
  diamond_ = 0u;
  _cached_size_ = 0;
}

CDiamondUpdateNotify::~CDiamondUpdateNotify() {
  // @@protoc_insertion_point(destructor:CDiamondUpdateNotify)
  SharedDtor();
}

void CDiamondUpdateNotify::SharedDtor() {
}

void CDiamondUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CDiamondUpdateNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CDiamondUpdateNotify_descriptor_;
}

const CDiamondUpdateNotify& CDiamondUpdateNotify::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CDiamondUpdateNotify> CDiamondUpdateNotify_default_instance_;

CDiamondUpdateNotify* CDiamondUpdateNotify::New(::google::protobuf::Arena* arena) const {
  CDiamondUpdateNotify* n = new CDiamondUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CDiamondUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CDiamondUpdateNotify)
  diamond_ = 0u;
}

bool CDiamondUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CDiamondUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Diamond = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &diamond_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CDiamondUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CDiamondUpdateNotify)
  return false;
#undef DO_
}

void CDiamondUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CDiamondUpdateNotify)
  // optional uint32 Diamond = 1;
  if (this->diamond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->diamond(), output);
  }

  // @@protoc_insertion_point(serialize_end:CDiamondUpdateNotify)
}

::google::protobuf::uint8* CDiamondUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CDiamondUpdateNotify)
  // optional uint32 Diamond = 1;
  if (this->diamond() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->diamond(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CDiamondUpdateNotify)
  return target;
}

size_t CDiamondUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CDiamondUpdateNotify)
  size_t total_size = 0;

  // optional uint32 Diamond = 1;
  if (this->diamond() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->diamond());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CDiamondUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CDiamondUpdateNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CDiamondUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDiamondUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CDiamondUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CDiamondUpdateNotify)
    UnsafeMergeFrom(*source);
  }
}

void CDiamondUpdateNotify::MergeFrom(const CDiamondUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CDiamondUpdateNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CDiamondUpdateNotify::UnsafeMergeFrom(const CDiamondUpdateNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.diamond() != 0) {
    set_diamond(from.diamond());
  }
}

void CDiamondUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CDiamondUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDiamondUpdateNotify::CopyFrom(const CDiamondUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CDiamondUpdateNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CDiamondUpdateNotify::IsInitialized() const {

  return true;
}

void CDiamondUpdateNotify::Swap(CDiamondUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDiamondUpdateNotify::InternalSwap(CDiamondUpdateNotify* other) {
  std::swap(diamond_, other->diamond_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CDiamondUpdateNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CDiamondUpdateNotify_descriptor_;
  metadata.reflection = CDiamondUpdateNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CDiamondUpdateNotify

// optional uint32 Diamond = 1;
void CDiamondUpdateNotify::clear_diamond() {
  diamond_ = 0u;
}
::google::protobuf::uint32 CDiamondUpdateNotify::diamond() const {
  // @@protoc_insertion_point(field_get:CDiamondUpdateNotify.Diamond)
  return diamond_;
}
void CDiamondUpdateNotify::set_diamond(::google::protobuf::uint32 value) {
  
  diamond_ = value;
  // @@protoc_insertion_point(field_set:CDiamondUpdateNotify.Diamond)
}

inline const CDiamondUpdateNotify* CDiamondUpdateNotify::internal_default_instance() {
  return &CDiamondUpdateNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CInsertItemNotify::kItemIDFieldNumber;
const int CInsertItemNotify::kIndexFieldNumber;
const int CInsertItemNotify::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CInsertItemNotify::CInsertItemNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_itemmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CInsertItemNotify)
}

void CInsertItemNotify::InitAsDefaultInstance() {
}

CInsertItemNotify::CInsertItemNotify(const CInsertItemNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CInsertItemNotify)
}

void CInsertItemNotify::SharedCtor() {
  ::memset(&itemid_, 0, reinterpret_cast<char*>(&number_) -
    reinterpret_cast<char*>(&itemid_) + sizeof(number_));
  _cached_size_ = 0;
}

CInsertItemNotify::~CInsertItemNotify() {
  // @@protoc_insertion_point(destructor:CInsertItemNotify)
  SharedDtor();
}

void CInsertItemNotify::SharedDtor() {
}

void CInsertItemNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CInsertItemNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CInsertItemNotify_descriptor_;
}

const CInsertItemNotify& CInsertItemNotify::default_instance() {
  protobuf_InitDefaults_itemmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CInsertItemNotify> CInsertItemNotify_default_instance_;

CInsertItemNotify* CInsertItemNotify::New(::google::protobuf::Arena* arena) const {
  CInsertItemNotify* n = new CInsertItemNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CInsertItemNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CInsertItemNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CInsertItemNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CInsertItemNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(itemid_, number_);

#undef ZR_HELPER_
#undef ZR_

}

bool CInsertItemNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CInsertItemNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ItemID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Index;
        break;
      }

      // optional uint32 Index = 2;
      case 2: {
        if (tag == 16) {
         parse_Index:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Number;
        break;
      }

      // optional uint32 Number = 3;
      case 3: {
        if (tag == 24) {
         parse_Number:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CInsertItemNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CInsertItemNotify)
  return false;
#undef DO_
}

void CInsertItemNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CInsertItemNotify)
  // optional uint32 ItemID = 1;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->itemid(), output);
  }

  // optional uint32 Index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->index(), output);
  }

  // optional uint32 Number = 3;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->number(), output);
  }

  // @@protoc_insertion_point(serialize_end:CInsertItemNotify)
}

::google::protobuf::uint8* CInsertItemNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CInsertItemNotify)
  // optional uint32 ItemID = 1;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->itemid(), target);
  }

  // optional uint32 Index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->index(), target);
  }

  // optional uint32 Number = 3;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->number(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CInsertItemNotify)
  return target;
}

size_t CInsertItemNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CInsertItemNotify)
  size_t total_size = 0;

  // optional uint32 ItemID = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemid());
  }

  // optional uint32 Index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // optional uint32 Number = 3;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CInsertItemNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CInsertItemNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CInsertItemNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CInsertItemNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CInsertItemNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CInsertItemNotify)
    UnsafeMergeFrom(*source);
  }
}

void CInsertItemNotify::MergeFrom(const CInsertItemNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CInsertItemNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CInsertItemNotify::UnsafeMergeFrom(const CInsertItemNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.number() != 0) {
    set_number(from.number());
  }
}

void CInsertItemNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CInsertItemNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CInsertItemNotify::CopyFrom(const CInsertItemNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CInsertItemNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CInsertItemNotify::IsInitialized() const {

  return true;
}

void CInsertItemNotify::Swap(CInsertItemNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CInsertItemNotify::InternalSwap(CInsertItemNotify* other) {
  std::swap(itemid_, other->itemid_);
  std::swap(index_, other->index_);
  std::swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CInsertItemNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CInsertItemNotify_descriptor_;
  metadata.reflection = CInsertItemNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CInsertItemNotify

// optional uint32 ItemID = 1;
void CInsertItemNotify::clear_itemid() {
  itemid_ = 0u;
}
::google::protobuf::uint32 CInsertItemNotify::itemid() const {
  // @@protoc_insertion_point(field_get:CInsertItemNotify.ItemID)
  return itemid_;
}
void CInsertItemNotify::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:CInsertItemNotify.ItemID)
}

// optional uint32 Index = 2;
void CInsertItemNotify::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 CInsertItemNotify::index() const {
  // @@protoc_insertion_point(field_get:CInsertItemNotify.Index)
  return index_;
}
void CInsertItemNotify::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:CInsertItemNotify.Index)
}

// optional uint32 Number = 3;
void CInsertItemNotify::clear_number() {
  number_ = 0u;
}
::google::protobuf::uint32 CInsertItemNotify::number() const {
  // @@protoc_insertion_point(field_get:CInsertItemNotify.Number)
  return number_;
}
void CInsertItemNotify::set_number(::google::protobuf::uint32 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:CInsertItemNotify.Number)
}

inline const CInsertItemNotify* CInsertItemNotify::internal_default_instance() {
  return &CInsertItemNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
