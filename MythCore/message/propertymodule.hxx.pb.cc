// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: propertymodule.hxx

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "propertymodule.hxx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CLevelUpNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CLevelUpNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGMCommandRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGMCommandRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGMCommandResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGMCommandResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CObtainExpNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CObtainExpNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CObtainVIPExpNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CObtainVIPExpNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CLeaveGameRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CLeaveGameRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CLeaveGameResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CLeaveGameResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPlayerBaseInfoNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPlayerBaseInfoNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPlayerItemInfoNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPlayerItemInfoNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPlayerTaskInfoNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPlayerTaskInfoNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CPlayerSkillInfoNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CPlayerSkillInfoNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGetPlayerPropertyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGetPlayerPropertyRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGetPlayerPropertyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGetPlayerPropertyResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PROPERTY_MODULE_MSG_ID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_propertymodule_2ehxx() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_propertymodule_2ehxx() {
  protobuf_AddDesc_propertymodule_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "propertymodule.hxx");
  GOOGLE_CHECK(file != NULL);
  CLevelUpNotify_descriptor_ = file->message_type(0);
  static const int CLevelUpNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CLevelUpNotify, level_),
  };
  CLevelUpNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CLevelUpNotify_descriptor_,
      CLevelUpNotify::internal_default_instance(),
      CLevelUpNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CLevelUpNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CLevelUpNotify, _internal_metadata_));
  CGMCommandRequest_descriptor_ = file->message_type(1);
  static const int CGMCommandRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGMCommandRequest, commandstring_),
  };
  CGMCommandRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGMCommandRequest_descriptor_,
      CGMCommandRequest::internal_default_instance(),
      CGMCommandRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CGMCommandRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGMCommandRequest, _internal_metadata_));
  CGMCommandResponse_descriptor_ = file->message_type(2);
  static const int CGMCommandResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGMCommandResponse, result_),
  };
  CGMCommandResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGMCommandResponse_descriptor_,
      CGMCommandResponse::internal_default_instance(),
      CGMCommandResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CGMCommandResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGMCommandResponse, _internal_metadata_));
  CObtainExpNotify_descriptor_ = file->message_type(3);
  static const int CObtainExpNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CObtainExpNotify, exp_),
  };
  CObtainExpNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CObtainExpNotify_descriptor_,
      CObtainExpNotify::internal_default_instance(),
      CObtainExpNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CObtainExpNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CObtainExpNotify, _internal_metadata_));
  CObtainVIPExpNotify_descriptor_ = file->message_type(4);
  static const int CObtainVIPExpNotify_offsets_[1] = {
  };
  CObtainVIPExpNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CObtainVIPExpNotify_descriptor_,
      CObtainVIPExpNotify::internal_default_instance(),
      CObtainVIPExpNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CObtainVIPExpNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CObtainVIPExpNotify, _internal_metadata_));
  CLeaveGameRequest_descriptor_ = file->message_type(5);
  static const int CLeaveGameRequest_offsets_[1] = {
  };
  CLeaveGameRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CLeaveGameRequest_descriptor_,
      CLeaveGameRequest::internal_default_instance(),
      CLeaveGameRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CLeaveGameRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CLeaveGameRequest, _internal_metadata_));
  CLeaveGameResponse_descriptor_ = file->message_type(6);
  static const int CLeaveGameResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CLeaveGameResponse, result_),
  };
  CLeaveGameResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CLeaveGameResponse_descriptor_,
      CLeaveGameResponse::internal_default_instance(),
      CLeaveGameResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CLeaveGameResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CLeaveGameResponse, _internal_metadata_));
  CPlayerBaseInfoNotify_descriptor_ = file->message_type(7);
  static const int CPlayerBaseInfoNotify_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerBaseInfoNotify, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerBaseInfoNotify, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerBaseInfoNotify, lineid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerBaseInfoNotify, mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerBaseInfoNotify, mapindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerBaseInfoNotify, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerBaseInfoNotify, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerBaseInfoNotify, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerBaseInfoNotify, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerBaseInfoNotify, viplevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerBaseInfoNotify, vipexp_),
  };
  CPlayerBaseInfoNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPlayerBaseInfoNotify_descriptor_,
      CPlayerBaseInfoNotify::internal_default_instance(),
      CPlayerBaseInfoNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPlayerBaseInfoNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerBaseInfoNotify, _internal_metadata_));
  CPlayerItemInfoNotify_descriptor_ = file->message_type(8);
  static const int CPlayerItemInfoNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerItemInfoNotify, bag_),
  };
  CPlayerItemInfoNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPlayerItemInfoNotify_descriptor_,
      CPlayerItemInfoNotify::internal_default_instance(),
      CPlayerItemInfoNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPlayerItemInfoNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerItemInfoNotify, _internal_metadata_));
  CPlayerTaskInfoNotify_descriptor_ = file->message_type(9);
  static const int CPlayerTaskInfoNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerTaskInfoNotify, tasklist_),
  };
  CPlayerTaskInfoNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPlayerTaskInfoNotify_descriptor_,
      CPlayerTaskInfoNotify::internal_default_instance(),
      CPlayerTaskInfoNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPlayerTaskInfoNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerTaskInfoNotify, _internal_metadata_));
  CPlayerSkillInfoNotify_descriptor_ = file->message_type(10);
  static const int CPlayerSkillInfoNotify_offsets_[1] = {
  };
  CPlayerSkillInfoNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CPlayerSkillInfoNotify_descriptor_,
      CPlayerSkillInfoNotify::internal_default_instance(),
      CPlayerSkillInfoNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CPlayerSkillInfoNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CPlayerSkillInfoNotify, _internal_metadata_));
  CGetPlayerPropertyRequest_descriptor_ = file->message_type(11);
  static const int CGetPlayerPropertyRequest_offsets_[1] = {
  };
  CGetPlayerPropertyRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGetPlayerPropertyRequest_descriptor_,
      CGetPlayerPropertyRequest::internal_default_instance(),
      CGetPlayerPropertyRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CGetPlayerPropertyRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGetPlayerPropertyRequest, _internal_metadata_));
  CGetPlayerPropertyResponse_descriptor_ = file->message_type(12);
  static const int CGetPlayerPropertyResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGetPlayerPropertyResponse, propertyvalue_),
  };
  CGetPlayerPropertyResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGetPlayerPropertyResponse_descriptor_,
      CGetPlayerPropertyResponse::internal_default_instance(),
      CGetPlayerPropertyResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CGetPlayerPropertyResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGetPlayerPropertyResponse, _internal_metadata_));
  PROPERTY_MODULE_MSG_ID_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_propertymodule_2ehxx);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CLevelUpNotify_descriptor_, CLevelUpNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGMCommandRequest_descriptor_, CGMCommandRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGMCommandResponse_descriptor_, CGMCommandResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CObtainExpNotify_descriptor_, CObtainExpNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CObtainVIPExpNotify_descriptor_, CObtainVIPExpNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CLeaveGameRequest_descriptor_, CLeaveGameRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CLeaveGameResponse_descriptor_, CLeaveGameResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPlayerBaseInfoNotify_descriptor_, CPlayerBaseInfoNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPlayerItemInfoNotify_descriptor_, CPlayerItemInfoNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPlayerTaskInfoNotify_descriptor_, CPlayerTaskInfoNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CPlayerSkillInfoNotify_descriptor_, CPlayerSkillInfoNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGetPlayerPropertyRequest_descriptor_, CGetPlayerPropertyRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGetPlayerPropertyResponse_descriptor_, CGetPlayerPropertyResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_propertymodule_2ehxx() {
  CLevelUpNotify_default_instance_.Shutdown();
  delete CLevelUpNotify_reflection_;
  CGMCommandRequest_default_instance_.Shutdown();
  delete CGMCommandRequest_reflection_;
  CGMCommandResponse_default_instance_.Shutdown();
  delete CGMCommandResponse_reflection_;
  CObtainExpNotify_default_instance_.Shutdown();
  delete CObtainExpNotify_reflection_;
  CObtainVIPExpNotify_default_instance_.Shutdown();
  delete CObtainVIPExpNotify_reflection_;
  CLeaveGameRequest_default_instance_.Shutdown();
  delete CLeaveGameRequest_reflection_;
  CLeaveGameResponse_default_instance_.Shutdown();
  delete CLeaveGameResponse_reflection_;
  CPlayerBaseInfoNotify_default_instance_.Shutdown();
  delete CPlayerBaseInfoNotify_reflection_;
  CPlayerItemInfoNotify_default_instance_.Shutdown();
  delete CPlayerItemInfoNotify_reflection_;
  CPlayerTaskInfoNotify_default_instance_.Shutdown();
  delete CPlayerTaskInfoNotify_reflection_;
  CPlayerSkillInfoNotify_default_instance_.Shutdown();
  delete CPlayerSkillInfoNotify_reflection_;
  CGetPlayerPropertyRequest_default_instance_.Shutdown();
  delete CGetPlayerPropertyRequest_reflection_;
  CGetPlayerPropertyResponse_default_instance_.Shutdown();
  delete CGetPlayerPropertyResponse_reflection_;
}

void protobuf_InitDefaults_propertymodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_common_2ehxx();
  CLevelUpNotify_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CGMCommandRequest_default_instance_.DefaultConstruct();
  CGMCommandResponse_default_instance_.DefaultConstruct();
  CObtainExpNotify_default_instance_.DefaultConstruct();
  CObtainVIPExpNotify_default_instance_.DefaultConstruct();
  CLeaveGameRequest_default_instance_.DefaultConstruct();
  CLeaveGameResponse_default_instance_.DefaultConstruct();
  CPlayerBaseInfoNotify_default_instance_.DefaultConstruct();
  CPlayerItemInfoNotify_default_instance_.DefaultConstruct();
  CPlayerTaskInfoNotify_default_instance_.DefaultConstruct();
  CPlayerSkillInfoNotify_default_instance_.DefaultConstruct();
  CGetPlayerPropertyRequest_default_instance_.DefaultConstruct();
  CGetPlayerPropertyResponse_default_instance_.DefaultConstruct();
  CLevelUpNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CGMCommandRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CGMCommandResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CObtainExpNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CObtainVIPExpNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CLeaveGameRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CLeaveGameResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CPlayerBaseInfoNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CPlayerItemInfoNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CPlayerTaskInfoNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CPlayerSkillInfoNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  CGetPlayerPropertyRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CGetPlayerPropertyResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_propertymodule_2ehxx_once_);
void protobuf_InitDefaults_propertymodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_propertymodule_2ehxx_once_,
                 &protobuf_InitDefaults_propertymodule_2ehxx_impl);
}
void protobuf_AddDesc_propertymodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_propertymodule_2ehxx();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022propertymodule.hxx\032\ncommon.hxx\"\037\n\016CLev"
    "elUpNotify\022\r\n\005Level\030\001 \001(\r\"*\n\021CGMCommandR"
    "equest\022\025\n\rCommandString\030\001 \001(\t\"$\n\022CGMComm"
    "andResponse\022\016\n\006Result\030\001 \001(\r\"\037\n\020CObtainEx"
    "pNotify\022\013\n\003Exp\030\001 \001(\r\"\025\n\023CObtainVIPExpNot"
    "ify\"\023\n\021CLeaveGameRequest\"$\n\022CLeaveGameRe"
    "sponse\022\016\n\006Result\030\001 \001(\r\"\304\001\n\025CPlayerBaseIn"
    "foNotify\022\016\n\006RoleID\030\001 \001(\r\022\020\n\010EntityID\030\002 \001"
    "(\r\022\016\n\006LineID\030\003 \001(\r\022\r\n\005MapID\030\004 \001(\r\022\020\n\010Map"
    "Index\030\005 \001(\r\022\014\n\004PosX\030\006 \001(\r\022\014\n\004PosY\030\007 \001(\r\022"
    "\r\n\005Level\030\010 \001(\r\022\013\n\003Exp\030\t \001(\004\022\020\n\010VipLevel\030"
    "\n \001(\r\022\016\n\006VipExp\030\013 \001(\r\"1\n\025CPlayerItemInfo"
    "Notify\022\030\n\003Bag\030\001 \001(\0132\013.PBItemList\"6\n\025CPla"
    "yerTaskInfoNotify\022\035\n\010TaskList\030\001 \001(\0132\013.PB"
    "TaskList\"\030\n\026CPlayerSkillInfoNotify\"\033\n\031CG"
    "etPlayerPropertyRequest\"3\n\032CGetPlayerPro"
    "pertyResponse\022\025\n\rPropertyValue\030\001 \003(\r*\377\003\n"
    "\026PROPERTY_MODULE_MSG_ID\022\034\n\030ID_PROPERTY_M"
    "ODULE_ERROR\020\000\022\033\n\026ID_S2C_NOTIYF_LEVEL_UP\020"
    "\200\010\022\036\n\031ID_C2S_REQUEST_GM_COMMAND\020\201\010\022\037\n\032ID"
    "_S2C_RESPONSE_GM_COMMAND\020\202\010\022\035\n\030ID_S2C_NO"
    "TIFY_OBTAIN_EXP\020\203\010\022!\n\034ID_S2C_NOTIFY_OBTA"
    "IN_VIP_EXP\020\204\010\022\036\n\031ID_C2S_REQUEST_LEAVE_GA"
    "ME\020\205\010\022\037\n\032ID_S2C_RESPONSE_LEAVE_GAME\020\206\010\022#"
    "\n\036ID_S2C_NOTIFY_PLAYER_BASE_INFO\020\207\010\022#\n\036I"
    "D_S2C_NOTIFY_PLAYER_ITEM_INFO\020\210\010\022#\n\036ID_S"
    "2C_NOTIFY_PLAYER_TASK_INFO\020\211\010\022$\n\037ID_S2C_"
    "NOTIFY_PLAYER_SKILL_INFO\020\212\010\022\'\n\"ID_C2S_RE"
    "QUEST_GET_PLAYER_PROPERTY\020\213\010\022(\n#ID_S2C_R"
    "ESPONSE_GET_PLAYER_PROPERTY\020\214\010b\006proto3", 1198);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "propertymodule.hxx", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_common_2ehxx();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_propertymodule_2ehxx);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_propertymodule_2ehxx_once_);
void protobuf_AddDesc_propertymodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_propertymodule_2ehxx_once_,
                 &protobuf_AddDesc_propertymodule_2ehxx_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_propertymodule_2ehxx {
  StaticDescriptorInitializer_propertymodule_2ehxx() {
    protobuf_AddDesc_propertymodule_2ehxx();
  }
} static_descriptor_initializer_propertymodule_2ehxx_;
const ::google::protobuf::EnumDescriptor* PROPERTY_MODULE_MSG_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PROPERTY_MODULE_MSG_ID_descriptor_;
}
bool PROPERTY_MODULE_MSG_ID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1029:
    case 1030:
    case 1031:
    case 1032:
    case 1033:
    case 1034:
    case 1035:
    case 1036:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CLevelUpNotify::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CLevelUpNotify::CLevelUpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_propertymodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CLevelUpNotify)
}

void CLevelUpNotify::InitAsDefaultInstance() {
}

CLevelUpNotify::CLevelUpNotify(const CLevelUpNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CLevelUpNotify)
}

void CLevelUpNotify::SharedCtor() {
  level_ = 0u;
  _cached_size_ = 0;
}

CLevelUpNotify::~CLevelUpNotify() {
  // @@protoc_insertion_point(destructor:CLevelUpNotify)
  SharedDtor();
}

void CLevelUpNotify::SharedDtor() {
}

void CLevelUpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CLevelUpNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CLevelUpNotify_descriptor_;
}

const CLevelUpNotify& CLevelUpNotify::default_instance() {
  protobuf_InitDefaults_propertymodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CLevelUpNotify> CLevelUpNotify_default_instance_;

CLevelUpNotify* CLevelUpNotify::New(::google::protobuf::Arena* arena) const {
  CLevelUpNotify* n = new CLevelUpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CLevelUpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CLevelUpNotify)
  level_ = 0u;
}

bool CLevelUpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CLevelUpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Level = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CLevelUpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CLevelUpNotify)
  return false;
#undef DO_
}

void CLevelUpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CLevelUpNotify)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // @@protoc_insertion_point(serialize_end:CLevelUpNotify)
}

::google::protobuf::uint8* CLevelUpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CLevelUpNotify)
  // optional uint32 Level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CLevelUpNotify)
  return target;
}

size_t CLevelUpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CLevelUpNotify)
  size_t total_size = 0;

  // optional uint32 Level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CLevelUpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CLevelUpNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CLevelUpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CLevelUpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CLevelUpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CLevelUpNotify)
    UnsafeMergeFrom(*source);
  }
}

void CLevelUpNotify::MergeFrom(const CLevelUpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CLevelUpNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CLevelUpNotify::UnsafeMergeFrom(const CLevelUpNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void CLevelUpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CLevelUpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CLevelUpNotify::CopyFrom(const CLevelUpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CLevelUpNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CLevelUpNotify::IsInitialized() const {

  return true;
}

void CLevelUpNotify::Swap(CLevelUpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CLevelUpNotify::InternalSwap(CLevelUpNotify* other) {
  std::swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CLevelUpNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CLevelUpNotify_descriptor_;
  metadata.reflection = CLevelUpNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CLevelUpNotify

// optional uint32 Level = 1;
void CLevelUpNotify::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 CLevelUpNotify::level() const {
  // @@protoc_insertion_point(field_get:CLevelUpNotify.Level)
  return level_;
}
void CLevelUpNotify::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:CLevelUpNotify.Level)
}

inline const CLevelUpNotify* CLevelUpNotify::internal_default_instance() {
  return &CLevelUpNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGMCommandRequest::kCommandStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGMCommandRequest::CGMCommandRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_propertymodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGMCommandRequest)
}

void CGMCommandRequest::InitAsDefaultInstance() {
}

CGMCommandRequest::CGMCommandRequest(const CGMCommandRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGMCommandRequest)
}

void CGMCommandRequest::SharedCtor() {
  commandstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CGMCommandRequest::~CGMCommandRequest() {
  // @@protoc_insertion_point(destructor:CGMCommandRequest)
  SharedDtor();
}

void CGMCommandRequest::SharedDtor() {
  commandstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGMCommandRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGMCommandRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGMCommandRequest_descriptor_;
}

const CGMCommandRequest& CGMCommandRequest::default_instance() {
  protobuf_InitDefaults_propertymodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CGMCommandRequest> CGMCommandRequest_default_instance_;

CGMCommandRequest* CGMCommandRequest::New(::google::protobuf::Arena* arena) const {
  CGMCommandRequest* n = new CGMCommandRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGMCommandRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CGMCommandRequest)
  commandstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CGMCommandRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGMCommandRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string CommandString = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commandstring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->commandstring().data(), this->commandstring().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CGMCommandRequest.CommandString"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGMCommandRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGMCommandRequest)
  return false;
#undef DO_
}

void CGMCommandRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGMCommandRequest)
  // optional string CommandString = 1;
  if (this->commandstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commandstring().data(), this->commandstring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CGMCommandRequest.CommandString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->commandstring(), output);
  }

  // @@protoc_insertion_point(serialize_end:CGMCommandRequest)
}

::google::protobuf::uint8* CGMCommandRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGMCommandRequest)
  // optional string CommandString = 1;
  if (this->commandstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->commandstring().data(), this->commandstring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CGMCommandRequest.CommandString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->commandstring(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CGMCommandRequest)
  return target;
}

size_t CGMCommandRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGMCommandRequest)
  size_t total_size = 0;

  // optional string CommandString = 1;
  if (this->commandstring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commandstring());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGMCommandRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGMCommandRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGMCommandRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGMCommandRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGMCommandRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGMCommandRequest)
    UnsafeMergeFrom(*source);
  }
}

void CGMCommandRequest::MergeFrom(const CGMCommandRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGMCommandRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CGMCommandRequest::UnsafeMergeFrom(const CGMCommandRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.commandstring().size() > 0) {

    commandstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commandstring_);
  }
}

void CGMCommandRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGMCommandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGMCommandRequest::CopyFrom(const CGMCommandRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGMCommandRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CGMCommandRequest::IsInitialized() const {

  return true;
}

void CGMCommandRequest::Swap(CGMCommandRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGMCommandRequest::InternalSwap(CGMCommandRequest* other) {
  commandstring_.Swap(&other->commandstring_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGMCommandRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGMCommandRequest_descriptor_;
  metadata.reflection = CGMCommandRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGMCommandRequest

// optional string CommandString = 1;
void CGMCommandRequest::clear_commandstring() {
  commandstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CGMCommandRequest::commandstring() const {
  // @@protoc_insertion_point(field_get:CGMCommandRequest.CommandString)
  return commandstring_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CGMCommandRequest::set_commandstring(const ::std::string& value) {
  
  commandstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGMCommandRequest.CommandString)
}
void CGMCommandRequest::set_commandstring(const char* value) {
  
  commandstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGMCommandRequest.CommandString)
}
void CGMCommandRequest::set_commandstring(const char* value, size_t size) {
  
  commandstring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGMCommandRequest.CommandString)
}
::std::string* CGMCommandRequest::mutable_commandstring() {
  
  // @@protoc_insertion_point(field_mutable:CGMCommandRequest.CommandString)
  return commandstring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CGMCommandRequest::release_commandstring() {
  // @@protoc_insertion_point(field_release:CGMCommandRequest.CommandString)
  
  return commandstring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CGMCommandRequest::set_allocated_commandstring(::std::string* commandstring) {
  if (commandstring != NULL) {
    
  } else {
    
  }
  commandstring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commandstring);
  // @@protoc_insertion_point(field_set_allocated:CGMCommandRequest.CommandString)
}

inline const CGMCommandRequest* CGMCommandRequest::internal_default_instance() {
  return &CGMCommandRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGMCommandResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGMCommandResponse::CGMCommandResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_propertymodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGMCommandResponse)
}

void CGMCommandResponse::InitAsDefaultInstance() {
}

CGMCommandResponse::CGMCommandResponse(const CGMCommandResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGMCommandResponse)
}

void CGMCommandResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

CGMCommandResponse::~CGMCommandResponse() {
  // @@protoc_insertion_point(destructor:CGMCommandResponse)
  SharedDtor();
}

void CGMCommandResponse::SharedDtor() {
}

void CGMCommandResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGMCommandResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGMCommandResponse_descriptor_;
}

const CGMCommandResponse& CGMCommandResponse::default_instance() {
  protobuf_InitDefaults_propertymodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CGMCommandResponse> CGMCommandResponse_default_instance_;

CGMCommandResponse* CGMCommandResponse::New(::google::protobuf::Arena* arena) const {
  CGMCommandResponse* n = new CGMCommandResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGMCommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGMCommandResponse)
  result_ = 0u;
}

bool CGMCommandResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGMCommandResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGMCommandResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGMCommandResponse)
  return false;
#undef DO_
}

void CGMCommandResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGMCommandResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:CGMCommandResponse)
}

::google::protobuf::uint8* CGMCommandResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGMCommandResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CGMCommandResponse)
  return target;
}

size_t CGMCommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGMCommandResponse)
  size_t total_size = 0;

  // optional uint32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGMCommandResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGMCommandResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGMCommandResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGMCommandResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGMCommandResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGMCommandResponse)
    UnsafeMergeFrom(*source);
  }
}

void CGMCommandResponse::MergeFrom(const CGMCommandResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGMCommandResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CGMCommandResponse::UnsafeMergeFrom(const CGMCommandResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CGMCommandResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGMCommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGMCommandResponse::CopyFrom(const CGMCommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGMCommandResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CGMCommandResponse::IsInitialized() const {

  return true;
}

void CGMCommandResponse::Swap(CGMCommandResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGMCommandResponse::InternalSwap(CGMCommandResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGMCommandResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGMCommandResponse_descriptor_;
  metadata.reflection = CGMCommandResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGMCommandResponse

// optional uint32 Result = 1;
void CGMCommandResponse::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 CGMCommandResponse::result() const {
  // @@protoc_insertion_point(field_get:CGMCommandResponse.Result)
  return result_;
}
void CGMCommandResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CGMCommandResponse.Result)
}

inline const CGMCommandResponse* CGMCommandResponse::internal_default_instance() {
  return &CGMCommandResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CObtainExpNotify::kExpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CObtainExpNotify::CObtainExpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_propertymodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CObtainExpNotify)
}

void CObtainExpNotify::InitAsDefaultInstance() {
}

CObtainExpNotify::CObtainExpNotify(const CObtainExpNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CObtainExpNotify)
}

void CObtainExpNotify::SharedCtor() {
  exp_ = 0u;
  _cached_size_ = 0;
}

CObtainExpNotify::~CObtainExpNotify() {
  // @@protoc_insertion_point(destructor:CObtainExpNotify)
  SharedDtor();
}

void CObtainExpNotify::SharedDtor() {
}

void CObtainExpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CObtainExpNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CObtainExpNotify_descriptor_;
}

const CObtainExpNotify& CObtainExpNotify::default_instance() {
  protobuf_InitDefaults_propertymodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CObtainExpNotify> CObtainExpNotify_default_instance_;

CObtainExpNotify* CObtainExpNotify::New(::google::protobuf::Arena* arena) const {
  CObtainExpNotify* n = new CObtainExpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CObtainExpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CObtainExpNotify)
  exp_ = 0u;
}

bool CObtainExpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CObtainExpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Exp = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CObtainExpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CObtainExpNotify)
  return false;
#undef DO_
}

void CObtainExpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CObtainExpNotify)
  // optional uint32 Exp = 1;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->exp(), output);
  }

  // @@protoc_insertion_point(serialize_end:CObtainExpNotify)
}

::google::protobuf::uint8* CObtainExpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CObtainExpNotify)
  // optional uint32 Exp = 1;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->exp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CObtainExpNotify)
  return target;
}

size_t CObtainExpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CObtainExpNotify)
  size_t total_size = 0;

  // optional uint32 Exp = 1;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CObtainExpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CObtainExpNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CObtainExpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CObtainExpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CObtainExpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CObtainExpNotify)
    UnsafeMergeFrom(*source);
  }
}

void CObtainExpNotify::MergeFrom(const CObtainExpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CObtainExpNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CObtainExpNotify::UnsafeMergeFrom(const CObtainExpNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
}

void CObtainExpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CObtainExpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CObtainExpNotify::CopyFrom(const CObtainExpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CObtainExpNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CObtainExpNotify::IsInitialized() const {

  return true;
}

void CObtainExpNotify::Swap(CObtainExpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CObtainExpNotify::InternalSwap(CObtainExpNotify* other) {
  std::swap(exp_, other->exp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CObtainExpNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CObtainExpNotify_descriptor_;
  metadata.reflection = CObtainExpNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CObtainExpNotify

// optional uint32 Exp = 1;
void CObtainExpNotify::clear_exp() {
  exp_ = 0u;
}
::google::protobuf::uint32 CObtainExpNotify::exp() const {
  // @@protoc_insertion_point(field_get:CObtainExpNotify.Exp)
  return exp_;
}
void CObtainExpNotify::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CObtainExpNotify.Exp)
}

inline const CObtainExpNotify* CObtainExpNotify::internal_default_instance() {
  return &CObtainExpNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CObtainVIPExpNotify::CObtainVIPExpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_propertymodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CObtainVIPExpNotify)
}

void CObtainVIPExpNotify::InitAsDefaultInstance() {
}

CObtainVIPExpNotify::CObtainVIPExpNotify(const CObtainVIPExpNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CObtainVIPExpNotify)
}

void CObtainVIPExpNotify::SharedCtor() {
  _cached_size_ = 0;
}

CObtainVIPExpNotify::~CObtainVIPExpNotify() {
  // @@protoc_insertion_point(destructor:CObtainVIPExpNotify)
  SharedDtor();
}

void CObtainVIPExpNotify::SharedDtor() {
}

void CObtainVIPExpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CObtainVIPExpNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CObtainVIPExpNotify_descriptor_;
}

const CObtainVIPExpNotify& CObtainVIPExpNotify::default_instance() {
  protobuf_InitDefaults_propertymodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CObtainVIPExpNotify> CObtainVIPExpNotify_default_instance_;

CObtainVIPExpNotify* CObtainVIPExpNotify::New(::google::protobuf::Arena* arena) const {
  CObtainVIPExpNotify* n = new CObtainVIPExpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CObtainVIPExpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CObtainVIPExpNotify)
}

bool CObtainVIPExpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CObtainVIPExpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:CObtainVIPExpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CObtainVIPExpNotify)
  return false;
#undef DO_
}

void CObtainVIPExpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CObtainVIPExpNotify)
  // @@protoc_insertion_point(serialize_end:CObtainVIPExpNotify)
}

::google::protobuf::uint8* CObtainVIPExpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CObtainVIPExpNotify)
  // @@protoc_insertion_point(serialize_to_array_end:CObtainVIPExpNotify)
  return target;
}

size_t CObtainVIPExpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CObtainVIPExpNotify)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CObtainVIPExpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CObtainVIPExpNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CObtainVIPExpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CObtainVIPExpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CObtainVIPExpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CObtainVIPExpNotify)
    UnsafeMergeFrom(*source);
  }
}

void CObtainVIPExpNotify::MergeFrom(const CObtainVIPExpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CObtainVIPExpNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CObtainVIPExpNotify::UnsafeMergeFrom(const CObtainVIPExpNotify& from) {
  GOOGLE_DCHECK(&from != this);
}

void CObtainVIPExpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CObtainVIPExpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CObtainVIPExpNotify::CopyFrom(const CObtainVIPExpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CObtainVIPExpNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CObtainVIPExpNotify::IsInitialized() const {

  return true;
}

void CObtainVIPExpNotify::Swap(CObtainVIPExpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CObtainVIPExpNotify::InternalSwap(CObtainVIPExpNotify* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CObtainVIPExpNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CObtainVIPExpNotify_descriptor_;
  metadata.reflection = CObtainVIPExpNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CObtainVIPExpNotify

inline const CObtainVIPExpNotify* CObtainVIPExpNotify::internal_default_instance() {
  return &CObtainVIPExpNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CLeaveGameRequest::CLeaveGameRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_propertymodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CLeaveGameRequest)
}

void CLeaveGameRequest::InitAsDefaultInstance() {
}

CLeaveGameRequest::CLeaveGameRequest(const CLeaveGameRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CLeaveGameRequest)
}

void CLeaveGameRequest::SharedCtor() {
  _cached_size_ = 0;
}

CLeaveGameRequest::~CLeaveGameRequest() {
  // @@protoc_insertion_point(destructor:CLeaveGameRequest)
  SharedDtor();
}

void CLeaveGameRequest::SharedDtor() {
}

void CLeaveGameRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CLeaveGameRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CLeaveGameRequest_descriptor_;
}

const CLeaveGameRequest& CLeaveGameRequest::default_instance() {
  protobuf_InitDefaults_propertymodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CLeaveGameRequest> CLeaveGameRequest_default_instance_;

CLeaveGameRequest* CLeaveGameRequest::New(::google::protobuf::Arena* arena) const {
  CLeaveGameRequest* n = new CLeaveGameRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CLeaveGameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CLeaveGameRequest)
}

bool CLeaveGameRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CLeaveGameRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:CLeaveGameRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CLeaveGameRequest)
  return false;
#undef DO_
}

void CLeaveGameRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CLeaveGameRequest)
  // @@protoc_insertion_point(serialize_end:CLeaveGameRequest)
}

::google::protobuf::uint8* CLeaveGameRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CLeaveGameRequest)
  // @@protoc_insertion_point(serialize_to_array_end:CLeaveGameRequest)
  return target;
}

size_t CLeaveGameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CLeaveGameRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CLeaveGameRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CLeaveGameRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CLeaveGameRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CLeaveGameRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CLeaveGameRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CLeaveGameRequest)
    UnsafeMergeFrom(*source);
  }
}

void CLeaveGameRequest::MergeFrom(const CLeaveGameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CLeaveGameRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CLeaveGameRequest::UnsafeMergeFrom(const CLeaveGameRequest& from) {
  GOOGLE_DCHECK(&from != this);
}

void CLeaveGameRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CLeaveGameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CLeaveGameRequest::CopyFrom(const CLeaveGameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CLeaveGameRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CLeaveGameRequest::IsInitialized() const {

  return true;
}

void CLeaveGameRequest::Swap(CLeaveGameRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CLeaveGameRequest::InternalSwap(CLeaveGameRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CLeaveGameRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CLeaveGameRequest_descriptor_;
  metadata.reflection = CLeaveGameRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CLeaveGameRequest

inline const CLeaveGameRequest* CLeaveGameRequest::internal_default_instance() {
  return &CLeaveGameRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CLeaveGameResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CLeaveGameResponse::CLeaveGameResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_propertymodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CLeaveGameResponse)
}

void CLeaveGameResponse::InitAsDefaultInstance() {
}

CLeaveGameResponse::CLeaveGameResponse(const CLeaveGameResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CLeaveGameResponse)
}

void CLeaveGameResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

CLeaveGameResponse::~CLeaveGameResponse() {
  // @@protoc_insertion_point(destructor:CLeaveGameResponse)
  SharedDtor();
}

void CLeaveGameResponse::SharedDtor() {
}

void CLeaveGameResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CLeaveGameResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CLeaveGameResponse_descriptor_;
}

const CLeaveGameResponse& CLeaveGameResponse::default_instance() {
  protobuf_InitDefaults_propertymodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CLeaveGameResponse> CLeaveGameResponse_default_instance_;

CLeaveGameResponse* CLeaveGameResponse::New(::google::protobuf::Arena* arena) const {
  CLeaveGameResponse* n = new CLeaveGameResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CLeaveGameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CLeaveGameResponse)
  result_ = 0u;
}

bool CLeaveGameResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CLeaveGameResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CLeaveGameResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CLeaveGameResponse)
  return false;
#undef DO_
}

void CLeaveGameResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CLeaveGameResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:CLeaveGameResponse)
}

::google::protobuf::uint8* CLeaveGameResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CLeaveGameResponse)
  // optional uint32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CLeaveGameResponse)
  return target;
}

size_t CLeaveGameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CLeaveGameResponse)
  size_t total_size = 0;

  // optional uint32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CLeaveGameResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CLeaveGameResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CLeaveGameResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CLeaveGameResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CLeaveGameResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CLeaveGameResponse)
    UnsafeMergeFrom(*source);
  }
}

void CLeaveGameResponse::MergeFrom(const CLeaveGameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CLeaveGameResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CLeaveGameResponse::UnsafeMergeFrom(const CLeaveGameResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CLeaveGameResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CLeaveGameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CLeaveGameResponse::CopyFrom(const CLeaveGameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CLeaveGameResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CLeaveGameResponse::IsInitialized() const {

  return true;
}

void CLeaveGameResponse::Swap(CLeaveGameResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CLeaveGameResponse::InternalSwap(CLeaveGameResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CLeaveGameResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CLeaveGameResponse_descriptor_;
  metadata.reflection = CLeaveGameResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CLeaveGameResponse

// optional uint32 Result = 1;
void CLeaveGameResponse::clear_result() {
  result_ = 0u;
}
::google::protobuf::uint32 CLeaveGameResponse::result() const {
  // @@protoc_insertion_point(field_get:CLeaveGameResponse.Result)
  return result_;
}
void CLeaveGameResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:CLeaveGameResponse.Result)
}

inline const CLeaveGameResponse* CLeaveGameResponse::internal_default_instance() {
  return &CLeaveGameResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPlayerBaseInfoNotify::kRoleIDFieldNumber;
const int CPlayerBaseInfoNotify::kEntityIDFieldNumber;
const int CPlayerBaseInfoNotify::kLineIDFieldNumber;
const int CPlayerBaseInfoNotify::kMapIDFieldNumber;
const int CPlayerBaseInfoNotify::kMapIndexFieldNumber;
const int CPlayerBaseInfoNotify::kPosXFieldNumber;
const int CPlayerBaseInfoNotify::kPosYFieldNumber;
const int CPlayerBaseInfoNotify::kLevelFieldNumber;
const int CPlayerBaseInfoNotify::kExpFieldNumber;
const int CPlayerBaseInfoNotify::kVipLevelFieldNumber;
const int CPlayerBaseInfoNotify::kVipExpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPlayerBaseInfoNotify::CPlayerBaseInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_propertymodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPlayerBaseInfoNotify)
}

void CPlayerBaseInfoNotify::InitAsDefaultInstance() {
}

CPlayerBaseInfoNotify::CPlayerBaseInfoNotify(const CPlayerBaseInfoNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CPlayerBaseInfoNotify)
}

void CPlayerBaseInfoNotify::SharedCtor() {
  ::memset(&roleid_, 0, reinterpret_cast<char*>(&vipexp_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(vipexp_));
  _cached_size_ = 0;
}

CPlayerBaseInfoNotify::~CPlayerBaseInfoNotify() {
  // @@protoc_insertion_point(destructor:CPlayerBaseInfoNotify)
  SharedDtor();
}

void CPlayerBaseInfoNotify::SharedDtor() {
}

void CPlayerBaseInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPlayerBaseInfoNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPlayerBaseInfoNotify_descriptor_;
}

const CPlayerBaseInfoNotify& CPlayerBaseInfoNotify::default_instance() {
  protobuf_InitDefaults_propertymodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CPlayerBaseInfoNotify> CPlayerBaseInfoNotify_default_instance_;

CPlayerBaseInfoNotify* CPlayerBaseInfoNotify::New(::google::protobuf::Arena* arena) const {
  CPlayerBaseInfoNotify* n = new CPlayerBaseInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPlayerBaseInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CPlayerBaseInfoNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CPlayerBaseInfoNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CPlayerBaseInfoNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, level_);
  ZR_(exp_, vipexp_);

#undef ZR_HELPER_
#undef ZR_

}

bool CPlayerBaseInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPlayerBaseInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RoleID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_EntityID;
        break;
      }

      // optional uint32 EntityID = 2;
      case 2: {
        if (tag == 16) {
         parse_EntityID:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entityid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LineID;
        break;
      }

      // optional uint32 LineID = 3;
      case 3: {
        if (tag == 24) {
         parse_LineID:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lineid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_MapID;
        break;
      }

      // optional uint32 MapID = 4;
      case 4: {
        if (tag == 32) {
         parse_MapID:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_MapIndex;
        break;
      }

      // optional uint32 MapIndex = 5;
      case 5: {
        if (tag == 40) {
         parse_MapIndex:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapindex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_PosX;
        break;
      }

      // optional uint32 PosX = 6;
      case 6: {
        if (tag == 48) {
         parse_PosX:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_PosY;
        break;
      }

      // optional uint32 PosY = 7;
      case 7: {
        if (tag == 56) {
         parse_PosY:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Level;
        break;
      }

      // optional uint32 Level = 8;
      case 8: {
        if (tag == 64) {
         parse_Level:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_Exp;
        break;
      }

      // optional uint64 Exp = 9;
      case 9: {
        if (tag == 72) {
         parse_Exp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_VipLevel;
        break;
      }

      // optional uint32 VipLevel = 10;
      case 10: {
        if (tag == 80) {
         parse_VipLevel:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viplevel_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_VipExp;
        break;
      }

      // optional uint32 VipExp = 11;
      case 11: {
        if (tag == 88) {
         parse_VipExp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vipexp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPlayerBaseInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPlayerBaseInfoNotify)
  return false;
#undef DO_
}

void CPlayerBaseInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPlayerBaseInfoNotify)
  // optional uint32 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roleid(), output);
  }

  // optional uint32 EntityID = 2;
  if (this->entityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entityid(), output);
  }

  // optional uint32 LineID = 3;
  if (this->lineid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->lineid(), output);
  }

  // optional uint32 MapID = 4;
  if (this->mapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->mapid(), output);
  }

  // optional uint32 MapIndex = 5;
  if (this->mapindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->mapindex(), output);
  }

  // optional uint32 PosX = 6;
  if (this->posx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->posx(), output);
  }

  // optional uint32 PosY = 7;
  if (this->posy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->posy(), output);
  }

  // optional uint32 Level = 8;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->level(), output);
  }

  // optional uint64 Exp = 9;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->exp(), output);
  }

  // optional uint32 VipLevel = 10;
  if (this->viplevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->viplevel(), output);
  }

  // optional uint32 VipExp = 11;
  if (this->vipexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->vipexp(), output);
  }

  // @@protoc_insertion_point(serialize_end:CPlayerBaseInfoNotify)
}

::google::protobuf::uint8* CPlayerBaseInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPlayerBaseInfoNotify)
  // optional uint32 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roleid(), target);
  }

  // optional uint32 EntityID = 2;
  if (this->entityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entityid(), target);
  }

  // optional uint32 LineID = 3;
  if (this->lineid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->lineid(), target);
  }

  // optional uint32 MapID = 4;
  if (this->mapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->mapid(), target);
  }

  // optional uint32 MapIndex = 5;
  if (this->mapindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->mapindex(), target);
  }

  // optional uint32 PosX = 6;
  if (this->posx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->posx(), target);
  }

  // optional uint32 PosY = 7;
  if (this->posy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->posy(), target);
  }

  // optional uint32 Level = 8;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->level(), target);
  }

  // optional uint64 Exp = 9;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->exp(), target);
  }

  // optional uint32 VipLevel = 10;
  if (this->viplevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->viplevel(), target);
  }

  // optional uint32 VipExp = 11;
  if (this->vipexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->vipexp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CPlayerBaseInfoNotify)
  return target;
}

size_t CPlayerBaseInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPlayerBaseInfoNotify)
  size_t total_size = 0;

  // optional uint32 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roleid());
  }

  // optional uint32 EntityID = 2;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entityid());
  }

  // optional uint32 LineID = 3;
  if (this->lineid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lineid());
  }

  // optional uint32 MapID = 4;
  if (this->mapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mapid());
  }

  // optional uint32 MapIndex = 5;
  if (this->mapindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mapindex());
  }

  // optional uint32 PosX = 6;
  if (this->posx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posx());
  }

  // optional uint32 PosY = 7;
  if (this->posy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->posy());
  }

  // optional uint32 Level = 8;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional uint64 Exp = 9;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->exp());
  }

  // optional uint32 VipLevel = 10;
  if (this->viplevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->viplevel());
  }

  // optional uint32 VipExp = 11;
  if (this->vipexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vipexp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPlayerBaseInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPlayerBaseInfoNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CPlayerBaseInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPlayerBaseInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPlayerBaseInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPlayerBaseInfoNotify)
    UnsafeMergeFrom(*source);
  }
}

void CPlayerBaseInfoNotify::MergeFrom(const CPlayerBaseInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPlayerBaseInfoNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CPlayerBaseInfoNotify::UnsafeMergeFrom(const CPlayerBaseInfoNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.entityid() != 0) {
    set_entityid(from.entityid());
  }
  if (from.lineid() != 0) {
    set_lineid(from.lineid());
  }
  if (from.mapid() != 0) {
    set_mapid(from.mapid());
  }
  if (from.mapindex() != 0) {
    set_mapindex(from.mapindex());
  }
  if (from.posx() != 0) {
    set_posx(from.posx());
  }
  if (from.posy() != 0) {
    set_posy(from.posy());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.viplevel() != 0) {
    set_viplevel(from.viplevel());
  }
  if (from.vipexp() != 0) {
    set_vipexp(from.vipexp());
  }
}

void CPlayerBaseInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPlayerBaseInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPlayerBaseInfoNotify::CopyFrom(const CPlayerBaseInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPlayerBaseInfoNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CPlayerBaseInfoNotify::IsInitialized() const {

  return true;
}

void CPlayerBaseInfoNotify::Swap(CPlayerBaseInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPlayerBaseInfoNotify::InternalSwap(CPlayerBaseInfoNotify* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(entityid_, other->entityid_);
  std::swap(lineid_, other->lineid_);
  std::swap(mapid_, other->mapid_);
  std::swap(mapindex_, other->mapindex_);
  std::swap(posx_, other->posx_);
  std::swap(posy_, other->posy_);
  std::swap(level_, other->level_);
  std::swap(exp_, other->exp_);
  std::swap(viplevel_, other->viplevel_);
  std::swap(vipexp_, other->vipexp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPlayerBaseInfoNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPlayerBaseInfoNotify_descriptor_;
  metadata.reflection = CPlayerBaseInfoNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPlayerBaseInfoNotify

// optional uint32 RoleID = 1;
void CPlayerBaseInfoNotify::clear_roleid() {
  roleid_ = 0u;
}
::google::protobuf::uint32 CPlayerBaseInfoNotify::roleid() const {
  // @@protoc_insertion_point(field_get:CPlayerBaseInfoNotify.RoleID)
  return roleid_;
}
void CPlayerBaseInfoNotify::set_roleid(::google::protobuf::uint32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:CPlayerBaseInfoNotify.RoleID)
}

// optional uint32 EntityID = 2;
void CPlayerBaseInfoNotify::clear_entityid() {
  entityid_ = 0u;
}
::google::protobuf::uint32 CPlayerBaseInfoNotify::entityid() const {
  // @@protoc_insertion_point(field_get:CPlayerBaseInfoNotify.EntityID)
  return entityid_;
}
void CPlayerBaseInfoNotify::set_entityid(::google::protobuf::uint32 value) {
  
  entityid_ = value;
  // @@protoc_insertion_point(field_set:CPlayerBaseInfoNotify.EntityID)
}

// optional uint32 LineID = 3;
void CPlayerBaseInfoNotify::clear_lineid() {
  lineid_ = 0u;
}
::google::protobuf::uint32 CPlayerBaseInfoNotify::lineid() const {
  // @@protoc_insertion_point(field_get:CPlayerBaseInfoNotify.LineID)
  return lineid_;
}
void CPlayerBaseInfoNotify::set_lineid(::google::protobuf::uint32 value) {
  
  lineid_ = value;
  // @@protoc_insertion_point(field_set:CPlayerBaseInfoNotify.LineID)
}

// optional uint32 MapID = 4;
void CPlayerBaseInfoNotify::clear_mapid() {
  mapid_ = 0u;
}
::google::protobuf::uint32 CPlayerBaseInfoNotify::mapid() const {
  // @@protoc_insertion_point(field_get:CPlayerBaseInfoNotify.MapID)
  return mapid_;
}
void CPlayerBaseInfoNotify::set_mapid(::google::protobuf::uint32 value) {
  
  mapid_ = value;
  // @@protoc_insertion_point(field_set:CPlayerBaseInfoNotify.MapID)
}

// optional uint32 MapIndex = 5;
void CPlayerBaseInfoNotify::clear_mapindex() {
  mapindex_ = 0u;
}
::google::protobuf::uint32 CPlayerBaseInfoNotify::mapindex() const {
  // @@protoc_insertion_point(field_get:CPlayerBaseInfoNotify.MapIndex)
  return mapindex_;
}
void CPlayerBaseInfoNotify::set_mapindex(::google::protobuf::uint32 value) {
  
  mapindex_ = value;
  // @@protoc_insertion_point(field_set:CPlayerBaseInfoNotify.MapIndex)
}

// optional uint32 PosX = 6;
void CPlayerBaseInfoNotify::clear_posx() {
  posx_ = 0u;
}
::google::protobuf::uint32 CPlayerBaseInfoNotify::posx() const {
  // @@protoc_insertion_point(field_get:CPlayerBaseInfoNotify.PosX)
  return posx_;
}
void CPlayerBaseInfoNotify::set_posx(::google::protobuf::uint32 value) {
  
  posx_ = value;
  // @@protoc_insertion_point(field_set:CPlayerBaseInfoNotify.PosX)
}

// optional uint32 PosY = 7;
void CPlayerBaseInfoNotify::clear_posy() {
  posy_ = 0u;
}
::google::protobuf::uint32 CPlayerBaseInfoNotify::posy() const {
  // @@protoc_insertion_point(field_get:CPlayerBaseInfoNotify.PosY)
  return posy_;
}
void CPlayerBaseInfoNotify::set_posy(::google::protobuf::uint32 value) {
  
  posy_ = value;
  // @@protoc_insertion_point(field_set:CPlayerBaseInfoNotify.PosY)
}

// optional uint32 Level = 8;
void CPlayerBaseInfoNotify::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 CPlayerBaseInfoNotify::level() const {
  // @@protoc_insertion_point(field_get:CPlayerBaseInfoNotify.Level)
  return level_;
}
void CPlayerBaseInfoNotify::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:CPlayerBaseInfoNotify.Level)
}

// optional uint64 Exp = 9;
void CPlayerBaseInfoNotify::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CPlayerBaseInfoNotify::exp() const {
  // @@protoc_insertion_point(field_get:CPlayerBaseInfoNotify.Exp)
  return exp_;
}
void CPlayerBaseInfoNotify::set_exp(::google::protobuf::uint64 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:CPlayerBaseInfoNotify.Exp)
}

// optional uint32 VipLevel = 10;
void CPlayerBaseInfoNotify::clear_viplevel() {
  viplevel_ = 0u;
}
::google::protobuf::uint32 CPlayerBaseInfoNotify::viplevel() const {
  // @@protoc_insertion_point(field_get:CPlayerBaseInfoNotify.VipLevel)
  return viplevel_;
}
void CPlayerBaseInfoNotify::set_viplevel(::google::protobuf::uint32 value) {
  
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:CPlayerBaseInfoNotify.VipLevel)
}

// optional uint32 VipExp = 11;
void CPlayerBaseInfoNotify::clear_vipexp() {
  vipexp_ = 0u;
}
::google::protobuf::uint32 CPlayerBaseInfoNotify::vipexp() const {
  // @@protoc_insertion_point(field_get:CPlayerBaseInfoNotify.VipExp)
  return vipexp_;
}
void CPlayerBaseInfoNotify::set_vipexp(::google::protobuf::uint32 value) {
  
  vipexp_ = value;
  // @@protoc_insertion_point(field_set:CPlayerBaseInfoNotify.VipExp)
}

inline const CPlayerBaseInfoNotify* CPlayerBaseInfoNotify::internal_default_instance() {
  return &CPlayerBaseInfoNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPlayerItemInfoNotify::kBagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPlayerItemInfoNotify::CPlayerItemInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_propertymodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPlayerItemInfoNotify)
}

void CPlayerItemInfoNotify::InitAsDefaultInstance() {
  bag_ = const_cast< ::PBItemList*>(
      ::PBItemList::internal_default_instance());
}

CPlayerItemInfoNotify::CPlayerItemInfoNotify(const CPlayerItemInfoNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CPlayerItemInfoNotify)
}

void CPlayerItemInfoNotify::SharedCtor() {
  bag_ = NULL;
  _cached_size_ = 0;
}

CPlayerItemInfoNotify::~CPlayerItemInfoNotify() {
  // @@protoc_insertion_point(destructor:CPlayerItemInfoNotify)
  SharedDtor();
}

void CPlayerItemInfoNotify::SharedDtor() {
  if (this != &CPlayerItemInfoNotify_default_instance_.get()) {
    delete bag_;
  }
}

void CPlayerItemInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPlayerItemInfoNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPlayerItemInfoNotify_descriptor_;
}

const CPlayerItemInfoNotify& CPlayerItemInfoNotify::default_instance() {
  protobuf_InitDefaults_propertymodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CPlayerItemInfoNotify> CPlayerItemInfoNotify_default_instance_;

CPlayerItemInfoNotify* CPlayerItemInfoNotify::New(::google::protobuf::Arena* arena) const {
  CPlayerItemInfoNotify* n = new CPlayerItemInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPlayerItemInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CPlayerItemInfoNotify)
  if (GetArenaNoVirtual() == NULL && bag_ != NULL) delete bag_;
  bag_ = NULL;
}

bool CPlayerItemInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPlayerItemInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PBItemList Bag = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bag()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPlayerItemInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPlayerItemInfoNotify)
  return false;
#undef DO_
}

void CPlayerItemInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPlayerItemInfoNotify)
  // optional .PBItemList Bag = 1;
  if (this->has_bag()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bag_, output);
  }

  // @@protoc_insertion_point(serialize_end:CPlayerItemInfoNotify)
}

::google::protobuf::uint8* CPlayerItemInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPlayerItemInfoNotify)
  // optional .PBItemList Bag = 1;
  if (this->has_bag()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->bag_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CPlayerItemInfoNotify)
  return target;
}

size_t CPlayerItemInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPlayerItemInfoNotify)
  size_t total_size = 0;

  // optional .PBItemList Bag = 1;
  if (this->has_bag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bag_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPlayerItemInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPlayerItemInfoNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CPlayerItemInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPlayerItemInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPlayerItemInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPlayerItemInfoNotify)
    UnsafeMergeFrom(*source);
  }
}

void CPlayerItemInfoNotify::MergeFrom(const CPlayerItemInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPlayerItemInfoNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CPlayerItemInfoNotify::UnsafeMergeFrom(const CPlayerItemInfoNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_bag()) {
    mutable_bag()->::PBItemList::MergeFrom(from.bag());
  }
}

void CPlayerItemInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPlayerItemInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPlayerItemInfoNotify::CopyFrom(const CPlayerItemInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPlayerItemInfoNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CPlayerItemInfoNotify::IsInitialized() const {

  return true;
}

void CPlayerItemInfoNotify::Swap(CPlayerItemInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPlayerItemInfoNotify::InternalSwap(CPlayerItemInfoNotify* other) {
  std::swap(bag_, other->bag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPlayerItemInfoNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPlayerItemInfoNotify_descriptor_;
  metadata.reflection = CPlayerItemInfoNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPlayerItemInfoNotify

// optional .PBItemList Bag = 1;
bool CPlayerItemInfoNotify::has_bag() const {
  return this != internal_default_instance() && bag_ != NULL;
}
void CPlayerItemInfoNotify::clear_bag() {
  if (GetArenaNoVirtual() == NULL && bag_ != NULL) delete bag_;
  bag_ = NULL;
}
const ::PBItemList& CPlayerItemInfoNotify::bag() const {
  // @@protoc_insertion_point(field_get:CPlayerItemInfoNotify.Bag)
  return bag_ != NULL ? *bag_
                         : *::PBItemList::internal_default_instance();
}
::PBItemList* CPlayerItemInfoNotify::mutable_bag() {
  
  if (bag_ == NULL) {
    bag_ = new ::PBItemList;
  }
  // @@protoc_insertion_point(field_mutable:CPlayerItemInfoNotify.Bag)
  return bag_;
}
::PBItemList* CPlayerItemInfoNotify::release_bag() {
  // @@protoc_insertion_point(field_release:CPlayerItemInfoNotify.Bag)
  
  ::PBItemList* temp = bag_;
  bag_ = NULL;
  return temp;
}
void CPlayerItemInfoNotify::set_allocated_bag(::PBItemList* bag) {
  delete bag_;
  bag_ = bag;
  if (bag) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CPlayerItemInfoNotify.Bag)
}

inline const CPlayerItemInfoNotify* CPlayerItemInfoNotify::internal_default_instance() {
  return &CPlayerItemInfoNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CPlayerTaskInfoNotify::kTaskListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPlayerTaskInfoNotify::CPlayerTaskInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_propertymodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPlayerTaskInfoNotify)
}

void CPlayerTaskInfoNotify::InitAsDefaultInstance() {
  tasklist_ = const_cast< ::PBTaskList*>(
      ::PBTaskList::internal_default_instance());
}

CPlayerTaskInfoNotify::CPlayerTaskInfoNotify(const CPlayerTaskInfoNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CPlayerTaskInfoNotify)
}

void CPlayerTaskInfoNotify::SharedCtor() {
  tasklist_ = NULL;
  _cached_size_ = 0;
}

CPlayerTaskInfoNotify::~CPlayerTaskInfoNotify() {
  // @@protoc_insertion_point(destructor:CPlayerTaskInfoNotify)
  SharedDtor();
}

void CPlayerTaskInfoNotify::SharedDtor() {
  if (this != &CPlayerTaskInfoNotify_default_instance_.get()) {
    delete tasklist_;
  }
}

void CPlayerTaskInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPlayerTaskInfoNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPlayerTaskInfoNotify_descriptor_;
}

const CPlayerTaskInfoNotify& CPlayerTaskInfoNotify::default_instance() {
  protobuf_InitDefaults_propertymodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CPlayerTaskInfoNotify> CPlayerTaskInfoNotify_default_instance_;

CPlayerTaskInfoNotify* CPlayerTaskInfoNotify::New(::google::protobuf::Arena* arena) const {
  CPlayerTaskInfoNotify* n = new CPlayerTaskInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPlayerTaskInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CPlayerTaskInfoNotify)
  if (GetArenaNoVirtual() == NULL && tasklist_ != NULL) delete tasklist_;
  tasklist_ = NULL;
}

bool CPlayerTaskInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPlayerTaskInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PBTaskList TaskList = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tasklist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPlayerTaskInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPlayerTaskInfoNotify)
  return false;
#undef DO_
}

void CPlayerTaskInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPlayerTaskInfoNotify)
  // optional .PBTaskList TaskList = 1;
  if (this->has_tasklist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->tasklist_, output);
  }

  // @@protoc_insertion_point(serialize_end:CPlayerTaskInfoNotify)
}

::google::protobuf::uint8* CPlayerTaskInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPlayerTaskInfoNotify)
  // optional .PBTaskList TaskList = 1;
  if (this->has_tasklist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->tasklist_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CPlayerTaskInfoNotify)
  return target;
}

size_t CPlayerTaskInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPlayerTaskInfoNotify)
  size_t total_size = 0;

  // optional .PBTaskList TaskList = 1;
  if (this->has_tasklist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tasklist_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPlayerTaskInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPlayerTaskInfoNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CPlayerTaskInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPlayerTaskInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPlayerTaskInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPlayerTaskInfoNotify)
    UnsafeMergeFrom(*source);
  }
}

void CPlayerTaskInfoNotify::MergeFrom(const CPlayerTaskInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPlayerTaskInfoNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CPlayerTaskInfoNotify::UnsafeMergeFrom(const CPlayerTaskInfoNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_tasklist()) {
    mutable_tasklist()->::PBTaskList::MergeFrom(from.tasklist());
  }
}

void CPlayerTaskInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPlayerTaskInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPlayerTaskInfoNotify::CopyFrom(const CPlayerTaskInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPlayerTaskInfoNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CPlayerTaskInfoNotify::IsInitialized() const {

  return true;
}

void CPlayerTaskInfoNotify::Swap(CPlayerTaskInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPlayerTaskInfoNotify::InternalSwap(CPlayerTaskInfoNotify* other) {
  std::swap(tasklist_, other->tasklist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPlayerTaskInfoNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPlayerTaskInfoNotify_descriptor_;
  metadata.reflection = CPlayerTaskInfoNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPlayerTaskInfoNotify

// optional .PBTaskList TaskList = 1;
bool CPlayerTaskInfoNotify::has_tasklist() const {
  return this != internal_default_instance() && tasklist_ != NULL;
}
void CPlayerTaskInfoNotify::clear_tasklist() {
  if (GetArenaNoVirtual() == NULL && tasklist_ != NULL) delete tasklist_;
  tasklist_ = NULL;
}
const ::PBTaskList& CPlayerTaskInfoNotify::tasklist() const {
  // @@protoc_insertion_point(field_get:CPlayerTaskInfoNotify.TaskList)
  return tasklist_ != NULL ? *tasklist_
                         : *::PBTaskList::internal_default_instance();
}
::PBTaskList* CPlayerTaskInfoNotify::mutable_tasklist() {
  
  if (tasklist_ == NULL) {
    tasklist_ = new ::PBTaskList;
  }
  // @@protoc_insertion_point(field_mutable:CPlayerTaskInfoNotify.TaskList)
  return tasklist_;
}
::PBTaskList* CPlayerTaskInfoNotify::release_tasklist() {
  // @@protoc_insertion_point(field_release:CPlayerTaskInfoNotify.TaskList)
  
  ::PBTaskList* temp = tasklist_;
  tasklist_ = NULL;
  return temp;
}
void CPlayerTaskInfoNotify::set_allocated_tasklist(::PBTaskList* tasklist) {
  delete tasklist_;
  tasklist_ = tasklist;
  if (tasklist) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:CPlayerTaskInfoNotify.TaskList)
}

inline const CPlayerTaskInfoNotify* CPlayerTaskInfoNotify::internal_default_instance() {
  return &CPlayerTaskInfoNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CPlayerSkillInfoNotify::CPlayerSkillInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_propertymodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPlayerSkillInfoNotify)
}

void CPlayerSkillInfoNotify::InitAsDefaultInstance() {
}

CPlayerSkillInfoNotify::CPlayerSkillInfoNotify(const CPlayerSkillInfoNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CPlayerSkillInfoNotify)
}

void CPlayerSkillInfoNotify::SharedCtor() {
  _cached_size_ = 0;
}

CPlayerSkillInfoNotify::~CPlayerSkillInfoNotify() {
  // @@protoc_insertion_point(destructor:CPlayerSkillInfoNotify)
  SharedDtor();
}

void CPlayerSkillInfoNotify::SharedDtor() {
}

void CPlayerSkillInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CPlayerSkillInfoNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CPlayerSkillInfoNotify_descriptor_;
}

const CPlayerSkillInfoNotify& CPlayerSkillInfoNotify::default_instance() {
  protobuf_InitDefaults_propertymodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CPlayerSkillInfoNotify> CPlayerSkillInfoNotify_default_instance_;

CPlayerSkillInfoNotify* CPlayerSkillInfoNotify::New(::google::protobuf::Arena* arena) const {
  CPlayerSkillInfoNotify* n = new CPlayerSkillInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CPlayerSkillInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CPlayerSkillInfoNotify)
}

bool CPlayerSkillInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPlayerSkillInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:CPlayerSkillInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPlayerSkillInfoNotify)
  return false;
#undef DO_
}

void CPlayerSkillInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPlayerSkillInfoNotify)
  // @@protoc_insertion_point(serialize_end:CPlayerSkillInfoNotify)
}

::google::protobuf::uint8* CPlayerSkillInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPlayerSkillInfoNotify)
  // @@protoc_insertion_point(serialize_to_array_end:CPlayerSkillInfoNotify)
  return target;
}

size_t CPlayerSkillInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPlayerSkillInfoNotify)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CPlayerSkillInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPlayerSkillInfoNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CPlayerSkillInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CPlayerSkillInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPlayerSkillInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPlayerSkillInfoNotify)
    UnsafeMergeFrom(*source);
  }
}

void CPlayerSkillInfoNotify::MergeFrom(const CPlayerSkillInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPlayerSkillInfoNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CPlayerSkillInfoNotify::UnsafeMergeFrom(const CPlayerSkillInfoNotify& from) {
  GOOGLE_DCHECK(&from != this);
}

void CPlayerSkillInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPlayerSkillInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPlayerSkillInfoNotify::CopyFrom(const CPlayerSkillInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPlayerSkillInfoNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CPlayerSkillInfoNotify::IsInitialized() const {

  return true;
}

void CPlayerSkillInfoNotify::Swap(CPlayerSkillInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CPlayerSkillInfoNotify::InternalSwap(CPlayerSkillInfoNotify* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CPlayerSkillInfoNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CPlayerSkillInfoNotify_descriptor_;
  metadata.reflection = CPlayerSkillInfoNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CPlayerSkillInfoNotify

inline const CPlayerSkillInfoNotify* CPlayerSkillInfoNotify::internal_default_instance() {
  return &CPlayerSkillInfoNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGetPlayerPropertyRequest::CGetPlayerPropertyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_propertymodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGetPlayerPropertyRequest)
}

void CGetPlayerPropertyRequest::InitAsDefaultInstance() {
}

CGetPlayerPropertyRequest::CGetPlayerPropertyRequest(const CGetPlayerPropertyRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGetPlayerPropertyRequest)
}

void CGetPlayerPropertyRequest::SharedCtor() {
  _cached_size_ = 0;
}

CGetPlayerPropertyRequest::~CGetPlayerPropertyRequest() {
  // @@protoc_insertion_point(destructor:CGetPlayerPropertyRequest)
  SharedDtor();
}

void CGetPlayerPropertyRequest::SharedDtor() {
}

void CGetPlayerPropertyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGetPlayerPropertyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGetPlayerPropertyRequest_descriptor_;
}

const CGetPlayerPropertyRequest& CGetPlayerPropertyRequest::default_instance() {
  protobuf_InitDefaults_propertymodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CGetPlayerPropertyRequest> CGetPlayerPropertyRequest_default_instance_;

CGetPlayerPropertyRequest* CGetPlayerPropertyRequest::New(::google::protobuf::Arena* arena) const {
  CGetPlayerPropertyRequest* n = new CGetPlayerPropertyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGetPlayerPropertyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CGetPlayerPropertyRequest)
}

bool CGetPlayerPropertyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGetPlayerPropertyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:CGetPlayerPropertyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGetPlayerPropertyRequest)
  return false;
#undef DO_
}

void CGetPlayerPropertyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGetPlayerPropertyRequest)
  // @@protoc_insertion_point(serialize_end:CGetPlayerPropertyRequest)
}

::google::protobuf::uint8* CGetPlayerPropertyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGetPlayerPropertyRequest)
  // @@protoc_insertion_point(serialize_to_array_end:CGetPlayerPropertyRequest)
  return target;
}

size_t CGetPlayerPropertyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGetPlayerPropertyRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGetPlayerPropertyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGetPlayerPropertyRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGetPlayerPropertyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGetPlayerPropertyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGetPlayerPropertyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGetPlayerPropertyRequest)
    UnsafeMergeFrom(*source);
  }
}

void CGetPlayerPropertyRequest::MergeFrom(const CGetPlayerPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGetPlayerPropertyRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CGetPlayerPropertyRequest::UnsafeMergeFrom(const CGetPlayerPropertyRequest& from) {
  GOOGLE_DCHECK(&from != this);
}

void CGetPlayerPropertyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGetPlayerPropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGetPlayerPropertyRequest::CopyFrom(const CGetPlayerPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGetPlayerPropertyRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CGetPlayerPropertyRequest::IsInitialized() const {

  return true;
}

void CGetPlayerPropertyRequest::Swap(CGetPlayerPropertyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGetPlayerPropertyRequest::InternalSwap(CGetPlayerPropertyRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGetPlayerPropertyRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGetPlayerPropertyRequest_descriptor_;
  metadata.reflection = CGetPlayerPropertyRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGetPlayerPropertyRequest

inline const CGetPlayerPropertyRequest* CGetPlayerPropertyRequest::internal_default_instance() {
  return &CGetPlayerPropertyRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGetPlayerPropertyResponse::kPropertyValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGetPlayerPropertyResponse::CGetPlayerPropertyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_propertymodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGetPlayerPropertyResponse)
}

void CGetPlayerPropertyResponse::InitAsDefaultInstance() {
}

CGetPlayerPropertyResponse::CGetPlayerPropertyResponse(const CGetPlayerPropertyResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CGetPlayerPropertyResponse)
}

void CGetPlayerPropertyResponse::SharedCtor() {
  _cached_size_ = 0;
}

CGetPlayerPropertyResponse::~CGetPlayerPropertyResponse() {
  // @@protoc_insertion_point(destructor:CGetPlayerPropertyResponse)
  SharedDtor();
}

void CGetPlayerPropertyResponse::SharedDtor() {
}

void CGetPlayerPropertyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGetPlayerPropertyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGetPlayerPropertyResponse_descriptor_;
}

const CGetPlayerPropertyResponse& CGetPlayerPropertyResponse::default_instance() {
  protobuf_InitDefaults_propertymodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CGetPlayerPropertyResponse> CGetPlayerPropertyResponse_default_instance_;

CGetPlayerPropertyResponse* CGetPlayerPropertyResponse::New(::google::protobuf::Arena* arena) const {
  CGetPlayerPropertyResponse* n = new CGetPlayerPropertyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGetPlayerPropertyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGetPlayerPropertyResponse)
  propertyvalue_.Clear();
}

bool CGetPlayerPropertyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGetPlayerPropertyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 PropertyValue = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_propertyvalue())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_propertyvalue())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGetPlayerPropertyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGetPlayerPropertyResponse)
  return false;
#undef DO_
}

void CGetPlayerPropertyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGetPlayerPropertyResponse)
  // repeated uint32 PropertyValue = 1;
  if (this->propertyvalue_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_propertyvalue_cached_byte_size_);
  }
  for (int i = 0; i < this->propertyvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->propertyvalue(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CGetPlayerPropertyResponse)
}

::google::protobuf::uint8* CGetPlayerPropertyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGetPlayerPropertyResponse)
  // repeated uint32 PropertyValue = 1;
  if (this->propertyvalue_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _propertyvalue_cached_byte_size_, target);
  }
  for (int i = 0; i < this->propertyvalue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->propertyvalue(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CGetPlayerPropertyResponse)
  return target;
}

size_t CGetPlayerPropertyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGetPlayerPropertyResponse)
  size_t total_size = 0;

  // repeated uint32 PropertyValue = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->propertyvalue_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->propertyvalue(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _propertyvalue_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGetPlayerPropertyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGetPlayerPropertyResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGetPlayerPropertyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGetPlayerPropertyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGetPlayerPropertyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGetPlayerPropertyResponse)
    UnsafeMergeFrom(*source);
  }
}

void CGetPlayerPropertyResponse::MergeFrom(const CGetPlayerPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGetPlayerPropertyResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CGetPlayerPropertyResponse::UnsafeMergeFrom(const CGetPlayerPropertyResponse& from) {
  GOOGLE_DCHECK(&from != this);
  propertyvalue_.UnsafeMergeFrom(from.propertyvalue_);
}

void CGetPlayerPropertyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGetPlayerPropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGetPlayerPropertyResponse::CopyFrom(const CGetPlayerPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGetPlayerPropertyResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CGetPlayerPropertyResponse::IsInitialized() const {

  return true;
}

void CGetPlayerPropertyResponse::Swap(CGetPlayerPropertyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGetPlayerPropertyResponse::InternalSwap(CGetPlayerPropertyResponse* other) {
  propertyvalue_.UnsafeArenaSwap(&other->propertyvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGetPlayerPropertyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGetPlayerPropertyResponse_descriptor_;
  metadata.reflection = CGetPlayerPropertyResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGetPlayerPropertyResponse

// repeated uint32 PropertyValue = 1;
int CGetPlayerPropertyResponse::propertyvalue_size() const {
  return propertyvalue_.size();
}
void CGetPlayerPropertyResponse::clear_propertyvalue() {
  propertyvalue_.Clear();
}
::google::protobuf::uint32 CGetPlayerPropertyResponse::propertyvalue(int index) const {
  // @@protoc_insertion_point(field_get:CGetPlayerPropertyResponse.PropertyValue)
  return propertyvalue_.Get(index);
}
void CGetPlayerPropertyResponse::set_propertyvalue(int index, ::google::protobuf::uint32 value) {
  propertyvalue_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGetPlayerPropertyResponse.PropertyValue)
}
void CGetPlayerPropertyResponse::add_propertyvalue(::google::protobuf::uint32 value) {
  propertyvalue_.Add(value);
  // @@protoc_insertion_point(field_add:CGetPlayerPropertyResponse.PropertyValue)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CGetPlayerPropertyResponse::propertyvalue() const {
  // @@protoc_insertion_point(field_list:CGetPlayerPropertyResponse.PropertyValue)
  return propertyvalue_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CGetPlayerPropertyResponse::mutable_propertyvalue() {
  // @@protoc_insertion_point(field_mutable_list:CGetPlayerPropertyResponse.PropertyValue)
  return &propertyvalue_;
}

inline const CGetPlayerPropertyResponse* CGetPlayerPropertyResponse::internal_default_instance() {
  return &CGetPlayerPropertyResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
