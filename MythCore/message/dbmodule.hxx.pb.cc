// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dbmodule.hxx

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dbmodule.hxx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PBSavePlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBSavePlayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBGlobalMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBGlobalMail_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBGameEventParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBGameEventParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBGameEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBGameEvent_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dbmodule_2ehxx() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_dbmodule_2ehxx() {
  protobuf_AddDesc_dbmodule_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dbmodule.hxx");
  GOOGLE_CHECK(file != NULL);
  PBSavePlayer_descriptor_ = file->message_type(0);
  static const int PBSavePlayer_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSavePlayer, bag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSavePlayer, equip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSavePlayer, task_),
  };
  PBSavePlayer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBSavePlayer_descriptor_,
      PBSavePlayer::internal_default_instance(),
      PBSavePlayer_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBSavePlayer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSavePlayer, _internal_metadata_));
  PBGlobalMail_descriptor_ = file->message_type(1);
  static const int PBGlobalMail_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGlobalMail, mail_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGlobalMail, mail_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGlobalMail, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGlobalMail, mail_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGlobalMail, mail_body_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGlobalMail, mail_item_),
  };
  PBGlobalMail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBGlobalMail_descriptor_,
      PBGlobalMail::internal_default_instance(),
      PBGlobalMail_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBGlobalMail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGlobalMail, _internal_metadata_));
  PBGameEventParam_descriptor_ = file->message_type(2);
  static const int PBGameEventParam_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGameEventParam, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGameEventParam, strparam_),
  };
  PBGameEventParam_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBGameEventParam_descriptor_,
      PBGameEventParam::internal_default_instance(),
      PBGameEventParam_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBGameEventParam),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGameEventParam, _internal_metadata_));
  PBGameEvent_descriptor_ = file->message_type(3);
  static const int PBGameEvent_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGameEvent, event_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGameEvent, event_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGameEvent, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGameEvent, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGameEvent, event_param_),
  };
  PBGameEvent_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBGameEvent_descriptor_,
      PBGameEvent::internal_default_instance(),
      PBGameEvent_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBGameEvent),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBGameEvent, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dbmodule_2ehxx);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBSavePlayer_descriptor_, PBSavePlayer::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBGlobalMail_descriptor_, PBGlobalMail::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBGameEventParam_descriptor_, PBGameEventParam::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBGameEvent_descriptor_, PBGameEvent::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dbmodule_2ehxx() {
  PBSavePlayer_default_instance_.Shutdown();
  delete PBSavePlayer_reflection_;
  PBGlobalMail_default_instance_.Shutdown();
  delete PBGlobalMail_reflection_;
  PBGameEventParam_default_instance_.Shutdown();
  delete PBGameEventParam_reflection_;
  PBGameEvent_default_instance_.Shutdown();
  delete PBGameEvent_reflection_;
}

void protobuf_InitDefaults_dbmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_common_2ehxx();
  PBSavePlayer_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PBGlobalMail_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PBGameEventParam_default_instance_.DefaultConstruct();
  PBGameEvent_default_instance_.DefaultConstruct();
  PBSavePlayer_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBGlobalMail_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBGameEventParam_default_instance_.get_mutable()->InitAsDefaultInstance();
  PBGameEvent_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_dbmodule_2ehxx_once_);
void protobuf_InitDefaults_dbmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_dbmodule_2ehxx_once_,
                 &protobuf_InitDefaults_dbmodule_2ehxx_impl);
}
void protobuf_AddDesc_dbmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_dbmodule_2ehxx();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014dbmodule.hxx\032\ncommon.hxx\"_\n\014PBSavePlay"
    "er\022\030\n\003bag\030\001 \001(\0132\013.PBItemList\022\032\n\005equip\030\002 "
    "\001(\0132\013.PBItemList\022\031\n\004task\030\003 \001(\0132\013.PBTaskL"
    "ist\"\222\001\n\014PBGlobalMail\022\017\n\007mail_id\030\001 \001(\r\022\021\n"
    "\tmail_type\030\002 \001(\r\022\023\n\013create_time\030\003 \001(\r\022\022\n"
    "\nmail_title\030\004 \001(\t\022\021\n\tmail_body\030\005 \001(\t\022\"\n\t"
    "mail_item\030\006 \001(\0132\017.PBMailItemList\"3\n\020PBGa"
    "meEventParam\022\r\n\005Param\030\001 \003(\r\022\020\n\010StrParam\030"
    "\002 \003(\t\"\201\001\n\013PBGameEvent\022\020\n\010event_id\030\001 \001(\r\022"
    "\022\n\nevent_type\030\002 \001(\r\022\017\n\007role_id\030\003 \001(\r\022\023\n\013"
    "create_time\030\004 \001(\r\022&\n\013event_param\030\005 \001(\0132\021"
    ".PBGameEventParamb\006proto3", 465);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dbmodule.hxx", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_common_2ehxx();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dbmodule_2ehxx);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_dbmodule_2ehxx_once_);
void protobuf_AddDesc_dbmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_dbmodule_2ehxx_once_,
                 &protobuf_AddDesc_dbmodule_2ehxx_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dbmodule_2ehxx {
  StaticDescriptorInitializer_dbmodule_2ehxx() {
    protobuf_AddDesc_dbmodule_2ehxx();
  }
} static_descriptor_initializer_dbmodule_2ehxx_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBSavePlayer::kBagFieldNumber;
const int PBSavePlayer::kEquipFieldNumber;
const int PBSavePlayer::kTaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBSavePlayer::PBSavePlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_dbmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBSavePlayer)
}

void PBSavePlayer::InitAsDefaultInstance() {
  bag_ = const_cast< ::PBItemList*>(
      ::PBItemList::internal_default_instance());
  equip_ = const_cast< ::PBItemList*>(
      ::PBItemList::internal_default_instance());
  task_ = const_cast< ::PBTaskList*>(
      ::PBTaskList::internal_default_instance());
}

PBSavePlayer::PBSavePlayer(const PBSavePlayer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBSavePlayer)
}

void PBSavePlayer::SharedCtor() {
  bag_ = NULL;
  equip_ = NULL;
  task_ = NULL;
  _cached_size_ = 0;
}

PBSavePlayer::~PBSavePlayer() {
  // @@protoc_insertion_point(destructor:PBSavePlayer)
  SharedDtor();
}

void PBSavePlayer::SharedDtor() {
  if (this != &PBSavePlayer_default_instance_.get()) {
    delete bag_;
    delete equip_;
    delete task_;
  }
}

void PBSavePlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBSavePlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBSavePlayer_descriptor_;
}

const PBSavePlayer& PBSavePlayer::default_instance() {
  protobuf_InitDefaults_dbmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBSavePlayer> PBSavePlayer_default_instance_;

PBSavePlayer* PBSavePlayer::New(::google::protobuf::Arena* arena) const {
  PBSavePlayer* n = new PBSavePlayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBSavePlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:PBSavePlayer)
  if (GetArenaNoVirtual() == NULL && bag_ != NULL) delete bag_;
  bag_ = NULL;
  if (GetArenaNoVirtual() == NULL && equip_ != NULL) delete equip_;
  equip_ = NULL;
  if (GetArenaNoVirtual() == NULL && task_ != NULL) delete task_;
  task_ = NULL;
}

bool PBSavePlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBSavePlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PBItemList bag = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bag()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_equip;
        break;
      }

      // optional .PBItemList equip = 2;
      case 2: {
        if (tag == 18) {
         parse_equip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equip()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_task;
        break;
      }

      // optional .PBTaskList task = 3;
      case 3: {
        if (tag == 26) {
         parse_task:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_task()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBSavePlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBSavePlayer)
  return false;
#undef DO_
}

void PBSavePlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBSavePlayer)
  // optional .PBItemList bag = 1;
  if (this->has_bag()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bag_, output);
  }

  // optional .PBItemList equip = 2;
  if (this->has_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->equip_, output);
  }

  // optional .PBTaskList task = 3;
  if (this->has_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->task_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBSavePlayer)
}

::google::protobuf::uint8* PBSavePlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBSavePlayer)
  // optional .PBItemList bag = 1;
  if (this->has_bag()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->bag_, false, target);
  }

  // optional .PBItemList equip = 2;
  if (this->has_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->equip_, false, target);
  }

  // optional .PBTaskList task = 3;
  if (this->has_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->task_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBSavePlayer)
  return target;
}

size_t PBSavePlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBSavePlayer)
  size_t total_size = 0;

  // optional .PBItemList bag = 1;
  if (this->has_bag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bag_);
  }

  // optional .PBItemList equip = 2;
  if (this->has_equip()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->equip_);
  }

  // optional .PBTaskList task = 3;
  if (this->has_task()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->task_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBSavePlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBSavePlayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBSavePlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBSavePlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBSavePlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBSavePlayer)
    UnsafeMergeFrom(*source);
  }
}

void PBSavePlayer::MergeFrom(const PBSavePlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBSavePlayer)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBSavePlayer::UnsafeMergeFrom(const PBSavePlayer& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_bag()) {
    mutable_bag()->::PBItemList::MergeFrom(from.bag());
  }
  if (from.has_equip()) {
    mutable_equip()->::PBItemList::MergeFrom(from.equip());
  }
  if (from.has_task()) {
    mutable_task()->::PBTaskList::MergeFrom(from.task());
  }
}

void PBSavePlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBSavePlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBSavePlayer::CopyFrom(const PBSavePlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBSavePlayer)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBSavePlayer::IsInitialized() const {

  return true;
}

void PBSavePlayer::Swap(PBSavePlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBSavePlayer::InternalSwap(PBSavePlayer* other) {
  std::swap(bag_, other->bag_);
  std::swap(equip_, other->equip_);
  std::swap(task_, other->task_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBSavePlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBSavePlayer_descriptor_;
  metadata.reflection = PBSavePlayer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBSavePlayer

// optional .PBItemList bag = 1;
bool PBSavePlayer::has_bag() const {
  return this != internal_default_instance() && bag_ != NULL;
}
void PBSavePlayer::clear_bag() {
  if (GetArenaNoVirtual() == NULL && bag_ != NULL) delete bag_;
  bag_ = NULL;
}
const ::PBItemList& PBSavePlayer::bag() const {
  // @@protoc_insertion_point(field_get:PBSavePlayer.bag)
  return bag_ != NULL ? *bag_
                         : *::PBItemList::internal_default_instance();
}
::PBItemList* PBSavePlayer::mutable_bag() {
  
  if (bag_ == NULL) {
    bag_ = new ::PBItemList;
  }
  // @@protoc_insertion_point(field_mutable:PBSavePlayer.bag)
  return bag_;
}
::PBItemList* PBSavePlayer::release_bag() {
  // @@protoc_insertion_point(field_release:PBSavePlayer.bag)
  
  ::PBItemList* temp = bag_;
  bag_ = NULL;
  return temp;
}
void PBSavePlayer::set_allocated_bag(::PBItemList* bag) {
  delete bag_;
  bag_ = bag;
  if (bag) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBSavePlayer.bag)
}

// optional .PBItemList equip = 2;
bool PBSavePlayer::has_equip() const {
  return this != internal_default_instance() && equip_ != NULL;
}
void PBSavePlayer::clear_equip() {
  if (GetArenaNoVirtual() == NULL && equip_ != NULL) delete equip_;
  equip_ = NULL;
}
const ::PBItemList& PBSavePlayer::equip() const {
  // @@protoc_insertion_point(field_get:PBSavePlayer.equip)
  return equip_ != NULL ? *equip_
                         : *::PBItemList::internal_default_instance();
}
::PBItemList* PBSavePlayer::mutable_equip() {
  
  if (equip_ == NULL) {
    equip_ = new ::PBItemList;
  }
  // @@protoc_insertion_point(field_mutable:PBSavePlayer.equip)
  return equip_;
}
::PBItemList* PBSavePlayer::release_equip() {
  // @@protoc_insertion_point(field_release:PBSavePlayer.equip)
  
  ::PBItemList* temp = equip_;
  equip_ = NULL;
  return temp;
}
void PBSavePlayer::set_allocated_equip(::PBItemList* equip) {
  delete equip_;
  equip_ = equip;
  if (equip) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBSavePlayer.equip)
}

// optional .PBTaskList task = 3;
bool PBSavePlayer::has_task() const {
  return this != internal_default_instance() && task_ != NULL;
}
void PBSavePlayer::clear_task() {
  if (GetArenaNoVirtual() == NULL && task_ != NULL) delete task_;
  task_ = NULL;
}
const ::PBTaskList& PBSavePlayer::task() const {
  // @@protoc_insertion_point(field_get:PBSavePlayer.task)
  return task_ != NULL ? *task_
                         : *::PBTaskList::internal_default_instance();
}
::PBTaskList* PBSavePlayer::mutable_task() {
  
  if (task_ == NULL) {
    task_ = new ::PBTaskList;
  }
  // @@protoc_insertion_point(field_mutable:PBSavePlayer.task)
  return task_;
}
::PBTaskList* PBSavePlayer::release_task() {
  // @@protoc_insertion_point(field_release:PBSavePlayer.task)
  
  ::PBTaskList* temp = task_;
  task_ = NULL;
  return temp;
}
void PBSavePlayer::set_allocated_task(::PBTaskList* task) {
  delete task_;
  task_ = task;
  if (task) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBSavePlayer.task)
}

inline const PBSavePlayer* PBSavePlayer::internal_default_instance() {
  return &PBSavePlayer_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBGlobalMail::kMailIdFieldNumber;
const int PBGlobalMail::kMailTypeFieldNumber;
const int PBGlobalMail::kCreateTimeFieldNumber;
const int PBGlobalMail::kMailTitleFieldNumber;
const int PBGlobalMail::kMailBodyFieldNumber;
const int PBGlobalMail::kMailItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBGlobalMail::PBGlobalMail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_dbmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBGlobalMail)
}

void PBGlobalMail::InitAsDefaultInstance() {
  mail_item_ = const_cast< ::PBMailItemList*>(
      ::PBMailItemList::internal_default_instance());
}

PBGlobalMail::PBGlobalMail(const PBGlobalMail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBGlobalMail)
}

void PBGlobalMail::SharedCtor() {
  mail_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_item_ = NULL;
  ::memset(&mail_id_, 0, reinterpret_cast<char*>(&create_time_) -
    reinterpret_cast<char*>(&mail_id_) + sizeof(create_time_));
  _cached_size_ = 0;
}

PBGlobalMail::~PBGlobalMail() {
  // @@protoc_insertion_point(destructor:PBGlobalMail)
  SharedDtor();
}

void PBGlobalMail::SharedDtor() {
  mail_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &PBGlobalMail_default_instance_.get()) {
    delete mail_item_;
  }
}

void PBGlobalMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGlobalMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBGlobalMail_descriptor_;
}

const PBGlobalMail& PBGlobalMail::default_instance() {
  protobuf_InitDefaults_dbmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBGlobalMail> PBGlobalMail_default_instance_;

PBGlobalMail* PBGlobalMail::New(::google::protobuf::Arena* arena) const {
  PBGlobalMail* n = new PBGlobalMail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBGlobalMail::Clear() {
// @@protoc_insertion_point(message_clear_start:PBGlobalMail)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBGlobalMail, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBGlobalMail*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mail_id_, create_time_);
  mail_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mail_body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && mail_item_ != NULL) delete mail_item_;
  mail_item_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool PBGlobalMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBGlobalMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 mail_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mail_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mail_type;
        break;
      }

      // optional uint32 mail_type = 2;
      case 2: {
        if (tag == 16) {
         parse_mail_type:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mail_type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_create_time;
        break;
      }

      // optional uint32 create_time = 3;
      case 3: {
        if (tag == 24) {
         parse_create_time:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_mail_title;
        break;
      }

      // optional string mail_title = 4;
      case 4: {
        if (tag == 34) {
         parse_mail_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mail_title().data(), this->mail_title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBGlobalMail.mail_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_mail_body;
        break;
      }

      // optional string mail_body = 5;
      case 5: {
        if (tag == 42) {
         parse_mail_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mail_body()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mail_body().data(), this->mail_body().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBGlobalMail.mail_body"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_mail_item;
        break;
      }

      // optional .PBMailItemList mail_item = 6;
      case 6: {
        if (tag == 50) {
         parse_mail_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mail_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBGlobalMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBGlobalMail)
  return false;
#undef DO_
}

void PBGlobalMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBGlobalMail)
  // optional uint32 mail_id = 1;
  if (this->mail_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mail_id(), output);
  }

  // optional uint32 mail_type = 2;
  if (this->mail_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mail_type(), output);
  }

  // optional uint32 create_time = 3;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->create_time(), output);
  }

  // optional string mail_title = 4;
  if (this->mail_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mail_title().data(), this->mail_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBGlobalMail.mail_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mail_title(), output);
  }

  // optional string mail_body = 5;
  if (this->mail_body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mail_body().data(), this->mail_body().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBGlobalMail.mail_body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mail_body(), output);
  }

  // optional .PBMailItemList mail_item = 6;
  if (this->has_mail_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->mail_item_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBGlobalMail)
}

::google::protobuf::uint8* PBGlobalMail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBGlobalMail)
  // optional uint32 mail_id = 1;
  if (this->mail_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mail_id(), target);
  }

  // optional uint32 mail_type = 2;
  if (this->mail_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mail_type(), target);
  }

  // optional uint32 create_time = 3;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->create_time(), target);
  }

  // optional string mail_title = 4;
  if (this->mail_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mail_title().data(), this->mail_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBGlobalMail.mail_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mail_title(), target);
  }

  // optional string mail_body = 5;
  if (this->mail_body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mail_body().data(), this->mail_body().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBGlobalMail.mail_body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mail_body(), target);
  }

  // optional .PBMailItemList mail_item = 6;
  if (this->has_mail_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->mail_item_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBGlobalMail)
  return target;
}

size_t PBGlobalMail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBGlobalMail)
  size_t total_size = 0;

  // optional uint32 mail_id = 1;
  if (this->mail_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mail_id());
  }

  // optional uint32 mail_type = 2;
  if (this->mail_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mail_type());
  }

  // optional uint32 create_time = 3;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->create_time());
  }

  // optional string mail_title = 4;
  if (this->mail_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mail_title());
  }

  // optional string mail_body = 5;
  if (this->mail_body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mail_body());
  }

  // optional .PBMailItemList mail_item = 6;
  if (this->has_mail_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mail_item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGlobalMail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBGlobalMail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBGlobalMail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBGlobalMail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBGlobalMail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBGlobalMail)
    UnsafeMergeFrom(*source);
  }
}

void PBGlobalMail::MergeFrom(const PBGlobalMail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBGlobalMail)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBGlobalMail::UnsafeMergeFrom(const PBGlobalMail& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.mail_id() != 0) {
    set_mail_id(from.mail_id());
  }
  if (from.mail_type() != 0) {
    set_mail_type(from.mail_type());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.mail_title().size() > 0) {

    mail_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_title_);
  }
  if (from.mail_body().size() > 0) {

    mail_body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mail_body_);
  }
  if (from.has_mail_item()) {
    mutable_mail_item()->::PBMailItemList::MergeFrom(from.mail_item());
  }
}

void PBGlobalMail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBGlobalMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGlobalMail::CopyFrom(const PBGlobalMail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBGlobalMail)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBGlobalMail::IsInitialized() const {

  return true;
}

void PBGlobalMail::Swap(PBGlobalMail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBGlobalMail::InternalSwap(PBGlobalMail* other) {
  std::swap(mail_id_, other->mail_id_);
  std::swap(mail_type_, other->mail_type_);
  std::swap(create_time_, other->create_time_);
  mail_title_.Swap(&other->mail_title_);
  mail_body_.Swap(&other->mail_body_);
  std::swap(mail_item_, other->mail_item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBGlobalMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBGlobalMail_descriptor_;
  metadata.reflection = PBGlobalMail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBGlobalMail

// optional uint32 mail_id = 1;
void PBGlobalMail::clear_mail_id() {
  mail_id_ = 0u;
}
::google::protobuf::uint32 PBGlobalMail::mail_id() const {
  // @@protoc_insertion_point(field_get:PBGlobalMail.mail_id)
  return mail_id_;
}
void PBGlobalMail::set_mail_id(::google::protobuf::uint32 value) {
  
  mail_id_ = value;
  // @@protoc_insertion_point(field_set:PBGlobalMail.mail_id)
}

// optional uint32 mail_type = 2;
void PBGlobalMail::clear_mail_type() {
  mail_type_ = 0u;
}
::google::protobuf::uint32 PBGlobalMail::mail_type() const {
  // @@protoc_insertion_point(field_get:PBGlobalMail.mail_type)
  return mail_type_;
}
void PBGlobalMail::set_mail_type(::google::protobuf::uint32 value) {
  
  mail_type_ = value;
  // @@protoc_insertion_point(field_set:PBGlobalMail.mail_type)
}

// optional uint32 create_time = 3;
void PBGlobalMail::clear_create_time() {
  create_time_ = 0u;
}
::google::protobuf::uint32 PBGlobalMail::create_time() const {
  // @@protoc_insertion_point(field_get:PBGlobalMail.create_time)
  return create_time_;
}
void PBGlobalMail::set_create_time(::google::protobuf::uint32 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:PBGlobalMail.create_time)
}

// optional string mail_title = 4;
void PBGlobalMail::clear_mail_title() {
  mail_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBGlobalMail::mail_title() const {
  // @@protoc_insertion_point(field_get:PBGlobalMail.mail_title)
  return mail_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBGlobalMail::set_mail_title(const ::std::string& value) {
  
  mail_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBGlobalMail.mail_title)
}
void PBGlobalMail::set_mail_title(const char* value) {
  
  mail_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBGlobalMail.mail_title)
}
void PBGlobalMail::set_mail_title(const char* value, size_t size) {
  
  mail_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBGlobalMail.mail_title)
}
::std::string* PBGlobalMail::mutable_mail_title() {
  
  // @@protoc_insertion_point(field_mutable:PBGlobalMail.mail_title)
  return mail_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBGlobalMail::release_mail_title() {
  // @@protoc_insertion_point(field_release:PBGlobalMail.mail_title)
  
  return mail_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBGlobalMail::set_allocated_mail_title(::std::string* mail_title) {
  if (mail_title != NULL) {
    
  } else {
    
  }
  mail_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_title);
  // @@protoc_insertion_point(field_set_allocated:PBGlobalMail.mail_title)
}

// optional string mail_body = 5;
void PBGlobalMail::clear_mail_body() {
  mail_body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBGlobalMail::mail_body() const {
  // @@protoc_insertion_point(field_get:PBGlobalMail.mail_body)
  return mail_body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBGlobalMail::set_mail_body(const ::std::string& value) {
  
  mail_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBGlobalMail.mail_body)
}
void PBGlobalMail::set_mail_body(const char* value) {
  
  mail_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBGlobalMail.mail_body)
}
void PBGlobalMail::set_mail_body(const char* value, size_t size) {
  
  mail_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBGlobalMail.mail_body)
}
::std::string* PBGlobalMail::mutable_mail_body() {
  
  // @@protoc_insertion_point(field_mutable:PBGlobalMail.mail_body)
  return mail_body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBGlobalMail::release_mail_body() {
  // @@protoc_insertion_point(field_release:PBGlobalMail.mail_body)
  
  return mail_body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBGlobalMail::set_allocated_mail_body(::std::string* mail_body) {
  if (mail_body != NULL) {
    
  } else {
    
  }
  mail_body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mail_body);
  // @@protoc_insertion_point(field_set_allocated:PBGlobalMail.mail_body)
}

// optional .PBMailItemList mail_item = 6;
bool PBGlobalMail::has_mail_item() const {
  return this != internal_default_instance() && mail_item_ != NULL;
}
void PBGlobalMail::clear_mail_item() {
  if (GetArenaNoVirtual() == NULL && mail_item_ != NULL) delete mail_item_;
  mail_item_ = NULL;
}
const ::PBMailItemList& PBGlobalMail::mail_item() const {
  // @@protoc_insertion_point(field_get:PBGlobalMail.mail_item)
  return mail_item_ != NULL ? *mail_item_
                         : *::PBMailItemList::internal_default_instance();
}
::PBMailItemList* PBGlobalMail::mutable_mail_item() {
  
  if (mail_item_ == NULL) {
    mail_item_ = new ::PBMailItemList;
  }
  // @@protoc_insertion_point(field_mutable:PBGlobalMail.mail_item)
  return mail_item_;
}
::PBMailItemList* PBGlobalMail::release_mail_item() {
  // @@protoc_insertion_point(field_release:PBGlobalMail.mail_item)
  
  ::PBMailItemList* temp = mail_item_;
  mail_item_ = NULL;
  return temp;
}
void PBGlobalMail::set_allocated_mail_item(::PBMailItemList* mail_item) {
  delete mail_item_;
  mail_item_ = mail_item;
  if (mail_item) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGlobalMail.mail_item)
}

inline const PBGlobalMail* PBGlobalMail::internal_default_instance() {
  return &PBGlobalMail_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBGameEventParam::kParamFieldNumber;
const int PBGameEventParam::kStrParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBGameEventParam::PBGameEventParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_dbmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBGameEventParam)
}

void PBGameEventParam::InitAsDefaultInstance() {
}

PBGameEventParam::PBGameEventParam(const PBGameEventParam& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBGameEventParam)
}

void PBGameEventParam::SharedCtor() {
  _cached_size_ = 0;
}

PBGameEventParam::~PBGameEventParam() {
  // @@protoc_insertion_point(destructor:PBGameEventParam)
  SharedDtor();
}

void PBGameEventParam::SharedDtor() {
}

void PBGameEventParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGameEventParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBGameEventParam_descriptor_;
}

const PBGameEventParam& PBGameEventParam::default_instance() {
  protobuf_InitDefaults_dbmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBGameEventParam> PBGameEventParam_default_instance_;

PBGameEventParam* PBGameEventParam::New(::google::protobuf::Arena* arena) const {
  PBGameEventParam* n = new PBGameEventParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBGameEventParam::Clear() {
// @@protoc_insertion_point(message_clear_start:PBGameEventParam)
  param_.Clear();
  strparam_.Clear();
}

bool PBGameEventParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBGameEventParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 Param = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_param())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_param())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_StrParam;
        break;
      }

      // repeated string StrParam = 2;
      case 2: {
        if (tag == 18) {
         parse_StrParam:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_strparam()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strparam(this->strparam_size() - 1).data(),
            this->strparam(this->strparam_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBGameEventParam.StrParam"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_StrParam;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBGameEventParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBGameEventParam)
  return false;
#undef DO_
}

void PBGameEventParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBGameEventParam)
  // repeated uint32 Param = 1;
  if (this->param_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_param_cached_byte_size_);
  }
  for (int i = 0; i < this->param_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->param(i), output);
  }

  // repeated string StrParam = 2;
  for (int i = 0; i < this->strparam_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strparam(i).data(), this->strparam(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBGameEventParam.StrParam");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strparam(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PBGameEventParam)
}

::google::protobuf::uint8* PBGameEventParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBGameEventParam)
  // repeated uint32 Param = 1;
  if (this->param_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _param_cached_byte_size_, target);
  }
  for (int i = 0; i < this->param_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->param(i), target);
  }

  // repeated string StrParam = 2;
  for (int i = 0; i < this->strparam_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strparam(i).data(), this->strparam(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBGameEventParam.StrParam");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->strparam(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBGameEventParam)
  return target;
}

size_t PBGameEventParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBGameEventParam)
  size_t total_size = 0;

  // repeated uint32 Param = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->param_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->param(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _param_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string StrParam = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strparam_size());
  for (int i = 0; i < this->strparam_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->strparam(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGameEventParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBGameEventParam)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBGameEventParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBGameEventParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBGameEventParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBGameEventParam)
    UnsafeMergeFrom(*source);
  }
}

void PBGameEventParam::MergeFrom(const PBGameEventParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBGameEventParam)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBGameEventParam::UnsafeMergeFrom(const PBGameEventParam& from) {
  GOOGLE_DCHECK(&from != this);
  param_.UnsafeMergeFrom(from.param_);
  strparam_.UnsafeMergeFrom(from.strparam_);
}

void PBGameEventParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBGameEventParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGameEventParam::CopyFrom(const PBGameEventParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBGameEventParam)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBGameEventParam::IsInitialized() const {

  return true;
}

void PBGameEventParam::Swap(PBGameEventParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBGameEventParam::InternalSwap(PBGameEventParam* other) {
  param_.UnsafeArenaSwap(&other->param_);
  strparam_.UnsafeArenaSwap(&other->strparam_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBGameEventParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBGameEventParam_descriptor_;
  metadata.reflection = PBGameEventParam_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBGameEventParam

// repeated uint32 Param = 1;
int PBGameEventParam::param_size() const {
  return param_.size();
}
void PBGameEventParam::clear_param() {
  param_.Clear();
}
::google::protobuf::uint32 PBGameEventParam::param(int index) const {
  // @@protoc_insertion_point(field_get:PBGameEventParam.Param)
  return param_.Get(index);
}
void PBGameEventParam::set_param(int index, ::google::protobuf::uint32 value) {
  param_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBGameEventParam.Param)
}
void PBGameEventParam::add_param(::google::protobuf::uint32 value) {
  param_.Add(value);
  // @@protoc_insertion_point(field_add:PBGameEventParam.Param)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PBGameEventParam::param() const {
  // @@protoc_insertion_point(field_list:PBGameEventParam.Param)
  return param_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PBGameEventParam::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:PBGameEventParam.Param)
  return &param_;
}

// repeated string StrParam = 2;
int PBGameEventParam::strparam_size() const {
  return strparam_.size();
}
void PBGameEventParam::clear_strparam() {
  strparam_.Clear();
}
const ::std::string& PBGameEventParam::strparam(int index) const {
  // @@protoc_insertion_point(field_get:PBGameEventParam.StrParam)
  return strparam_.Get(index);
}
::std::string* PBGameEventParam::mutable_strparam(int index) {
  // @@protoc_insertion_point(field_mutable:PBGameEventParam.StrParam)
  return strparam_.Mutable(index);
}
void PBGameEventParam::set_strparam(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PBGameEventParam.StrParam)
  strparam_.Mutable(index)->assign(value);
}
void PBGameEventParam::set_strparam(int index, const char* value) {
  strparam_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PBGameEventParam.StrParam)
}
void PBGameEventParam::set_strparam(int index, const char* value, size_t size) {
  strparam_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PBGameEventParam.StrParam)
}
::std::string* PBGameEventParam::add_strparam() {
  // @@protoc_insertion_point(field_add_mutable:PBGameEventParam.StrParam)
  return strparam_.Add();
}
void PBGameEventParam::add_strparam(const ::std::string& value) {
  strparam_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PBGameEventParam.StrParam)
}
void PBGameEventParam::add_strparam(const char* value) {
  strparam_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PBGameEventParam.StrParam)
}
void PBGameEventParam::add_strparam(const char* value, size_t size) {
  strparam_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PBGameEventParam.StrParam)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBGameEventParam::strparam() const {
  // @@protoc_insertion_point(field_list:PBGameEventParam.StrParam)
  return strparam_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
PBGameEventParam::mutable_strparam() {
  // @@protoc_insertion_point(field_mutable_list:PBGameEventParam.StrParam)
  return &strparam_;
}

inline const PBGameEventParam* PBGameEventParam::internal_default_instance() {
  return &PBGameEventParam_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBGameEvent::kEventIdFieldNumber;
const int PBGameEvent::kEventTypeFieldNumber;
const int PBGameEvent::kRoleIdFieldNumber;
const int PBGameEvent::kCreateTimeFieldNumber;
const int PBGameEvent::kEventParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBGameEvent::PBGameEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_dbmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBGameEvent)
}

void PBGameEvent::InitAsDefaultInstance() {
  event_param_ = const_cast< ::PBGameEventParam*>(
      ::PBGameEventParam::internal_default_instance());
}

PBGameEvent::PBGameEvent(const PBGameEvent& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBGameEvent)
}

void PBGameEvent::SharedCtor() {
  event_param_ = NULL;
  ::memset(&event_id_, 0, reinterpret_cast<char*>(&create_time_) -
    reinterpret_cast<char*>(&event_id_) + sizeof(create_time_));
  _cached_size_ = 0;
}

PBGameEvent::~PBGameEvent() {
  // @@protoc_insertion_point(destructor:PBGameEvent)
  SharedDtor();
}

void PBGameEvent::SharedDtor() {
  if (this != &PBGameEvent_default_instance_.get()) {
    delete event_param_;
  }
}

void PBGameEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBGameEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBGameEvent_descriptor_;
}

const PBGameEvent& PBGameEvent::default_instance() {
  protobuf_InitDefaults_dbmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PBGameEvent> PBGameEvent_default_instance_;

PBGameEvent* PBGameEvent::New(::google::protobuf::Arena* arena) const {
  PBGameEvent* n = new PBGameEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBGameEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:PBGameEvent)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PBGameEvent, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBGameEvent*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(event_id_, create_time_);
  if (GetArenaNoVirtual() == NULL && event_param_ != NULL) delete event_param_;
  event_param_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool PBGameEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBGameEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 event_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_event_type;
        break;
      }

      // optional uint32 event_type = 2;
      case 2: {
        if (tag == 16) {
         parse_event_type:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_role_id;
        break;
      }

      // optional uint32 role_id = 3;
      case 3: {
        if (tag == 24) {
         parse_role_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &role_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_create_time;
        break;
      }

      // optional uint32 create_time = 4;
      case 4: {
        if (tag == 32) {
         parse_create_time:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_event_param;
        break;
      }

      // optional .PBGameEventParam event_param = 5;
      case 5: {
        if (tag == 42) {
         parse_event_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_param()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBGameEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBGameEvent)
  return false;
#undef DO_
}

void PBGameEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBGameEvent)
  // optional uint32 event_id = 1;
  if (this->event_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->event_id(), output);
  }

  // optional uint32 event_type = 2;
  if (this->event_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->event_type(), output);
  }

  // optional uint32 role_id = 3;
  if (this->role_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->role_id(), output);
  }

  // optional uint32 create_time = 4;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->create_time(), output);
  }

  // optional .PBGameEventParam event_param = 5;
  if (this->has_event_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->event_param_, output);
  }

  // @@protoc_insertion_point(serialize_end:PBGameEvent)
}

::google::protobuf::uint8* PBGameEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBGameEvent)
  // optional uint32 event_id = 1;
  if (this->event_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->event_id(), target);
  }

  // optional uint32 event_type = 2;
  if (this->event_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->event_type(), target);
  }

  // optional uint32 role_id = 3;
  if (this->role_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->role_id(), target);
  }

  // optional uint32 create_time = 4;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->create_time(), target);
  }

  // optional .PBGameEventParam event_param = 5;
  if (this->has_event_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->event_param_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PBGameEvent)
  return target;
}

size_t PBGameEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBGameEvent)
  size_t total_size = 0;

  // optional uint32 event_id = 1;
  if (this->event_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->event_id());
  }

  // optional uint32 event_type = 2;
  if (this->event_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->event_type());
  }

  // optional uint32 role_id = 3;
  if (this->role_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->role_id());
  }

  // optional uint32 create_time = 4;
  if (this->create_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->create_time());
  }

  // optional .PBGameEventParam event_param = 5;
  if (this->has_event_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->event_param_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBGameEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBGameEvent)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBGameEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBGameEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBGameEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBGameEvent)
    UnsafeMergeFrom(*source);
  }
}

void PBGameEvent::MergeFrom(const PBGameEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBGameEvent)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PBGameEvent::UnsafeMergeFrom(const PBGameEvent& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.event_id() != 0) {
    set_event_id(from.event_id());
  }
  if (from.event_type() != 0) {
    set_event_type(from.event_type());
  }
  if (from.role_id() != 0) {
    set_role_id(from.role_id());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.has_event_param()) {
    mutable_event_param()->::PBGameEventParam::MergeFrom(from.event_param());
  }
}

void PBGameEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBGameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBGameEvent::CopyFrom(const PBGameEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBGameEvent)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PBGameEvent::IsInitialized() const {

  return true;
}

void PBGameEvent::Swap(PBGameEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBGameEvent::InternalSwap(PBGameEvent* other) {
  std::swap(event_id_, other->event_id_);
  std::swap(event_type_, other->event_type_);
  std::swap(role_id_, other->role_id_);
  std::swap(create_time_, other->create_time_);
  std::swap(event_param_, other->event_param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBGameEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBGameEvent_descriptor_;
  metadata.reflection = PBGameEvent_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBGameEvent

// optional uint32 event_id = 1;
void PBGameEvent::clear_event_id() {
  event_id_ = 0u;
}
::google::protobuf::uint32 PBGameEvent::event_id() const {
  // @@protoc_insertion_point(field_get:PBGameEvent.event_id)
  return event_id_;
}
void PBGameEvent::set_event_id(::google::protobuf::uint32 value) {
  
  event_id_ = value;
  // @@protoc_insertion_point(field_set:PBGameEvent.event_id)
}

// optional uint32 event_type = 2;
void PBGameEvent::clear_event_type() {
  event_type_ = 0u;
}
::google::protobuf::uint32 PBGameEvent::event_type() const {
  // @@protoc_insertion_point(field_get:PBGameEvent.event_type)
  return event_type_;
}
void PBGameEvent::set_event_type(::google::protobuf::uint32 value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:PBGameEvent.event_type)
}

// optional uint32 role_id = 3;
void PBGameEvent::clear_role_id() {
  role_id_ = 0u;
}
::google::protobuf::uint32 PBGameEvent::role_id() const {
  // @@protoc_insertion_point(field_get:PBGameEvent.role_id)
  return role_id_;
}
void PBGameEvent::set_role_id(::google::protobuf::uint32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:PBGameEvent.role_id)
}

// optional uint32 create_time = 4;
void PBGameEvent::clear_create_time() {
  create_time_ = 0u;
}
::google::protobuf::uint32 PBGameEvent::create_time() const {
  // @@protoc_insertion_point(field_get:PBGameEvent.create_time)
  return create_time_;
}
void PBGameEvent::set_create_time(::google::protobuf::uint32 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:PBGameEvent.create_time)
}

// optional .PBGameEventParam event_param = 5;
bool PBGameEvent::has_event_param() const {
  return this != internal_default_instance() && event_param_ != NULL;
}
void PBGameEvent::clear_event_param() {
  if (GetArenaNoVirtual() == NULL && event_param_ != NULL) delete event_param_;
  event_param_ = NULL;
}
const ::PBGameEventParam& PBGameEvent::event_param() const {
  // @@protoc_insertion_point(field_get:PBGameEvent.event_param)
  return event_param_ != NULL ? *event_param_
                         : *::PBGameEventParam::internal_default_instance();
}
::PBGameEventParam* PBGameEvent::mutable_event_param() {
  
  if (event_param_ == NULL) {
    event_param_ = new ::PBGameEventParam;
  }
  // @@protoc_insertion_point(field_mutable:PBGameEvent.event_param)
  return event_param_;
}
::PBGameEventParam* PBGameEvent::release_event_param() {
  // @@protoc_insertion_point(field_release:PBGameEvent.event_param)
  
  ::PBGameEventParam* temp = event_param_;
  event_param_ = NULL;
  return temp;
}
void PBGameEvent::set_allocated_event_param(::PBGameEventParam* event_param) {
  delete event_param_;
  event_param_ = event_param;
  if (event_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PBGameEvent.event_param)
}

inline const PBGameEvent* PBGameEvent::internal_default_instance() {
  return &PBGameEvent_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
