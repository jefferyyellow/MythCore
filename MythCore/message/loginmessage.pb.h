// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: loginmessage.proto

#ifndef PROTOBUF_loginmessage_2eproto__INCLUDED
#define PROTOBUF_loginmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_loginmessage_2eproto();
void protobuf_InitDefaults_loginmessage_2eproto();
void protobuf_AssignDesc_loginmessage_2eproto();
void protobuf_ShutdownFile_loginmessage_2eproto();

class CMessageLoginRequest;

enum LOGIN_MSG_ID {
  ID_ERROR = 0,
  ID_C2S_REQUEST_LOGIN = 1,
  LOGIN_MSG_ID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LOGIN_MSG_ID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LOGIN_MSG_ID_IsValid(int value);
const LOGIN_MSG_ID LOGIN_MSG_ID_MIN = ID_ERROR;
const LOGIN_MSG_ID LOGIN_MSG_ID_MAX = ID_C2S_REQUEST_LOGIN;
const int LOGIN_MSG_ID_ARRAYSIZE = LOGIN_MSG_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* LOGIN_MSG_ID_descriptor();
inline const ::std::string& LOGIN_MSG_ID_Name(LOGIN_MSG_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    LOGIN_MSG_ID_descriptor(), value);
}
inline bool LOGIN_MSG_ID_Parse(
    const ::std::string& name, LOGIN_MSG_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LOGIN_MSG_ID>(
    LOGIN_MSG_ID_descriptor(), name, value);
}
// ===================================================================

class CMessageLoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMessageLoginRequest) */ {
 public:
  CMessageLoginRequest();
  virtual ~CMessageLoginRequest();

  CMessageLoginRequest(const CMessageLoginRequest& from);

  inline CMessageLoginRequest& operator=(const CMessageLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMessageLoginRequest& default_instance();

  static const CMessageLoginRequest* internal_default_instance();

  void Swap(CMessageLoginRequest* other);

  // implements Message ----------------------------------------------

  inline CMessageLoginRequest* New() const { return New(NULL); }

  CMessageLoginRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMessageLoginRequest& from);
  void MergeFrom(const CMessageLoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMessageLoginRequest* other);
  void UnsafeMergeFrom(const CMessageLoginRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 ChannelID = 2;
  void clear_channelid();
  static const int kChannelIDFieldNumber = 2;
  ::google::protobuf::uint32 channelid() const;
  void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 WorldID = 3;
  void clear_worldid();
  static const int kWorldIDFieldNumber = 3;
  ::google::protobuf::uint32 worldid() const;
  void set_worldid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMessageLoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 worldid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_loginmessage_2eproto_impl();
  friend void  protobuf_AddDesc_loginmessage_2eproto_impl();
  friend void protobuf_AssignDesc_loginmessage_2eproto();
  friend void protobuf_ShutdownFile_loginmessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CMessageLoginRequest> CMessageLoginRequest_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMessageLoginRequest

// optional string Name = 1;
inline void CMessageLoginRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMessageLoginRequest::name() const {
  // @@protoc_insertion_point(field_get:CMessageLoginRequest.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLoginRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMessageLoginRequest.Name)
}
inline void CMessageLoginRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMessageLoginRequest.Name)
}
inline void CMessageLoginRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMessageLoginRequest.Name)
}
inline ::std::string* CMessageLoginRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CMessageLoginRequest.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMessageLoginRequest::release_name() {
  // @@protoc_insertion_point(field_release:CMessageLoginRequest.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMessageLoginRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMessageLoginRequest.Name)
}

// optional uint32 ChannelID = 2;
inline void CMessageLoginRequest::clear_channelid() {
  channelid_ = 0u;
}
inline ::google::protobuf::uint32 CMessageLoginRequest::channelid() const {
  // @@protoc_insertion_point(field_get:CMessageLoginRequest.ChannelID)
  return channelid_;
}
inline void CMessageLoginRequest::set_channelid(::google::protobuf::uint32 value) {
  
  channelid_ = value;
  // @@protoc_insertion_point(field_set:CMessageLoginRequest.ChannelID)
}

// optional uint32 WorldID = 3;
inline void CMessageLoginRequest::clear_worldid() {
  worldid_ = 0u;
}
inline ::google::protobuf::uint32 CMessageLoginRequest::worldid() const {
  // @@protoc_insertion_point(field_get:CMessageLoginRequest.WorldID)
  return worldid_;
}
inline void CMessageLoginRequest::set_worldid(::google::protobuf::uint32 value) {
  
  worldid_ = value;
  // @@protoc_insertion_point(field_set:CMessageLoginRequest.WorldID)
}

inline const CMessageLoginRequest* CMessageLoginRequest::internal_default_instance() {
  return &CMessageLoginRequest_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::LOGIN_MSG_ID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LOGIN_MSG_ID>() {
  return ::LOGIN_MSG_ID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_loginmessage_2eproto__INCLUDED
