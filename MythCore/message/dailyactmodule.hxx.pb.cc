// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dailyactmodule.hxx

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dailyactmodule.hxx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CActivityStatusNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CActivityStatusNotify_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DAILY_ACT_MODULE_MSG_ID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_dailyactmodule_2ehxx() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_dailyactmodule_2ehxx() {
  protobuf_AddDesc_dailyactmodule_2ehxx();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dailyactmodule.hxx");
  GOOGLE_CHECK(file != NULL);
  CActivityStatusNotify_descriptor_ = file->message_type(0);
  static const int CActivityStatusNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CActivityStatusNotify, activityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CActivityStatusNotify, status_),
  };
  CActivityStatusNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CActivityStatusNotify_descriptor_,
      CActivityStatusNotify::internal_default_instance(),
      CActivityStatusNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CActivityStatusNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CActivityStatusNotify, _internal_metadata_));
  DAILY_ACT_MODULE_MSG_ID_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dailyactmodule_2ehxx);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CActivityStatusNotify_descriptor_, CActivityStatusNotify::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dailyactmodule_2ehxx() {
  CActivityStatusNotify_default_instance_.Shutdown();
  delete CActivityStatusNotify_reflection_;
}

void protobuf_InitDefaults_dailyactmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  CActivityStatusNotify_default_instance_.DefaultConstruct();
  CActivityStatusNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_dailyactmodule_2ehxx_once_);
void protobuf_InitDefaults_dailyactmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_dailyactmodule_2ehxx_once_,
                 &protobuf_InitDefaults_dailyactmodule_2ehxx_impl);
}
void protobuf_AddDesc_dailyactmodule_2ehxx_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_dailyactmodule_2ehxx();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022dailyactmodule.hxx\";\n\025CActivityStatusN"
    "otify\022\022\n\nActivityID\030\001 \001(\r\022\016\n\006Status\030\002 \001("
    "\r*[\n\027DAILY_ACT_MODULE_MSG_ID\022\035\n\031ID_DAILY"
    "_ACT_MODULE_ERROR\020\000\022!\n\034ID_S2C_NOTIFY_ACT"
    "IVITY_START\020\200@b\006proto3", 182);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dailyactmodule.hxx", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dailyactmodule_2ehxx);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_dailyactmodule_2ehxx_once_);
void protobuf_AddDesc_dailyactmodule_2ehxx() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_dailyactmodule_2ehxx_once_,
                 &protobuf_AddDesc_dailyactmodule_2ehxx_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dailyactmodule_2ehxx {
  StaticDescriptorInitializer_dailyactmodule_2ehxx() {
    protobuf_AddDesc_dailyactmodule_2ehxx();
  }
} static_descriptor_initializer_dailyactmodule_2ehxx_;
const ::google::protobuf::EnumDescriptor* DAILY_ACT_MODULE_MSG_ID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DAILY_ACT_MODULE_MSG_ID_descriptor_;
}
bool DAILY_ACT_MODULE_MSG_ID_IsValid(int value) {
  switch (value) {
    case 0:
    case 8192:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CActivityStatusNotify::kActivityIDFieldNumber;
const int CActivityStatusNotify::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CActivityStatusNotify::CActivityStatusNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_dailyactmodule_2ehxx();
  SharedCtor();
  // @@protoc_insertion_point(constructor:CActivityStatusNotify)
}

void CActivityStatusNotify::InitAsDefaultInstance() {
}

CActivityStatusNotify::CActivityStatusNotify(const CActivityStatusNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CActivityStatusNotify)
}

void CActivityStatusNotify::SharedCtor() {
  ::memset(&activityid_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&activityid_) + sizeof(status_));
  _cached_size_ = 0;
}

CActivityStatusNotify::~CActivityStatusNotify() {
  // @@protoc_insertion_point(destructor:CActivityStatusNotify)
  SharedDtor();
}

void CActivityStatusNotify::SharedDtor() {
}

void CActivityStatusNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CActivityStatusNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CActivityStatusNotify_descriptor_;
}

const CActivityStatusNotify& CActivityStatusNotify::default_instance() {
  protobuf_InitDefaults_dailyactmodule_2ehxx();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CActivityStatusNotify> CActivityStatusNotify_default_instance_;

CActivityStatusNotify* CActivityStatusNotify::New(::google::protobuf::Arena* arena) const {
  CActivityStatusNotify* n = new CActivityStatusNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CActivityStatusNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:CActivityStatusNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CActivityStatusNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CActivityStatusNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(activityid_, status_);

#undef ZR_HELPER_
#undef ZR_

}

bool CActivityStatusNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CActivityStatusNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ActivityID = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activityid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Status;
        break;
      }

      // optional uint32 Status = 2;
      case 2: {
        if (tag == 16) {
         parse_Status:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CActivityStatusNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CActivityStatusNotify)
  return false;
#undef DO_
}

void CActivityStatusNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CActivityStatusNotify)
  // optional uint32 ActivityID = 1;
  if (this->activityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->activityid(), output);
  }

  // optional uint32 Status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:CActivityStatusNotify)
}

::google::protobuf::uint8* CActivityStatusNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CActivityStatusNotify)
  // optional uint32 ActivityID = 1;
  if (this->activityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->activityid(), target);
  }

  // optional uint32 Status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CActivityStatusNotify)
  return target;
}

size_t CActivityStatusNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CActivityStatusNotify)
  size_t total_size = 0;

  // optional uint32 ActivityID = 1;
  if (this->activityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activityid());
  }

  // optional uint32 Status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CActivityStatusNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CActivityStatusNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CActivityStatusNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CActivityStatusNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CActivityStatusNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CActivityStatusNotify)
    UnsafeMergeFrom(*source);
  }
}

void CActivityStatusNotify::MergeFrom(const CActivityStatusNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CActivityStatusNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CActivityStatusNotify::UnsafeMergeFrom(const CActivityStatusNotify& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.activityid() != 0) {
    set_activityid(from.activityid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void CActivityStatusNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CActivityStatusNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CActivityStatusNotify::CopyFrom(const CActivityStatusNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CActivityStatusNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CActivityStatusNotify::IsInitialized() const {

  return true;
}

void CActivityStatusNotify::Swap(CActivityStatusNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CActivityStatusNotify::InternalSwap(CActivityStatusNotify* other) {
  std::swap(activityid_, other->activityid_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CActivityStatusNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CActivityStatusNotify_descriptor_;
  metadata.reflection = CActivityStatusNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CActivityStatusNotify

// optional uint32 ActivityID = 1;
void CActivityStatusNotify::clear_activityid() {
  activityid_ = 0u;
}
::google::protobuf::uint32 CActivityStatusNotify::activityid() const {
  // @@protoc_insertion_point(field_get:CActivityStatusNotify.ActivityID)
  return activityid_;
}
void CActivityStatusNotify::set_activityid(::google::protobuf::uint32 value) {
  
  activityid_ = value;
  // @@protoc_insertion_point(field_set:CActivityStatusNotify.ActivityID)
}

// optional uint32 Status = 2;
void CActivityStatusNotify::clear_status() {
  status_ = 0u;
}
::google::protobuf::uint32 CActivityStatusNotify::status() const {
  // @@protoc_insertion_point(field_get:CActivityStatusNotify.Status)
  return status_;
}
void CActivityStatusNotify::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:CActivityStatusNotify.Status)
}

inline const CActivityStatusNotify* CActivityStatusNotify::internal_default_instance() {
  return &CActivityStatusNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
